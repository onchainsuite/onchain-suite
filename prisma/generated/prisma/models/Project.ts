
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Project` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Project
 * 
 */
export type ProjectModel = runtime.Types.Result.DefaultSelection<Prisma.$ProjectPayload>

export type AggregateProject = {
  _count: ProjectCountAggregateOutputType | null
  _min: ProjectMinAggregateOutputType | null
  _max: ProjectMaxAggregateOutputType | null
}

export type ProjectMinAggregateOutputType = {
  id: string | null
  organizationId: string | null
  name: string | null
  description: string | null
  slug: string | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProjectMaxAggregateOutputType = {
  id: string | null
  organizationId: string | null
  name: string | null
  description: string | null
  slug: string | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProjectCountAggregateOutputType = {
  id: number
  organizationId: number
  name: number
  description: number
  slug: number
  settings: number
  isActive: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProjectMinAggregateInputType = {
  id?: true
  organizationId?: true
  name?: true
  description?: true
  slug?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
}

export type ProjectMaxAggregateInputType = {
  id?: true
  organizationId?: true
  name?: true
  description?: true
  slug?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
}

export type ProjectCountAggregateInputType = {
  id?: true
  organizationId?: true
  name?: true
  description?: true
  slug?: true
  settings?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProjectAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Project to aggregate.
   */
  where?: Prisma.ProjectWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Projects to fetch.
   */
  orderBy?: Prisma.ProjectOrderByWithRelationInput | Prisma.ProjectOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProjectWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Projects from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Projects.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Projects
  **/
  _count?: true | ProjectCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProjectMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProjectMaxAggregateInputType
}

export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
      [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProject[P]>
    : Prisma.GetScalarType<T[P], AggregateProject[P]>
}




export type ProjectGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProjectWhereInput
  orderBy?: Prisma.ProjectOrderByWithAggregationInput | Prisma.ProjectOrderByWithAggregationInput[]
  by: Prisma.ProjectScalarFieldEnum[] | Prisma.ProjectScalarFieldEnum
  having?: Prisma.ProjectScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProjectCountAggregateInputType | true
  _min?: ProjectMinAggregateInputType
  _max?: ProjectMaxAggregateInputType
}

export type ProjectGroupByOutputType = {
  id: string
  organizationId: string | null
  name: string
  description: string | null
  slug: string
  settings: runtime.JsonValue
  isActive: boolean
  createdAt: Date
  updatedAt: Date
  _count: ProjectCountAggregateOutputType | null
  _min: ProjectMinAggregateOutputType | null
  _max: ProjectMaxAggregateOutputType | null
}

type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProjectGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProjectGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProjectGroupByOutputType[P]>
      }
    >
  >



export type ProjectWhereInput = {
  AND?: Prisma.ProjectWhereInput | Prisma.ProjectWhereInput[]
  OR?: Prisma.ProjectWhereInput[]
  NOT?: Prisma.ProjectWhereInput | Prisma.ProjectWhereInput[]
  id?: Prisma.StringFilter<"Project"> | string
  organizationId?: Prisma.StringNullableFilter<"Project"> | string | null
  name?: Prisma.StringFilter<"Project"> | string
  description?: Prisma.StringNullableFilter<"Project"> | string | null
  slug?: Prisma.StringFilter<"Project"> | string
  settings?: Prisma.JsonFilter<"Project">
  isActive?: Prisma.BoolFilter<"Project"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Project"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Project"> | Date | string
  automationFlows?: Prisma.AutomationFlowListRelationFilter
  emailTemplates?: Prisma.EmailTemplateListRelationFilter
  integrations?: Prisma.IntegrationListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  analyticsEvents?: Prisma.AnalyticsEventListRelationFilter
  sessions?: Prisma.SessionListRelationFilter
  organization?: Prisma.XOR<Prisma.OrganizationNullableScalarRelationFilter, Prisma.OrganizationWhereInput> | null
  projectMembers?: Prisma.ProjectMemberListRelationFilter
  campaigns?: Prisma.CampaignListRelationFilter
  subscribers?: Prisma.SubscriberListRelationFilter
}

export type ProjectOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  organizationId?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  slug?: Prisma.SortOrder
  settings?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  automationFlows?: Prisma.AutomationFlowOrderByRelationAggregateInput
  emailTemplates?: Prisma.EmailTemplateOrderByRelationAggregateInput
  integrations?: Prisma.IntegrationOrderByRelationAggregateInput
  notifications?: Prisma.NotificationOrderByRelationAggregateInput
  analyticsEvents?: Prisma.AnalyticsEventOrderByRelationAggregateInput
  sessions?: Prisma.SessionOrderByRelationAggregateInput
  organization?: Prisma.OrganizationOrderByWithRelationInput
  projectMembers?: Prisma.ProjectMemberOrderByRelationAggregateInput
  campaigns?: Prisma.CampaignOrderByRelationAggregateInput
  subscribers?: Prisma.SubscriberOrderByRelationAggregateInput
}

export type ProjectWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  organizationId_slug?: Prisma.ProjectOrganizationIdSlugCompoundUniqueInput
  AND?: Prisma.ProjectWhereInput | Prisma.ProjectWhereInput[]
  OR?: Prisma.ProjectWhereInput[]
  NOT?: Prisma.ProjectWhereInput | Prisma.ProjectWhereInput[]
  organizationId?: Prisma.StringNullableFilter<"Project"> | string | null
  name?: Prisma.StringFilter<"Project"> | string
  description?: Prisma.StringNullableFilter<"Project"> | string | null
  slug?: Prisma.StringFilter<"Project"> | string
  settings?: Prisma.JsonFilter<"Project">
  isActive?: Prisma.BoolFilter<"Project"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Project"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Project"> | Date | string
  automationFlows?: Prisma.AutomationFlowListRelationFilter
  emailTemplates?: Prisma.EmailTemplateListRelationFilter
  integrations?: Prisma.IntegrationListRelationFilter
  notifications?: Prisma.NotificationListRelationFilter
  analyticsEvents?: Prisma.AnalyticsEventListRelationFilter
  sessions?: Prisma.SessionListRelationFilter
  organization?: Prisma.XOR<Prisma.OrganizationNullableScalarRelationFilter, Prisma.OrganizationWhereInput> | null
  projectMembers?: Prisma.ProjectMemberListRelationFilter
  campaigns?: Prisma.CampaignListRelationFilter
  subscribers?: Prisma.SubscriberListRelationFilter
}, "id" | "organizationId_slug">

export type ProjectOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  organizationId?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  slug?: Prisma.SortOrder
  settings?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProjectCountOrderByAggregateInput
  _max?: Prisma.ProjectMaxOrderByAggregateInput
  _min?: Prisma.ProjectMinOrderByAggregateInput
}

export type ProjectScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProjectScalarWhereWithAggregatesInput | Prisma.ProjectScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProjectScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProjectScalarWhereWithAggregatesInput | Prisma.ProjectScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Project"> | string
  organizationId?: Prisma.StringNullableWithAggregatesFilter<"Project"> | string | null
  name?: Prisma.StringWithAggregatesFilter<"Project"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Project"> | string | null
  slug?: Prisma.StringWithAggregatesFilter<"Project"> | string
  settings?: Prisma.JsonWithAggregatesFilter<"Project">
  isActive?: Prisma.BoolWithAggregatesFilter<"Project"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Project"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Project"> | Date | string
}

export type ProjectCreateInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateManyInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProjectUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProjectUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProjectNullableScalarRelationFilter = {
  is?: Prisma.ProjectWhereInput | null
  isNot?: Prisma.ProjectWhereInput | null
}

export type ProjectListRelationFilter = {
  every?: Prisma.ProjectWhereInput
  some?: Prisma.ProjectWhereInput
  none?: Prisma.ProjectWhereInput
}

export type ProjectOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProjectOrganizationIdSlugCompoundUniqueInput = {
  organizationId: string
  slug: string
}

export type ProjectCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  settings?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProjectMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProjectMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  slug?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProjectScalarRelationFilter = {
  is?: Prisma.ProjectWhereInput
  isNot?: Prisma.ProjectWhereInput
}

export type ProjectCreateNestedOneWithoutSessionsInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutSessionsInput, Prisma.ProjectUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutSessionsInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneWithoutSessionsNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutSessionsInput, Prisma.ProjectUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutSessionsInput
  upsert?: Prisma.ProjectUpsertWithoutSessionsInput
  disconnect?: Prisma.ProjectWhereInput | boolean
  delete?: Prisma.ProjectWhereInput | boolean
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutSessionsInput, Prisma.ProjectUpdateWithoutSessionsInput>, Prisma.ProjectUncheckedUpdateWithoutSessionsInput>
}

export type ProjectCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutOrganizationInput, Prisma.ProjectUncheckedCreateWithoutOrganizationInput> | Prisma.ProjectCreateWithoutOrganizationInput[] | Prisma.ProjectUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutOrganizationInput | Prisma.ProjectCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ProjectCreateManyOrganizationInputEnvelope
  connect?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
}

export type ProjectUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutOrganizationInput, Prisma.ProjectUncheckedCreateWithoutOrganizationInput> | Prisma.ProjectCreateWithoutOrganizationInput[] | Prisma.ProjectUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutOrganizationInput | Prisma.ProjectCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ProjectCreateManyOrganizationInputEnvelope
  connect?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
}

export type ProjectUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutOrganizationInput, Prisma.ProjectUncheckedCreateWithoutOrganizationInput> | Prisma.ProjectCreateWithoutOrganizationInput[] | Prisma.ProjectUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutOrganizationInput | Prisma.ProjectCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ProjectUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ProjectUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ProjectCreateManyOrganizationInputEnvelope
  set?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  disconnect?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  delete?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  connect?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  update?: Prisma.ProjectUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ProjectUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ProjectUpdateManyWithWhereWithoutOrganizationInput | Prisma.ProjectUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ProjectScalarWhereInput | Prisma.ProjectScalarWhereInput[]
}

export type ProjectUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutOrganizationInput, Prisma.ProjectUncheckedCreateWithoutOrganizationInput> | Prisma.ProjectCreateWithoutOrganizationInput[] | Prisma.ProjectUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutOrganizationInput | Prisma.ProjectCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ProjectUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ProjectUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ProjectCreateManyOrganizationInputEnvelope
  set?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  disconnect?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  delete?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  connect?: Prisma.ProjectWhereUniqueInput | Prisma.ProjectWhereUniqueInput[]
  update?: Prisma.ProjectUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ProjectUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ProjectUpdateManyWithWhereWithoutOrganizationInput | Prisma.ProjectUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ProjectScalarWhereInput | Prisma.ProjectScalarWhereInput[]
}

export type ProjectCreateNestedOneWithoutProjectMembersInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutProjectMembersInput, Prisma.ProjectUncheckedCreateWithoutProjectMembersInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutProjectMembersInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutProjectMembersNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutProjectMembersInput, Prisma.ProjectUncheckedCreateWithoutProjectMembersInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutProjectMembersInput
  upsert?: Prisma.ProjectUpsertWithoutProjectMembersInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutProjectMembersInput, Prisma.ProjectUpdateWithoutProjectMembersInput>, Prisma.ProjectUncheckedUpdateWithoutProjectMembersInput>
}

export type ProjectCreateNestedOneWithoutCampaignsInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutCampaignsInput, Prisma.ProjectUncheckedCreateWithoutCampaignsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutCampaignsInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutCampaignsNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutCampaignsInput, Prisma.ProjectUncheckedCreateWithoutCampaignsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutCampaignsInput
  upsert?: Prisma.ProjectUpsertWithoutCampaignsInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutCampaignsInput, Prisma.ProjectUpdateWithoutCampaignsInput>, Prisma.ProjectUncheckedUpdateWithoutCampaignsInput>
}

export type ProjectCreateNestedOneWithoutSubscribersInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutSubscribersInput, Prisma.ProjectUncheckedCreateWithoutSubscribersInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutSubscribersInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutSubscribersNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutSubscribersInput, Prisma.ProjectUncheckedCreateWithoutSubscribersInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutSubscribersInput
  upsert?: Prisma.ProjectUpsertWithoutSubscribersInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutSubscribersInput, Prisma.ProjectUpdateWithoutSubscribersInput>, Prisma.ProjectUncheckedUpdateWithoutSubscribersInput>
}

export type ProjectCreateNestedOneWithoutAutomationFlowsInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutAutomationFlowsInput, Prisma.ProjectUncheckedCreateWithoutAutomationFlowsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutAutomationFlowsInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutAutomationFlowsNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutAutomationFlowsInput, Prisma.ProjectUncheckedCreateWithoutAutomationFlowsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutAutomationFlowsInput
  upsert?: Prisma.ProjectUpsertWithoutAutomationFlowsInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutAutomationFlowsInput, Prisma.ProjectUpdateWithoutAutomationFlowsInput>, Prisma.ProjectUncheckedUpdateWithoutAutomationFlowsInput>
}

export type ProjectCreateNestedOneWithoutEmailTemplatesInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutEmailTemplatesInput, Prisma.ProjectUncheckedCreateWithoutEmailTemplatesInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutEmailTemplatesInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutEmailTemplatesNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutEmailTemplatesInput, Prisma.ProjectUncheckedCreateWithoutEmailTemplatesInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutEmailTemplatesInput
  upsert?: Prisma.ProjectUpsertWithoutEmailTemplatesInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutEmailTemplatesInput, Prisma.ProjectUpdateWithoutEmailTemplatesInput>, Prisma.ProjectUncheckedUpdateWithoutEmailTemplatesInput>
}

export type ProjectCreateNestedOneWithoutAnalyticsEventsInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutAnalyticsEventsInput, Prisma.ProjectUncheckedCreateWithoutAnalyticsEventsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutAnalyticsEventsInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutAnalyticsEventsNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutAnalyticsEventsInput, Prisma.ProjectUncheckedCreateWithoutAnalyticsEventsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutAnalyticsEventsInput
  upsert?: Prisma.ProjectUpsertWithoutAnalyticsEventsInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutAnalyticsEventsInput, Prisma.ProjectUpdateWithoutAnalyticsEventsInput>, Prisma.ProjectUncheckedUpdateWithoutAnalyticsEventsInput>
}

export type ProjectCreateNestedOneWithoutNotificationsInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutNotificationsInput, Prisma.ProjectUncheckedCreateWithoutNotificationsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutNotificationsInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneWithoutNotificationsNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutNotificationsInput, Prisma.ProjectUncheckedCreateWithoutNotificationsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutNotificationsInput
  upsert?: Prisma.ProjectUpsertWithoutNotificationsInput
  disconnect?: Prisma.ProjectWhereInput | boolean
  delete?: Prisma.ProjectWhereInput | boolean
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutNotificationsInput, Prisma.ProjectUpdateWithoutNotificationsInput>, Prisma.ProjectUncheckedUpdateWithoutNotificationsInput>
}

export type ProjectCreateNestedOneWithoutIntegrationsInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutIntegrationsInput, Prisma.ProjectUncheckedCreateWithoutIntegrationsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutIntegrationsInput
  connect?: Prisma.ProjectWhereUniqueInput
}

export type ProjectUpdateOneRequiredWithoutIntegrationsNestedInput = {
  create?: Prisma.XOR<Prisma.ProjectCreateWithoutIntegrationsInput, Prisma.ProjectUncheckedCreateWithoutIntegrationsInput>
  connectOrCreate?: Prisma.ProjectCreateOrConnectWithoutIntegrationsInput
  upsert?: Prisma.ProjectUpsertWithoutIntegrationsInput
  connect?: Prisma.ProjectWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProjectUpdateToOneWithWhereWithoutIntegrationsInput, Prisma.ProjectUpdateWithoutIntegrationsInput>, Prisma.ProjectUncheckedUpdateWithoutIntegrationsInput>
}

export type ProjectCreateWithoutSessionsInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutSessionsInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutSessionsInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutSessionsInput, Prisma.ProjectUncheckedCreateWithoutSessionsInput>
}

export type ProjectUpsertWithoutSessionsInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutSessionsInput, Prisma.ProjectUncheckedUpdateWithoutSessionsInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutSessionsInput, Prisma.ProjectUncheckedCreateWithoutSessionsInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutSessionsInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutSessionsInput, Prisma.ProjectUncheckedUpdateWithoutSessionsInput>
}

export type ProjectUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutOrganizationInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutOrganizationInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutOrganizationInput, Prisma.ProjectUncheckedCreateWithoutOrganizationInput>
}

export type ProjectCreateManyOrganizationInputEnvelope = {
  data: Prisma.ProjectCreateManyOrganizationInput | Prisma.ProjectCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type ProjectUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ProjectWhereUniqueInput
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutOrganizationInput, Prisma.ProjectUncheckedUpdateWithoutOrganizationInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutOrganizationInput, Prisma.ProjectUncheckedCreateWithoutOrganizationInput>
}

export type ProjectUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ProjectWhereUniqueInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutOrganizationInput, Prisma.ProjectUncheckedUpdateWithoutOrganizationInput>
}

export type ProjectUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.ProjectScalarWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateManyMutationInput, Prisma.ProjectUncheckedUpdateManyWithoutOrganizationInput>
}

export type ProjectScalarWhereInput = {
  AND?: Prisma.ProjectScalarWhereInput | Prisma.ProjectScalarWhereInput[]
  OR?: Prisma.ProjectScalarWhereInput[]
  NOT?: Prisma.ProjectScalarWhereInput | Prisma.ProjectScalarWhereInput[]
  id?: Prisma.StringFilter<"Project"> | string
  organizationId?: Prisma.StringNullableFilter<"Project"> | string | null
  name?: Prisma.StringFilter<"Project"> | string
  description?: Prisma.StringNullableFilter<"Project"> | string | null
  slug?: Prisma.StringFilter<"Project"> | string
  settings?: Prisma.JsonFilter<"Project">
  isActive?: Prisma.BoolFilter<"Project"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Project"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Project"> | Date | string
}

export type ProjectCreateWithoutProjectMembersInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutProjectMembersInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutProjectMembersInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutProjectMembersInput, Prisma.ProjectUncheckedCreateWithoutProjectMembersInput>
}

export type ProjectUpsertWithoutProjectMembersInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutProjectMembersInput, Prisma.ProjectUncheckedUpdateWithoutProjectMembersInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutProjectMembersInput, Prisma.ProjectUncheckedCreateWithoutProjectMembersInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutProjectMembersInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutProjectMembersInput, Prisma.ProjectUncheckedUpdateWithoutProjectMembersInput>
}

export type ProjectUpdateWithoutProjectMembersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutProjectMembersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutCampaignsInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutCampaignsInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutCampaignsInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutCampaignsInput, Prisma.ProjectUncheckedCreateWithoutCampaignsInput>
}

export type ProjectUpsertWithoutCampaignsInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutCampaignsInput, Prisma.ProjectUncheckedUpdateWithoutCampaignsInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutCampaignsInput, Prisma.ProjectUncheckedCreateWithoutCampaignsInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutCampaignsInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutCampaignsInput, Prisma.ProjectUncheckedUpdateWithoutCampaignsInput>
}

export type ProjectUpdateWithoutCampaignsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutCampaignsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutSubscribersInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutSubscribersInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutSubscribersInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutSubscribersInput, Prisma.ProjectUncheckedCreateWithoutSubscribersInput>
}

export type ProjectUpsertWithoutSubscribersInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutSubscribersInput, Prisma.ProjectUncheckedUpdateWithoutSubscribersInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutSubscribersInput, Prisma.ProjectUncheckedCreateWithoutSubscribersInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutSubscribersInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutSubscribersInput, Prisma.ProjectUncheckedUpdateWithoutSubscribersInput>
}

export type ProjectUpdateWithoutSubscribersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutSubscribersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutAutomationFlowsInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutAutomationFlowsInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutAutomationFlowsInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutAutomationFlowsInput, Prisma.ProjectUncheckedCreateWithoutAutomationFlowsInput>
}

export type ProjectUpsertWithoutAutomationFlowsInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutAutomationFlowsInput, Prisma.ProjectUncheckedUpdateWithoutAutomationFlowsInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutAutomationFlowsInput, Prisma.ProjectUncheckedCreateWithoutAutomationFlowsInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutAutomationFlowsInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutAutomationFlowsInput, Prisma.ProjectUncheckedUpdateWithoutAutomationFlowsInput>
}

export type ProjectUpdateWithoutAutomationFlowsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutAutomationFlowsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutEmailTemplatesInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutEmailTemplatesInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutEmailTemplatesInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutEmailTemplatesInput, Prisma.ProjectUncheckedCreateWithoutEmailTemplatesInput>
}

export type ProjectUpsertWithoutEmailTemplatesInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutEmailTemplatesInput, Prisma.ProjectUncheckedUpdateWithoutEmailTemplatesInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutEmailTemplatesInput, Prisma.ProjectUncheckedCreateWithoutEmailTemplatesInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutEmailTemplatesInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutEmailTemplatesInput, Prisma.ProjectUncheckedUpdateWithoutEmailTemplatesInput>
}

export type ProjectUpdateWithoutEmailTemplatesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutEmailTemplatesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutAnalyticsEventsInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutAnalyticsEventsInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutAnalyticsEventsInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutAnalyticsEventsInput, Prisma.ProjectUncheckedCreateWithoutAnalyticsEventsInput>
}

export type ProjectUpsertWithoutAnalyticsEventsInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutAnalyticsEventsInput, Prisma.ProjectUncheckedUpdateWithoutAnalyticsEventsInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutAnalyticsEventsInput, Prisma.ProjectUncheckedCreateWithoutAnalyticsEventsInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutAnalyticsEventsInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutAnalyticsEventsInput, Prisma.ProjectUncheckedUpdateWithoutAnalyticsEventsInput>
}

export type ProjectUpdateWithoutAnalyticsEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutAnalyticsEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutNotificationsInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutNotificationsInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  integrations?: Prisma.IntegrationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutNotificationsInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutNotificationsInput, Prisma.ProjectUncheckedCreateWithoutNotificationsInput>
}

export type ProjectUpsertWithoutNotificationsInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutNotificationsInput, Prisma.ProjectUncheckedUpdateWithoutNotificationsInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutNotificationsInput, Prisma.ProjectUncheckedCreateWithoutNotificationsInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutNotificationsInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutNotificationsInput, Prisma.ProjectUncheckedUpdateWithoutNotificationsInput>
}

export type ProjectUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutNotificationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateWithoutIntegrationsInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionCreateNestedManyWithoutProjectInput
  organization?: Prisma.OrganizationCreateNestedOneWithoutProjectsInput
  projectMembers?: Prisma.ProjectMemberCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutProjectInput
}

export type ProjectUncheckedCreateWithoutIntegrationsInput = {
  id?: string
  organizationId?: string | null
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedCreateNestedManyWithoutProjectInput
  emailTemplates?: Prisma.EmailTemplateUncheckedCreateNestedManyWithoutProjectInput
  notifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutProjectInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutProjectInput
  projectMembers?: Prisma.ProjectMemberUncheckedCreateNestedManyWithoutProjectInput
  campaigns?: Prisma.CampaignUncheckedCreateNestedManyWithoutProjectInput
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutProjectInput
}

export type ProjectCreateOrConnectWithoutIntegrationsInput = {
  where: Prisma.ProjectWhereUniqueInput
  create: Prisma.XOR<Prisma.ProjectCreateWithoutIntegrationsInput, Prisma.ProjectUncheckedCreateWithoutIntegrationsInput>
}

export type ProjectUpsertWithoutIntegrationsInput = {
  update: Prisma.XOR<Prisma.ProjectUpdateWithoutIntegrationsInput, Prisma.ProjectUncheckedUpdateWithoutIntegrationsInput>
  create: Prisma.XOR<Prisma.ProjectCreateWithoutIntegrationsInput, Prisma.ProjectUncheckedCreateWithoutIntegrationsInput>
  where?: Prisma.ProjectWhereInput
}

export type ProjectUpdateToOneWithWhereWithoutIntegrationsInput = {
  where?: Prisma.ProjectWhereInput
  data: Prisma.XOR<Prisma.ProjectUpdateWithoutIntegrationsInput, Prisma.ProjectUncheckedUpdateWithoutIntegrationsInput>
}

export type ProjectUpdateWithoutIntegrationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  organization?: Prisma.OrganizationUpdateOneWithoutProjectsNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutIntegrationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectCreateManyOrganizationInput = {
  id?: string
  name: string
  description?: string | null
  slug: string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProjectUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  automationFlows?: Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput
  emailTemplates?: Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput
  integrations?: Prisma.IntegrationUncheckedUpdateManyWithoutProjectNestedInput
  notifications?: Prisma.NotificationUncheckedUpdateManyWithoutProjectNestedInput
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutProjectNestedInput
  projectMembers?: Prisma.ProjectMemberUncheckedUpdateManyWithoutProjectNestedInput
  campaigns?: Prisma.CampaignUncheckedUpdateManyWithoutProjectNestedInput
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutProjectNestedInput
}

export type ProjectUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  slug?: Prisma.StringFieldUpdateOperationsInput | string
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ProjectCountOutputType
 */

export type ProjectCountOutputType = {
  automationFlows: number
  emailTemplates: number
  integrations: number
  notifications: number
  analyticsEvents: number
  sessions: number
  projectMembers: number
  campaigns: number
  subscribers: number
}

export type ProjectCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  automationFlows?: boolean | ProjectCountOutputTypeCountAutomationFlowsArgs
  emailTemplates?: boolean | ProjectCountOutputTypeCountEmailTemplatesArgs
  integrations?: boolean | ProjectCountOutputTypeCountIntegrationsArgs
  notifications?: boolean | ProjectCountOutputTypeCountNotificationsArgs
  analyticsEvents?: boolean | ProjectCountOutputTypeCountAnalyticsEventsArgs
  sessions?: boolean | ProjectCountOutputTypeCountSessionsArgs
  projectMembers?: boolean | ProjectCountOutputTypeCountProjectMembersArgs
  campaigns?: boolean | ProjectCountOutputTypeCountCampaignsArgs
  subscribers?: boolean | ProjectCountOutputTypeCountSubscribersArgs
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProjectCountOutputType
   */
  select?: Prisma.ProjectCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountAutomationFlowsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AutomationFlowWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountEmailTemplatesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EmailTemplateWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountIntegrationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.IntegrationWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountNotificationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountAnalyticsEventsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AnalyticsEventWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountSessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SessionWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountProjectMembersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProjectMemberWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountCampaignsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CampaignWhereInput
}

/**
 * ProjectCountOutputType without action
 */
export type ProjectCountOutputTypeCountSubscribersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SubscriberWhereInput
}


export type ProjectSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  organizationId?: boolean
  name?: boolean
  description?: boolean
  slug?: boolean
  settings?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  automationFlows?: boolean | Prisma.Project$automationFlowsArgs<ExtArgs>
  emailTemplates?: boolean | Prisma.Project$emailTemplatesArgs<ExtArgs>
  integrations?: boolean | Prisma.Project$integrationsArgs<ExtArgs>
  notifications?: boolean | Prisma.Project$notificationsArgs<ExtArgs>
  analyticsEvents?: boolean | Prisma.Project$analyticsEventsArgs<ExtArgs>
  sessions?: boolean | Prisma.Project$sessionsArgs<ExtArgs>
  organization?: boolean | Prisma.Project$organizationArgs<ExtArgs>
  projectMembers?: boolean | Prisma.Project$projectMembersArgs<ExtArgs>
  campaigns?: boolean | Prisma.Project$campaignsArgs<ExtArgs>
  subscribers?: boolean | Prisma.Project$subscribersArgs<ExtArgs>
  _count?: boolean | Prisma.ProjectCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["project"]>

export type ProjectSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  organizationId?: boolean
  name?: boolean
  description?: boolean
  slug?: boolean
  settings?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organization?: boolean | Prisma.Project$organizationArgs<ExtArgs>
}, ExtArgs["result"]["project"]>

export type ProjectSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  organizationId?: boolean
  name?: boolean
  description?: boolean
  slug?: boolean
  settings?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  organization?: boolean | Prisma.Project$organizationArgs<ExtArgs>
}, ExtArgs["result"]["project"]>

export type ProjectSelectScalar = {
  id?: boolean
  organizationId?: boolean
  name?: boolean
  description?: boolean
  slug?: boolean
  settings?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProjectOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "organizationId" | "name" | "description" | "slug" | "settings" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["project"]>
export type ProjectInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  automationFlows?: boolean | Prisma.Project$automationFlowsArgs<ExtArgs>
  emailTemplates?: boolean | Prisma.Project$emailTemplatesArgs<ExtArgs>
  integrations?: boolean | Prisma.Project$integrationsArgs<ExtArgs>
  notifications?: boolean | Prisma.Project$notificationsArgs<ExtArgs>
  analyticsEvents?: boolean | Prisma.Project$analyticsEventsArgs<ExtArgs>
  sessions?: boolean | Prisma.Project$sessionsArgs<ExtArgs>
  organization?: boolean | Prisma.Project$organizationArgs<ExtArgs>
  projectMembers?: boolean | Prisma.Project$projectMembersArgs<ExtArgs>
  campaigns?: boolean | Prisma.Project$campaignsArgs<ExtArgs>
  subscribers?: boolean | Prisma.Project$subscribersArgs<ExtArgs>
  _count?: boolean | Prisma.ProjectCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProjectIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organization?: boolean | Prisma.Project$organizationArgs<ExtArgs>
}
export type ProjectIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organization?: boolean | Prisma.Project$organizationArgs<ExtArgs>
}

export type $ProjectPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Project"
  objects: {
    automationFlows: Prisma.$AutomationFlowPayload<ExtArgs>[]
    emailTemplates: Prisma.$EmailTemplatePayload<ExtArgs>[]
    integrations: Prisma.$IntegrationPayload<ExtArgs>[]
    notifications: Prisma.$NotificationPayload<ExtArgs>[]
    analyticsEvents: Prisma.$AnalyticsEventPayload<ExtArgs>[]
    sessions: Prisma.$SessionPayload<ExtArgs>[]
    organization: Prisma.$OrganizationPayload<ExtArgs> | null
    projectMembers: Prisma.$ProjectMemberPayload<ExtArgs>[]
    campaigns: Prisma.$CampaignPayload<ExtArgs>[]
    subscribers: Prisma.$SubscriberPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    organizationId: string | null
    name: string
    description: string | null
    slug: string
    settings: runtime.JsonValue
    isActive: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["project"]>
  composites: {}
}

export type ProjectGetPayload<S extends boolean | null | undefined | ProjectDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProjectPayload, S>

export type ProjectCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProjectFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProjectCountAggregateInputType | true
  }

export interface ProjectDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Project'], meta: { name: 'Project' } }
  /**
   * Find zero or one Project that matches the filter.
   * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
   * @example
   * // Get one Project
   * const project = await prisma.project.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProjectFindUniqueArgs>(args: Prisma.SelectSubset<T, ProjectFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Project that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
   * @example
   * // Get one Project
   * const project = await prisma.project.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProjectFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Project that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectFindFirstArgs} args - Arguments to find a Project
   * @example
   * // Get one Project
   * const project = await prisma.project.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProjectFindFirstArgs>(args?: Prisma.SelectSubset<T, ProjectFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Project that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
   * @example
   * // Get one Project
   * const project = await prisma.project.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProjectFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Projects that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Projects
   * const projects = await prisma.project.findMany()
   * 
   * // Get first 10 Projects
   * const projects = await prisma.project.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProjectFindManyArgs>(args?: Prisma.SelectSubset<T, ProjectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Project.
   * @param {ProjectCreateArgs} args - Arguments to create a Project.
   * @example
   * // Create one Project
   * const Project = await prisma.project.create({
   *   data: {
   *     // ... data to create a Project
   *   }
   * })
   * 
   */
  create<T extends ProjectCreateArgs>(args: Prisma.SelectSubset<T, ProjectCreateArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Projects.
   * @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
   * @example
   * // Create many Projects
   * const project = await prisma.project.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProjectCreateManyArgs>(args?: Prisma.SelectSubset<T, ProjectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Projects and returns the data saved in the database.
   * @param {ProjectCreateManyAndReturnArgs} args - Arguments to create many Projects.
   * @example
   * // Create many Projects
   * const project = await prisma.project.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Projects and only return the `id`
   * const projectWithIdOnly = await prisma.project.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProjectCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProjectCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Project.
   * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
   * @example
   * // Delete one Project
   * const Project = await prisma.project.delete({
   *   where: {
   *     // ... filter to delete one Project
   *   }
   * })
   * 
   */
  delete<T extends ProjectDeleteArgs>(args: Prisma.SelectSubset<T, ProjectDeleteArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Project.
   * @param {ProjectUpdateArgs} args - Arguments to update one Project.
   * @example
   * // Update one Project
   * const project = await prisma.project.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProjectUpdateArgs>(args: Prisma.SelectSubset<T, ProjectUpdateArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Projects.
   * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
   * @example
   * // Delete a few Projects
   * const { count } = await prisma.project.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProjectDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProjectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Projects.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Projects
   * const project = await prisma.project.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProjectUpdateManyArgs>(args: Prisma.SelectSubset<T, ProjectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Projects and returns the data updated in the database.
   * @param {ProjectUpdateManyAndReturnArgs} args - Arguments to update many Projects.
   * @example
   * // Update many Projects
   * const project = await prisma.project.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Projects and only return the `id`
   * const projectWithIdOnly = await prisma.project.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProjectUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProjectUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Project.
   * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
   * @example
   * // Update or create a Project
   * const project = await prisma.project.upsert({
   *   create: {
   *     // ... data to create a Project
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Project we want to update
   *   }
   * })
   */
  upsert<T extends ProjectUpsertArgs>(args: Prisma.SelectSubset<T, ProjectUpsertArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Projects.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
   * @example
   * // Count the number of Projects
   * const count = await prisma.project.count({
   *   where: {
   *     // ... the filter for the Projects we want to count
   *   }
   * })
  **/
  count<T extends ProjectCountArgs>(
    args?: Prisma.Subset<T, ProjectCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProjectCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Project.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProjectAggregateArgs>(args: Prisma.Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

  /**
   * Group by Project.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProjectGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProjectGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProjectGroupByArgs['orderBy'] }
      : { orderBy?: ProjectGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Project model
 */
readonly fields: ProjectFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Project.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProjectClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  automationFlows<T extends Prisma.Project$automationFlowsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$automationFlowsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AutomationFlowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  emailTemplates<T extends Prisma.Project$emailTemplatesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$emailTemplatesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EmailTemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  integrations<T extends Prisma.Project$integrationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$integrationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$IntegrationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notifications<T extends Prisma.Project$notificationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  analyticsEvents<T extends Prisma.Project$analyticsEventsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$analyticsEventsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AnalyticsEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  sessions<T extends Prisma.Project$sessionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  organization<T extends Prisma.Project$organizationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$organizationArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  projectMembers<T extends Prisma.Project$projectMembersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$projectMembersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProjectMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  campaigns<T extends Prisma.Project$campaignsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$campaignsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  subscribers<T extends Prisma.Project$subscribersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Project$subscribersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SubscriberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Project model
 */
export interface ProjectFieldRefs {
  readonly id: Prisma.FieldRef<"Project", 'String'>
  readonly organizationId: Prisma.FieldRef<"Project", 'String'>
  readonly name: Prisma.FieldRef<"Project", 'String'>
  readonly description: Prisma.FieldRef<"Project", 'String'>
  readonly slug: Prisma.FieldRef<"Project", 'String'>
  readonly settings: Prisma.FieldRef<"Project", 'Json'>
  readonly isActive: Prisma.FieldRef<"Project", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Project", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Project", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Project findUnique
 */
export type ProjectFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * Filter, which Project to fetch.
   */
  where: Prisma.ProjectWhereUniqueInput
}

/**
 * Project findUniqueOrThrow
 */
export type ProjectFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * Filter, which Project to fetch.
   */
  where: Prisma.ProjectWhereUniqueInput
}

/**
 * Project findFirst
 */
export type ProjectFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * Filter, which Project to fetch.
   */
  where?: Prisma.ProjectWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Projects to fetch.
   */
  orderBy?: Prisma.ProjectOrderByWithRelationInput | Prisma.ProjectOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Projects.
   */
  cursor?: Prisma.ProjectWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Projects from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Projects.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Projects.
   */
  distinct?: Prisma.ProjectScalarFieldEnum | Prisma.ProjectScalarFieldEnum[]
}

/**
 * Project findFirstOrThrow
 */
export type ProjectFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * Filter, which Project to fetch.
   */
  where?: Prisma.ProjectWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Projects to fetch.
   */
  orderBy?: Prisma.ProjectOrderByWithRelationInput | Prisma.ProjectOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Projects.
   */
  cursor?: Prisma.ProjectWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Projects from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Projects.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Projects.
   */
  distinct?: Prisma.ProjectScalarFieldEnum | Prisma.ProjectScalarFieldEnum[]
}

/**
 * Project findMany
 */
export type ProjectFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * Filter, which Projects to fetch.
   */
  where?: Prisma.ProjectWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Projects to fetch.
   */
  orderBy?: Prisma.ProjectOrderByWithRelationInput | Prisma.ProjectOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Projects.
   */
  cursor?: Prisma.ProjectWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Projects from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Projects.
   */
  skip?: number
  distinct?: Prisma.ProjectScalarFieldEnum | Prisma.ProjectScalarFieldEnum[]
}

/**
 * Project create
 */
export type ProjectCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * The data needed to create a Project.
   */
  data: Prisma.XOR<Prisma.ProjectCreateInput, Prisma.ProjectUncheckedCreateInput>
}

/**
 * Project createMany
 */
export type ProjectCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Projects.
   */
  data: Prisma.ProjectCreateManyInput | Prisma.ProjectCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Project createManyAndReturn
 */
export type ProjectCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * The data used to create many Projects.
   */
  data: Prisma.ProjectCreateManyInput | Prisma.ProjectCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Project update
 */
export type ProjectUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * The data needed to update a Project.
   */
  data: Prisma.XOR<Prisma.ProjectUpdateInput, Prisma.ProjectUncheckedUpdateInput>
  /**
   * Choose, which Project to update.
   */
  where: Prisma.ProjectWhereUniqueInput
}

/**
 * Project updateMany
 */
export type ProjectUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Projects.
   */
  data: Prisma.XOR<Prisma.ProjectUpdateManyMutationInput, Prisma.ProjectUncheckedUpdateManyInput>
  /**
   * Filter which Projects to update
   */
  where?: Prisma.ProjectWhereInput
  /**
   * Limit how many Projects to update.
   */
  limit?: number
}

/**
 * Project updateManyAndReturn
 */
export type ProjectUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * The data used to update Projects.
   */
  data: Prisma.XOR<Prisma.ProjectUpdateManyMutationInput, Prisma.ProjectUncheckedUpdateManyInput>
  /**
   * Filter which Projects to update
   */
  where?: Prisma.ProjectWhereInput
  /**
   * Limit how many Projects to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Project upsert
 */
export type ProjectUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * The filter to search for the Project to update in case it exists.
   */
  where: Prisma.ProjectWhereUniqueInput
  /**
   * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
   */
  create: Prisma.XOR<Prisma.ProjectCreateInput, Prisma.ProjectUncheckedCreateInput>
  /**
   * In case the Project was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProjectUpdateInput, Prisma.ProjectUncheckedUpdateInput>
}

/**
 * Project delete
 */
export type ProjectDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
  /**
   * Filter which Project to delete.
   */
  where: Prisma.ProjectWhereUniqueInput
}

/**
 * Project deleteMany
 */
export type ProjectDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Projects to delete
   */
  where?: Prisma.ProjectWhereInput
  /**
   * Limit how many Projects to delete.
   */
  limit?: number
}

/**
 * Project.automationFlows
 */
export type Project$automationFlowsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null
  where?: Prisma.AutomationFlowWhereInput
  orderBy?: Prisma.AutomationFlowOrderByWithRelationInput | Prisma.AutomationFlowOrderByWithRelationInput[]
  cursor?: Prisma.AutomationFlowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AutomationFlowScalarFieldEnum | Prisma.AutomationFlowScalarFieldEnum[]
}

/**
 * Project.emailTemplates
 */
export type Project$emailTemplatesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null
  where?: Prisma.EmailTemplateWhereInput
  orderBy?: Prisma.EmailTemplateOrderByWithRelationInput | Prisma.EmailTemplateOrderByWithRelationInput[]
  cursor?: Prisma.EmailTemplateWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EmailTemplateScalarFieldEnum | Prisma.EmailTemplateScalarFieldEnum[]
}

/**
 * Project.integrations
 */
export type Project$integrationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Integration
   */
  select?: Prisma.IntegrationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Integration
   */
  omit?: Prisma.IntegrationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.IntegrationInclude<ExtArgs> | null
  where?: Prisma.IntegrationWhereInput
  orderBy?: Prisma.IntegrationOrderByWithRelationInput | Prisma.IntegrationOrderByWithRelationInput[]
  cursor?: Prisma.IntegrationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.IntegrationScalarFieldEnum | Prisma.IntegrationScalarFieldEnum[]
}

/**
 * Project.notifications
 */
export type Project$notificationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * Project.analyticsEvents
 */
export type Project$analyticsEventsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null
  where?: Prisma.AnalyticsEventWhereInput
  orderBy?: Prisma.AnalyticsEventOrderByWithRelationInput | Prisma.AnalyticsEventOrderByWithRelationInput[]
  cursor?: Prisma.AnalyticsEventWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AnalyticsEventScalarFieldEnum | Prisma.AnalyticsEventScalarFieldEnum[]
}

/**
 * Project.sessions
 */
export type Project$sessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null
  where?: Prisma.SessionWhereInput
  orderBy?: Prisma.SessionOrderByWithRelationInput | Prisma.SessionOrderByWithRelationInput[]
  cursor?: Prisma.SessionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[]
}

/**
 * Project.organization
 */
export type Project$organizationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  where?: Prisma.OrganizationWhereInput
}

/**
 * Project.projectMembers
 */
export type Project$projectMembersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProjectMember
   */
  select?: Prisma.ProjectMemberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProjectMember
   */
  omit?: Prisma.ProjectMemberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectMemberInclude<ExtArgs> | null
  where?: Prisma.ProjectMemberWhereInput
  orderBy?: Prisma.ProjectMemberOrderByWithRelationInput | Prisma.ProjectMemberOrderByWithRelationInput[]
  cursor?: Prisma.ProjectMemberWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProjectMemberScalarFieldEnum | Prisma.ProjectMemberScalarFieldEnum[]
}

/**
 * Project.campaigns
 */
export type Project$campaignsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null
  where?: Prisma.CampaignWhereInput
  orderBy?: Prisma.CampaignOrderByWithRelationInput | Prisma.CampaignOrderByWithRelationInput[]
  cursor?: Prisma.CampaignWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CampaignScalarFieldEnum | Prisma.CampaignScalarFieldEnum[]
}

/**
 * Project.subscribers
 */
export type Project$subscribersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Subscriber
   */
  select?: Prisma.SubscriberSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Subscriber
   */
  omit?: Prisma.SubscriberOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubscriberInclude<ExtArgs> | null
  where?: Prisma.SubscriberWhereInput
  orderBy?: Prisma.SubscriberOrderByWithRelationInput | Prisma.SubscriberOrderByWithRelationInput[]
  cursor?: Prisma.SubscriberWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SubscriberScalarFieldEnum | Prisma.SubscriberScalarFieldEnum[]
}

/**
 * Project without action
 */
export type ProjectDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Project
   */
  select?: Prisma.ProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Project
   */
  omit?: Prisma.ProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectInclude<ExtArgs> | null
}
