/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `AutomationFlow` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model AutomationFlow
 *
 */
export type AutomationFlowModel =
  runtime.Types.Result.DefaultSelection<Prisma.$AutomationFlowPayload>;

export type AggregateAutomationFlow = {
  _count: AutomationFlowCountAggregateOutputType | null;
  _avg: AutomationFlowAvgAggregateOutputType | null;
  _sum: AutomationFlowSumAggregateOutputType | null;
  _min: AutomationFlowMinAggregateOutputType | null;
  _max: AutomationFlowMaxAggregateOutputType | null;
};

export type AutomationFlowAvgAggregateOutputType = {
  totalTriggered: number | null;
  totalCompleted: number | null;
};

export type AutomationFlowSumAggregateOutputType = {
  totalTriggered: number | null;
  totalCompleted: number | null;
};

export type AutomationFlowMinAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  name: string | null;
  description: string | null;
  triggerType: string | null;
  status: string | null;
  totalTriggered: number | null;
  totalCompleted: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type AutomationFlowMaxAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  name: string | null;
  description: string | null;
  triggerType: string | null;
  status: string | null;
  totalTriggered: number | null;
  totalCompleted: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type AutomationFlowCountAggregateOutputType = {
  id: number;
  projectId: number;
  userId: number;
  name: number;
  description: number;
  triggerType: number;
  triggerConfig: number;
  actions: number;
  conditions: number;
  status: number;
  totalTriggered: number;
  totalCompleted: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type AutomationFlowAvgAggregateInputType = {
  totalTriggered?: true;
  totalCompleted?: true;
};

export type AutomationFlowSumAggregateInputType = {
  totalTriggered?: true;
  totalCompleted?: true;
};

export type AutomationFlowMinAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  description?: true;
  triggerType?: true;
  status?: true;
  totalTriggered?: true;
  totalCompleted?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type AutomationFlowMaxAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  description?: true;
  triggerType?: true;
  status?: true;
  totalTriggered?: true;
  totalCompleted?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type AutomationFlowCountAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  description?: true;
  triggerType?: true;
  triggerConfig?: true;
  actions?: true;
  conditions?: true;
  status?: true;
  totalTriggered?: true;
  totalCompleted?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type AutomationFlowAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AutomationFlow to aggregate.
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AutomationFlows to fetch.
   */
  orderBy?:
    | Prisma.AutomationFlowOrderByWithRelationInput
    | Prisma.AutomationFlowOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AutomationFlowWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AutomationFlows from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AutomationFlows.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned AutomationFlows
   **/
  _count?: true | AutomationFlowCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: AutomationFlowAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: AutomationFlowSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AutomationFlowMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AutomationFlowMaxAggregateInputType;
};

export type GetAutomationFlowAggregateType<
  T extends AutomationFlowAggregateArgs,
> = {
  [P in keyof T & keyof AggregateAutomationFlow]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAutomationFlow[P]>
    : Prisma.GetScalarType<T[P], AggregateAutomationFlow[P]>;
};

export type AutomationFlowGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AutomationFlowWhereInput;
  orderBy?:
    | Prisma.AutomationFlowOrderByWithAggregationInput
    | Prisma.AutomationFlowOrderByWithAggregationInput[];
  by:
    | Prisma.AutomationFlowScalarFieldEnum[]
    | Prisma.AutomationFlowScalarFieldEnum;
  having?: Prisma.AutomationFlowScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AutomationFlowCountAggregateInputType | true;
  _avg?: AutomationFlowAvgAggregateInputType;
  _sum?: AutomationFlowSumAggregateInputType;
  _min?: AutomationFlowMinAggregateInputType;
  _max?: AutomationFlowMaxAggregateInputType;
};

export type AutomationFlowGroupByOutputType = {
  id: string;
  projectId: string;
  userId: string;
  name: string;
  description: string | null;
  triggerType: string;
  triggerConfig: runtime.JsonValue;
  actions: runtime.JsonValue;
  conditions: runtime.JsonValue;
  status: string;
  totalTriggered: number;
  totalCompleted: number;
  createdAt: Date;
  updatedAt: Date;
  _count: AutomationFlowCountAggregateOutputType | null;
  _avg: AutomationFlowAvgAggregateOutputType | null;
  _sum: AutomationFlowSumAggregateOutputType | null;
  _min: AutomationFlowMinAggregateOutputType | null;
  _max: AutomationFlowMaxAggregateOutputType | null;
};

type GetAutomationFlowGroupByPayload<T extends AutomationFlowGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<AutomationFlowGroupByOutputType, T["by"]> & {
        [P in keyof T &
          keyof AutomationFlowGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AutomationFlowGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AutomationFlowGroupByOutputType[P]>;
      }
    >
  >;

export type AutomationFlowWhereInput = {
  AND?: Prisma.AutomationFlowWhereInput | Prisma.AutomationFlowWhereInput[];
  OR?: Prisma.AutomationFlowWhereInput[];
  NOT?: Prisma.AutomationFlowWhereInput | Prisma.AutomationFlowWhereInput[];
  id?: Prisma.StringFilter<"AutomationFlow"> | string;
  projectId?: Prisma.StringFilter<"AutomationFlow"> | string;
  userId?: Prisma.StringFilter<"AutomationFlow"> | string;
  name?: Prisma.StringFilter<"AutomationFlow"> | string;
  description?: Prisma.StringNullableFilter<"AutomationFlow"> | string | null;
  triggerType?: Prisma.StringFilter<"AutomationFlow"> | string;
  triggerConfig?: Prisma.JsonFilter<"AutomationFlow">;
  actions?: Prisma.JsonFilter<"AutomationFlow">;
  conditions?: Prisma.JsonFilter<"AutomationFlow">;
  status?: Prisma.StringFilter<"AutomationFlow"> | string;
  totalTriggered?: Prisma.IntFilter<"AutomationFlow"> | number;
  totalCompleted?: Prisma.IntFilter<"AutomationFlow"> | number;
  createdAt?: Prisma.DateTimeFilter<"AutomationFlow"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"AutomationFlow"> | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventListRelationFilter;
  project?: Prisma.XOR<
    Prisma.ProjectScalarRelationFilter,
    Prisma.ProjectWhereInput
  >;
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
};

export type AutomationFlowOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrderInput | Prisma.SortOrder;
  triggerType?: Prisma.SortOrder;
  triggerConfig?: Prisma.SortOrder;
  actions?: Prisma.SortOrder;
  conditions?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  analyticsEvents?: Prisma.AnalyticsEventOrderByRelationAggregateInput;
  project?: Prisma.ProjectOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
};

export type AutomationFlowWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.AutomationFlowWhereInput | Prisma.AutomationFlowWhereInput[];
    OR?: Prisma.AutomationFlowWhereInput[];
    NOT?: Prisma.AutomationFlowWhereInput | Prisma.AutomationFlowWhereInput[];
    projectId?: Prisma.StringFilter<"AutomationFlow"> | string;
    userId?: Prisma.StringFilter<"AutomationFlow"> | string;
    name?: Prisma.StringFilter<"AutomationFlow"> | string;
    description?: Prisma.StringNullableFilter<"AutomationFlow"> | string | null;
    triggerType?: Prisma.StringFilter<"AutomationFlow"> | string;
    triggerConfig?: Prisma.JsonFilter<"AutomationFlow">;
    actions?: Prisma.JsonFilter<"AutomationFlow">;
    conditions?: Prisma.JsonFilter<"AutomationFlow">;
    status?: Prisma.StringFilter<"AutomationFlow"> | string;
    totalTriggered?: Prisma.IntFilter<"AutomationFlow"> | number;
    totalCompleted?: Prisma.IntFilter<"AutomationFlow"> | number;
    createdAt?: Prisma.DateTimeFilter<"AutomationFlow"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"AutomationFlow"> | Date | string;
    analyticsEvents?: Prisma.AnalyticsEventListRelationFilter;
    project?: Prisma.XOR<
      Prisma.ProjectScalarRelationFilter,
      Prisma.ProjectWhereInput
    >;
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  },
  "id"
>;

export type AutomationFlowOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrderInput | Prisma.SortOrder;
  triggerType?: Prisma.SortOrder;
  triggerConfig?: Prisma.SortOrder;
  actions?: Prisma.SortOrder;
  conditions?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.AutomationFlowCountOrderByAggregateInput;
  _avg?: Prisma.AutomationFlowAvgOrderByAggregateInput;
  _max?: Prisma.AutomationFlowMaxOrderByAggregateInput;
  _min?: Prisma.AutomationFlowMinOrderByAggregateInput;
  _sum?: Prisma.AutomationFlowSumOrderByAggregateInput;
};

export type AutomationFlowScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AutomationFlowScalarWhereWithAggregatesInput
    | Prisma.AutomationFlowScalarWhereWithAggregatesInput[];
  OR?: Prisma.AutomationFlowScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AutomationFlowScalarWhereWithAggregatesInput
    | Prisma.AutomationFlowScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"AutomationFlow"> | string;
  projectId?: Prisma.StringWithAggregatesFilter<"AutomationFlow"> | string;
  userId?: Prisma.StringWithAggregatesFilter<"AutomationFlow"> | string;
  name?: Prisma.StringWithAggregatesFilter<"AutomationFlow"> | string;
  description?:
    | Prisma.StringNullableWithAggregatesFilter<"AutomationFlow">
    | string
    | null;
  triggerType?: Prisma.StringWithAggregatesFilter<"AutomationFlow"> | string;
  triggerConfig?: Prisma.JsonWithAggregatesFilter<"AutomationFlow">;
  actions?: Prisma.JsonWithAggregatesFilter<"AutomationFlow">;
  conditions?: Prisma.JsonWithAggregatesFilter<"AutomationFlow">;
  status?: Prisma.StringWithAggregatesFilter<"AutomationFlow"> | string;
  totalTriggered?: Prisma.IntWithAggregatesFilter<"AutomationFlow"> | number;
  totalCompleted?: Prisma.IntWithAggregatesFilter<"AutomationFlow"> | number;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"AutomationFlow">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"AutomationFlow">
    | Date
    | string;
};

export type AutomationFlowCreateInput = {
  id?: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutAutomationInput;
  project: Prisma.ProjectCreateNestedOneWithoutAutomationFlowsInput;
  user: Prisma.UserCreateNestedOneWithoutAutomationFlowsInput;
};

export type AutomationFlowUncheckedCreateInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutAutomationInput;
};

export type AutomationFlowUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutAutomationNestedInput;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAutomationFlowsNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutAutomationFlowsNestedInput;
};

export type AutomationFlowUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutAutomationNestedInput;
};

export type AutomationFlowCreateManyInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AutomationFlowUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AutomationFlowUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AutomationFlowListRelationFilter = {
  every?: Prisma.AutomationFlowWhereInput;
  some?: Prisma.AutomationFlowWhereInput;
  none?: Prisma.AutomationFlowWhereInput;
};

export type AutomationFlowOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type AutomationFlowCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  triggerType?: Prisma.SortOrder;
  triggerConfig?: Prisma.SortOrder;
  actions?: Prisma.SortOrder;
  conditions?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type AutomationFlowAvgOrderByAggregateInput = {
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
};

export type AutomationFlowMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  triggerType?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type AutomationFlowMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  triggerType?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type AutomationFlowSumOrderByAggregateInput = {
  totalTriggered?: Prisma.SortOrder;
  totalCompleted?: Prisma.SortOrder;
};

export type AutomationFlowNullableScalarRelationFilter = {
  is?: Prisma.AutomationFlowWhereInput | null;
  isNot?: Prisma.AutomationFlowWhereInput | null;
};

export type AutomationFlowCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutUserInput,
        Prisma.AutomationFlowUncheckedCreateWithoutUserInput
      >
    | Prisma.AutomationFlowCreateWithoutUserInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.AutomationFlowCreateManyUserInputEnvelope;
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
};

export type AutomationFlowUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutUserInput,
        Prisma.AutomationFlowUncheckedCreateWithoutUserInput
      >
    | Prisma.AutomationFlowCreateWithoutUserInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.AutomationFlowCreateManyUserInputEnvelope;
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
};

export type AutomationFlowUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutUserInput,
        Prisma.AutomationFlowUncheckedCreateWithoutUserInput
      >
    | Prisma.AutomationFlowCreateWithoutUserInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutUserInput
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.AutomationFlowCreateManyUserInputEnvelope;
  set?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  disconnect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  delete?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  update?:
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutUserInput
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutUserInput
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.AutomationFlowScalarWhereInput
    | Prisma.AutomationFlowScalarWhereInput[];
};

export type AutomationFlowUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutUserInput,
        Prisma.AutomationFlowUncheckedCreateWithoutUserInput
      >
    | Prisma.AutomationFlowCreateWithoutUserInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput
    | Prisma.AutomationFlowCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutUserInput
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.AutomationFlowCreateManyUserInputEnvelope;
  set?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  disconnect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  delete?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  update?:
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutUserInput
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutUserInput
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.AutomationFlowScalarWhereInput
    | Prisma.AutomationFlowScalarWhereInput[];
};

export type AutomationFlowCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutProjectInput,
        Prisma.AutomationFlowUncheckedCreateWithoutProjectInput
      >
    | Prisma.AutomationFlowCreateWithoutProjectInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.AutomationFlowCreateManyProjectInputEnvelope;
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
};

export type AutomationFlowUncheckedCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutProjectInput,
        Prisma.AutomationFlowUncheckedCreateWithoutProjectInput
      >
    | Prisma.AutomationFlowCreateWithoutProjectInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.AutomationFlowCreateManyProjectInputEnvelope;
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
};

export type AutomationFlowUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutProjectInput,
        Prisma.AutomationFlowUncheckedCreateWithoutProjectInput
      >
    | Prisma.AutomationFlowCreateWithoutProjectInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.AutomationFlowCreateManyProjectInputEnvelope;
  set?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  disconnect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  delete?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  update?:
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutProjectInput
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.AutomationFlowScalarWhereInput
    | Prisma.AutomationFlowScalarWhereInput[];
};

export type AutomationFlowUncheckedUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AutomationFlowCreateWithoutProjectInput,
        Prisma.AutomationFlowUncheckedCreateWithoutProjectInput
      >
    | Prisma.AutomationFlowCreateWithoutProjectInput[]
    | Prisma.AutomationFlowUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput
    | Prisma.AutomationFlowCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.AutomationFlowUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.AutomationFlowCreateManyProjectInputEnvelope;
  set?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  disconnect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  delete?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  connect?:
    | Prisma.AutomationFlowWhereUniqueInput
    | Prisma.AutomationFlowWhereUniqueInput[];
  update?:
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.AutomationFlowUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutProjectInput
    | Prisma.AutomationFlowUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.AutomationFlowScalarWhereInput
    | Prisma.AutomationFlowScalarWhereInput[];
};

export type AutomationFlowCreateNestedOneWithoutAnalyticsEventsInput = {
  create?: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutAnalyticsEventsInput,
    Prisma.AutomationFlowUncheckedCreateWithoutAnalyticsEventsInput
  >;
  connectOrCreate?: Prisma.AutomationFlowCreateOrConnectWithoutAnalyticsEventsInput;
  connect?: Prisma.AutomationFlowWhereUniqueInput;
};

export type AutomationFlowUpdateOneWithoutAnalyticsEventsNestedInput = {
  create?: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutAnalyticsEventsInput,
    Prisma.AutomationFlowUncheckedCreateWithoutAnalyticsEventsInput
  >;
  connectOrCreate?: Prisma.AutomationFlowCreateOrConnectWithoutAnalyticsEventsInput;
  upsert?: Prisma.AutomationFlowUpsertWithoutAnalyticsEventsInput;
  disconnect?: Prisma.AutomationFlowWhereInput | boolean;
  delete?: Prisma.AutomationFlowWhereInput | boolean;
  connect?: Prisma.AutomationFlowWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AutomationFlowUpdateToOneWithWhereWithoutAnalyticsEventsInput,
      Prisma.AutomationFlowUpdateWithoutAnalyticsEventsInput
    >,
    Prisma.AutomationFlowUncheckedUpdateWithoutAnalyticsEventsInput
  >;
};

export type AutomationFlowCreateWithoutUserInput = {
  id?: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutAutomationInput;
  project: Prisma.ProjectCreateNestedOneWithoutAutomationFlowsInput;
};

export type AutomationFlowUncheckedCreateWithoutUserInput = {
  id?: string;
  projectId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutAutomationInput;
};

export type AutomationFlowCreateOrConnectWithoutUserInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutUserInput,
    Prisma.AutomationFlowUncheckedCreateWithoutUserInput
  >;
};

export type AutomationFlowCreateManyUserInputEnvelope = {
  data:
    | Prisma.AutomationFlowCreateManyUserInput
    | Prisma.AutomationFlowCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type AutomationFlowUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AutomationFlowUpdateWithoutUserInput,
    Prisma.AutomationFlowUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutUserInput,
    Prisma.AutomationFlowUncheckedCreateWithoutUserInput
  >;
};

export type AutomationFlowUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateWithoutUserInput,
    Prisma.AutomationFlowUncheckedUpdateWithoutUserInput
  >;
};

export type AutomationFlowUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.AutomationFlowScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateManyMutationInput,
    Prisma.AutomationFlowUncheckedUpdateManyWithoutUserInput
  >;
};

export type AutomationFlowScalarWhereInput = {
  AND?:
    | Prisma.AutomationFlowScalarWhereInput
    | Prisma.AutomationFlowScalarWhereInput[];
  OR?: Prisma.AutomationFlowScalarWhereInput[];
  NOT?:
    | Prisma.AutomationFlowScalarWhereInput
    | Prisma.AutomationFlowScalarWhereInput[];
  id?: Prisma.StringFilter<"AutomationFlow"> | string;
  projectId?: Prisma.StringFilter<"AutomationFlow"> | string;
  userId?: Prisma.StringFilter<"AutomationFlow"> | string;
  name?: Prisma.StringFilter<"AutomationFlow"> | string;
  description?: Prisma.StringNullableFilter<"AutomationFlow"> | string | null;
  triggerType?: Prisma.StringFilter<"AutomationFlow"> | string;
  triggerConfig?: Prisma.JsonFilter<"AutomationFlow">;
  actions?: Prisma.JsonFilter<"AutomationFlow">;
  conditions?: Prisma.JsonFilter<"AutomationFlow">;
  status?: Prisma.StringFilter<"AutomationFlow"> | string;
  totalTriggered?: Prisma.IntFilter<"AutomationFlow"> | number;
  totalCompleted?: Prisma.IntFilter<"AutomationFlow"> | number;
  createdAt?: Prisma.DateTimeFilter<"AutomationFlow"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"AutomationFlow"> | Date | string;
};

export type AutomationFlowCreateWithoutProjectInput = {
  id?: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutAutomationInput;
  user: Prisma.UserCreateNestedOneWithoutAutomationFlowsInput;
};

export type AutomationFlowUncheckedCreateWithoutProjectInput = {
  id?: string;
  userId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutAutomationInput;
};

export type AutomationFlowCreateOrConnectWithoutProjectInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutProjectInput,
    Prisma.AutomationFlowUncheckedCreateWithoutProjectInput
  >;
};

export type AutomationFlowCreateManyProjectInputEnvelope = {
  data:
    | Prisma.AutomationFlowCreateManyProjectInput
    | Prisma.AutomationFlowCreateManyProjectInput[];
  skipDuplicates?: boolean;
};

export type AutomationFlowUpsertWithWhereUniqueWithoutProjectInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AutomationFlowUpdateWithoutProjectInput,
    Prisma.AutomationFlowUncheckedUpdateWithoutProjectInput
  >;
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutProjectInput,
    Prisma.AutomationFlowUncheckedCreateWithoutProjectInput
  >;
};

export type AutomationFlowUpdateWithWhereUniqueWithoutProjectInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateWithoutProjectInput,
    Prisma.AutomationFlowUncheckedUpdateWithoutProjectInput
  >;
};

export type AutomationFlowUpdateManyWithWhereWithoutProjectInput = {
  where: Prisma.AutomationFlowScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateManyMutationInput,
    Prisma.AutomationFlowUncheckedUpdateManyWithoutProjectInput
  >;
};

export type AutomationFlowCreateWithoutAnalyticsEventsInput = {
  id?: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutAutomationFlowsInput;
  user: Prisma.UserCreateNestedOneWithoutAutomationFlowsInput;
};

export type AutomationFlowUncheckedCreateWithoutAnalyticsEventsInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AutomationFlowCreateOrConnectWithoutAnalyticsEventsInput = {
  where: Prisma.AutomationFlowWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutAnalyticsEventsInput,
    Prisma.AutomationFlowUncheckedCreateWithoutAnalyticsEventsInput
  >;
};

export type AutomationFlowUpsertWithoutAnalyticsEventsInput = {
  update: Prisma.XOR<
    Prisma.AutomationFlowUpdateWithoutAnalyticsEventsInput,
    Prisma.AutomationFlowUncheckedUpdateWithoutAnalyticsEventsInput
  >;
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateWithoutAnalyticsEventsInput,
    Prisma.AutomationFlowUncheckedCreateWithoutAnalyticsEventsInput
  >;
  where?: Prisma.AutomationFlowWhereInput;
};

export type AutomationFlowUpdateToOneWithWhereWithoutAnalyticsEventsInput = {
  where?: Prisma.AutomationFlowWhereInput;
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateWithoutAnalyticsEventsInput,
    Prisma.AutomationFlowUncheckedUpdateWithoutAnalyticsEventsInput
  >;
};

export type AutomationFlowUpdateWithoutAnalyticsEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAutomationFlowsNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutAutomationFlowsNestedInput;
};

export type AutomationFlowUncheckedUpdateWithoutAnalyticsEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AutomationFlowCreateManyUserInput = {
  id?: string;
  projectId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AutomationFlowUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutAutomationNestedInput;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAutomationFlowsNestedInput;
};

export type AutomationFlowUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutAutomationNestedInput;
};

export type AutomationFlowUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AutomationFlowCreateManyProjectInput = {
  id?: string;
  userId: string;
  name: string;
  description?: string | null;
  triggerType: string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: string;
  totalTriggered?: number;
  totalCompleted?: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AutomationFlowUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutAutomationNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutAutomationFlowsNestedInput;
};

export type AutomationFlowUncheckedUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutAutomationNestedInput;
};

export type AutomationFlowUncheckedUpdateManyWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  triggerType?: Prisma.StringFieldUpdateOperationsInput | string;
  triggerConfig?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  actions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  conditions?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  totalTriggered?: Prisma.IntFieldUpdateOperationsInput | number;
  totalCompleted?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type AutomationFlowCountOutputType
 */

export type AutomationFlowCountOutputType = {
  analyticsEvents: number;
};

export type AutomationFlowCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  analyticsEvents?:
    | boolean
    | AutomationFlowCountOutputTypeCountAnalyticsEventsArgs;
};

/**
 * AutomationFlowCountOutputType without action
 */
export type AutomationFlowCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlowCountOutputType
   */
  select?: Prisma.AutomationFlowCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * AutomationFlowCountOutputType without action
 */
export type AutomationFlowCountOutputTypeCountAnalyticsEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AnalyticsEventWhereInput;
};

export type AutomationFlowSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    description?: boolean;
    triggerType?: boolean;
    triggerConfig?: boolean;
    actions?: boolean;
    conditions?: boolean;
    status?: boolean;
    totalTriggered?: boolean;
    totalCompleted?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    analyticsEvents?:
      | boolean
      | Prisma.AutomationFlow$analyticsEventsArgs<ExtArgs>;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    _count?: boolean | Prisma.AutomationFlowCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["automationFlow"]
>;

export type AutomationFlowSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    description?: boolean;
    triggerType?: boolean;
    triggerConfig?: boolean;
    actions?: boolean;
    conditions?: boolean;
    status?: boolean;
    totalTriggered?: boolean;
    totalCompleted?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["automationFlow"]
>;

export type AutomationFlowSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    description?: boolean;
    triggerType?: boolean;
    triggerConfig?: boolean;
    actions?: boolean;
    conditions?: boolean;
    status?: boolean;
    totalTriggered?: boolean;
    totalCompleted?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["automationFlow"]
>;

export type AutomationFlowSelectScalar = {
  id?: boolean;
  projectId?: boolean;
  userId?: boolean;
  name?: boolean;
  description?: boolean;
  triggerType?: boolean;
  triggerConfig?: boolean;
  actions?: boolean;
  conditions?: boolean;
  status?: boolean;
  totalTriggered?: boolean;
  totalCompleted?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type AutomationFlowOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "projectId"
  | "userId"
  | "name"
  | "description"
  | "triggerType"
  | "triggerConfig"
  | "actions"
  | "conditions"
  | "status"
  | "totalTriggered"
  | "totalCompleted"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["automationFlow"]
>;
export type AutomationFlowInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  analyticsEvents?:
    | boolean
    | Prisma.AutomationFlow$analyticsEventsArgs<ExtArgs>;
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  _count?: boolean | Prisma.AutomationFlowCountOutputTypeDefaultArgs<ExtArgs>;
};
export type AutomationFlowIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type AutomationFlowIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $AutomationFlowPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "AutomationFlow";
  objects: {
    analyticsEvents: Prisma.$AnalyticsEventPayload<ExtArgs>[];
    project: Prisma.$ProjectPayload<ExtArgs>;
    user: Prisma.$UserPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      projectId: string;
      userId: string;
      name: string;
      description: string | null;
      triggerType: string;
      triggerConfig: runtime.JsonValue;
      actions: runtime.JsonValue;
      conditions: runtime.JsonValue;
      status: string;
      totalTriggered: number;
      totalCompleted: number;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["automationFlow"]
  >;
  composites: {};
};

export type AutomationFlowGetPayload<
  S extends boolean | null | undefined | AutomationFlowDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$AutomationFlowPayload, S>;

export type AutomationFlowCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  AutomationFlowFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: AutomationFlowCountAggregateInputType | true;
};

export interface AutomationFlowDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["AutomationFlow"];
    meta: { name: "AutomationFlow" };
  };
  /**
   * Find zero or one AutomationFlow that matches the filter.
   * @param {AutomationFlowFindUniqueArgs} args - Arguments to find a AutomationFlow
   * @example
   * // Get one AutomationFlow
   * const automationFlow = await prisma.automationFlow.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AutomationFlowFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one AutomationFlow that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AutomationFlowFindUniqueOrThrowArgs} args - Arguments to find a AutomationFlow
   * @example
   * // Get one AutomationFlow
   * const automationFlow = await prisma.automationFlow.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AutomationFlowFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AutomationFlow that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowFindFirstArgs} args - Arguments to find a AutomationFlow
   * @example
   * // Get one AutomationFlow
   * const automationFlow = await prisma.automationFlow.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AutomationFlowFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AutomationFlowFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AutomationFlow that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowFindFirstOrThrowArgs} args - Arguments to find a AutomationFlow
   * @example
   * // Get one AutomationFlow
   * const automationFlow = await prisma.automationFlow.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AutomationFlowFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AutomationFlowFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more AutomationFlows that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AutomationFlows
   * const automationFlows = await prisma.automationFlow.findMany()
   *
   * // Get first 10 AutomationFlows
   * const automationFlows = await prisma.automationFlow.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const automationFlowWithIdOnly = await prisma.automationFlow.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AutomationFlowFindManyArgs>(
    args?: Prisma.SelectSubset<T, AutomationFlowFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a AutomationFlow.
   * @param {AutomationFlowCreateArgs} args - Arguments to create a AutomationFlow.
   * @example
   * // Create one AutomationFlow
   * const AutomationFlow = await prisma.automationFlow.create({
   *   data: {
   *     // ... data to create a AutomationFlow
   *   }
   * })
   *
   */
  create<T extends AutomationFlowCreateArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowCreateArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many AutomationFlows.
   * @param {AutomationFlowCreateManyArgs} args - Arguments to create many AutomationFlows.
   * @example
   * // Create many AutomationFlows
   * const automationFlow = await prisma.automationFlow.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AutomationFlowCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AutomationFlowCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many AutomationFlows and returns the data saved in the database.
   * @param {AutomationFlowCreateManyAndReturnArgs} args - Arguments to create many AutomationFlows.
   * @example
   * // Create many AutomationFlows
   * const automationFlow = await prisma.automationFlow.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many AutomationFlows and only return the `id`
   * const automationFlowWithIdOnly = await prisma.automationFlow.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AutomationFlowCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      AutomationFlowCreateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a AutomationFlow.
   * @param {AutomationFlowDeleteArgs} args - Arguments to delete one AutomationFlow.
   * @example
   * // Delete one AutomationFlow
   * const AutomationFlow = await prisma.automationFlow.delete({
   *   where: {
   *     // ... filter to delete one AutomationFlow
   *   }
   * })
   *
   */
  delete<T extends AutomationFlowDeleteArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one AutomationFlow.
   * @param {AutomationFlowUpdateArgs} args - Arguments to update one AutomationFlow.
   * @example
   * // Update one AutomationFlow
   * const automationFlow = await prisma.automationFlow.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AutomationFlowUpdateArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more AutomationFlows.
   * @param {AutomationFlowDeleteManyArgs} args - Arguments to filter AutomationFlows to delete.
   * @example
   * // Delete a few AutomationFlows
   * const { count } = await prisma.automationFlow.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AutomationFlowDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AutomationFlowDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AutomationFlows.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AutomationFlows
   * const automationFlow = await prisma.automationFlow.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AutomationFlowUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AutomationFlows and returns the data updated in the database.
   * @param {AutomationFlowUpdateManyAndReturnArgs} args - Arguments to update many AutomationFlows.
   * @example
   * // Update many AutomationFlows
   * const automationFlow = await prisma.automationFlow.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more AutomationFlows and only return the `id`
   * const automationFlowWithIdOnly = await prisma.automationFlow.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AutomationFlowUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one AutomationFlow.
   * @param {AutomationFlowUpsertArgs} args - Arguments to update or create a AutomationFlow.
   * @example
   * // Update or create a AutomationFlow
   * const automationFlow = await prisma.automationFlow.upsert({
   *   create: {
   *     // ... data to create a AutomationFlow
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AutomationFlow we want to update
   *   }
   * })
   */
  upsert<T extends AutomationFlowUpsertArgs>(
    args: Prisma.SelectSubset<T, AutomationFlowUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of AutomationFlows.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowCountArgs} args - Arguments to filter AutomationFlows to count.
   * @example
   * // Count the number of AutomationFlows
   * const count = await prisma.automationFlow.count({
   *   where: {
   *     // ... the filter for the AutomationFlows we want to count
   *   }
   * })
   **/
  count<T extends AutomationFlowCountArgs>(
    args?: Prisma.Subset<T, AutomationFlowCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            AutomationFlowCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a AutomationFlow.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AutomationFlowAggregateArgs>(
    args: Prisma.Subset<T, AutomationFlowAggregateArgs>
  ): Prisma.PrismaPromise<GetAutomationFlowAggregateType<T>>;

  /**
   * Group by AutomationFlow.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutomationFlowGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AutomationFlowGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AutomationFlowGroupByArgs["orderBy"] }
      : { orderBy?: AutomationFlowGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, AutomationFlowGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetAutomationFlowGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the AutomationFlow model
   */
  readonly fields: AutomationFlowFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AutomationFlow.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AutomationFlowClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  analyticsEvents<
    T extends Prisma.AutomationFlow$analyticsEventsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.AutomationFlow$analyticsEventsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AnalyticsEventPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__ProjectClient<
    | runtime.Types.Result.GetResult<
        Prisma.$ProjectPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the AutomationFlow model
 */
export interface AutomationFlowFieldRefs {
  readonly id: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly projectId: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly userId: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly name: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly description: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly triggerType: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly triggerConfig: Prisma.FieldRef<"AutomationFlow", "Json">;
  readonly actions: Prisma.FieldRef<"AutomationFlow", "Json">;
  readonly conditions: Prisma.FieldRef<"AutomationFlow", "Json">;
  readonly status: Prisma.FieldRef<"AutomationFlow", "String">;
  readonly totalTriggered: Prisma.FieldRef<"AutomationFlow", "Int">;
  readonly totalCompleted: Prisma.FieldRef<"AutomationFlow", "Int">;
  readonly createdAt: Prisma.FieldRef<"AutomationFlow", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"AutomationFlow", "DateTime">;
}

// Custom InputTypes
/**
 * AutomationFlow findUnique
 */
export type AutomationFlowFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * Filter, which AutomationFlow to fetch.
   */
  where: Prisma.AutomationFlowWhereUniqueInput;
};

/**
 * AutomationFlow findUniqueOrThrow
 */
export type AutomationFlowFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * Filter, which AutomationFlow to fetch.
   */
  where: Prisma.AutomationFlowWhereUniqueInput;
};

/**
 * AutomationFlow findFirst
 */
export type AutomationFlowFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * Filter, which AutomationFlow to fetch.
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AutomationFlows to fetch.
   */
  orderBy?:
    | Prisma.AutomationFlowOrderByWithRelationInput
    | Prisma.AutomationFlowOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AutomationFlows.
   */
  cursor?: Prisma.AutomationFlowWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AutomationFlows from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AutomationFlows.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AutomationFlows.
   */
  distinct?:
    | Prisma.AutomationFlowScalarFieldEnum
    | Prisma.AutomationFlowScalarFieldEnum[];
};

/**
 * AutomationFlow findFirstOrThrow
 */
export type AutomationFlowFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * Filter, which AutomationFlow to fetch.
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AutomationFlows to fetch.
   */
  orderBy?:
    | Prisma.AutomationFlowOrderByWithRelationInput
    | Prisma.AutomationFlowOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AutomationFlows.
   */
  cursor?: Prisma.AutomationFlowWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AutomationFlows from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AutomationFlows.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AutomationFlows.
   */
  distinct?:
    | Prisma.AutomationFlowScalarFieldEnum
    | Prisma.AutomationFlowScalarFieldEnum[];
};

/**
 * AutomationFlow findMany
 */
export type AutomationFlowFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * Filter, which AutomationFlows to fetch.
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AutomationFlows to fetch.
   */
  orderBy?:
    | Prisma.AutomationFlowOrderByWithRelationInput
    | Prisma.AutomationFlowOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing AutomationFlows.
   */
  cursor?: Prisma.AutomationFlowWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AutomationFlows from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AutomationFlows.
   */
  skip?: number;
  distinct?:
    | Prisma.AutomationFlowScalarFieldEnum
    | Prisma.AutomationFlowScalarFieldEnum[];
};

/**
 * AutomationFlow create
 */
export type AutomationFlowCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * The data needed to create a AutomationFlow.
   */
  data: Prisma.XOR<
    Prisma.AutomationFlowCreateInput,
    Prisma.AutomationFlowUncheckedCreateInput
  >;
};

/**
 * AutomationFlow createMany
 */
export type AutomationFlowCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many AutomationFlows.
   */
  data:
    | Prisma.AutomationFlowCreateManyInput
    | Prisma.AutomationFlowCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AutomationFlow createManyAndReturn
 */
export type AutomationFlowCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * The data used to create many AutomationFlows.
   */
  data:
    | Prisma.AutomationFlowCreateManyInput
    | Prisma.AutomationFlowCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * AutomationFlow update
 */
export type AutomationFlowUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * The data needed to update a AutomationFlow.
   */
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateInput,
    Prisma.AutomationFlowUncheckedUpdateInput
  >;
  /**
   * Choose, which AutomationFlow to update.
   */
  where: Prisma.AutomationFlowWhereUniqueInput;
};

/**
 * AutomationFlow updateMany
 */
export type AutomationFlowUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update AutomationFlows.
   */
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateManyMutationInput,
    Prisma.AutomationFlowUncheckedUpdateManyInput
  >;
  /**
   * Filter which AutomationFlows to update
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * Limit how many AutomationFlows to update.
   */
  limit?: number;
};

/**
 * AutomationFlow updateManyAndReturn
 */
export type AutomationFlowUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * The data used to update AutomationFlows.
   */
  data: Prisma.XOR<
    Prisma.AutomationFlowUpdateManyMutationInput,
    Prisma.AutomationFlowUncheckedUpdateManyInput
  >;
  /**
   * Filter which AutomationFlows to update
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * Limit how many AutomationFlows to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * AutomationFlow upsert
 */
export type AutomationFlowUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * The filter to search for the AutomationFlow to update in case it exists.
   */
  where: Prisma.AutomationFlowWhereUniqueInput;
  /**
   * In case the AutomationFlow found by the `where` argument doesn't exist, create a new AutomationFlow with this data.
   */
  create: Prisma.XOR<
    Prisma.AutomationFlowCreateInput,
    Prisma.AutomationFlowUncheckedCreateInput
  >;
  /**
   * In case the AutomationFlow was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.AutomationFlowUpdateInput,
    Prisma.AutomationFlowUncheckedUpdateInput
  >;
};

/**
 * AutomationFlow delete
 */
export type AutomationFlowDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  /**
   * Filter which AutomationFlow to delete.
   */
  where: Prisma.AutomationFlowWhereUniqueInput;
};

/**
 * AutomationFlow deleteMany
 */
export type AutomationFlowDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AutomationFlows to delete
   */
  where?: Prisma.AutomationFlowWhereInput;
  /**
   * Limit how many AutomationFlows to delete.
   */
  limit?: number;
};

/**
 * AutomationFlow.analyticsEvents
 */
export type AutomationFlow$analyticsEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  where?: Prisma.AnalyticsEventWhereInput;
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithRelationInput
    | Prisma.AnalyticsEventOrderByWithRelationInput[];
  cursor?: Prisma.AnalyticsEventWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AnalyticsEventScalarFieldEnum
    | Prisma.AnalyticsEventScalarFieldEnum[];
};

/**
 * AutomationFlow without action
 */
export type AutomationFlowDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
};
