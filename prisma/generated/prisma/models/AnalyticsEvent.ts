/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `AnalyticsEvent` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model AnalyticsEvent
 *
 */
export type AnalyticsEventModel =
  runtime.Types.Result.DefaultSelection<Prisma.$AnalyticsEventPayload>;

export type AggregateAnalyticsEvent = {
  _count: AnalyticsEventCountAggregateOutputType | null;
  _min: AnalyticsEventMinAggregateOutputType | null;
  _max: AnalyticsEventMaxAggregateOutputType | null;
};

export type AnalyticsEventMinAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  eventType: string | null;
  eventName: string | null;
  subscriberId: string | null;
  campaignId: string | null;
  automationId: string | null;
  sessionId: string | null;
  userAgent: string | null;
  ipAddress: string | null;
  referrer: string | null;
  utmSource: string | null;
  utmMedium: string | null;
  utmCampaign: string | null;
  utmTerm: string | null;
  utmContent: string | null;
  createdAt: Date | null;
};

export type AnalyticsEventMaxAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  eventType: string | null;
  eventName: string | null;
  subscriberId: string | null;
  campaignId: string | null;
  automationId: string | null;
  sessionId: string | null;
  userAgent: string | null;
  ipAddress: string | null;
  referrer: string | null;
  utmSource: string | null;
  utmMedium: string | null;
  utmCampaign: string | null;
  utmTerm: string | null;
  utmContent: string | null;
  createdAt: Date | null;
};

export type AnalyticsEventCountAggregateOutputType = {
  id: number;
  projectId: number;
  userId: number;
  eventType: number;
  eventName: number;
  eventData: number;
  subscriberId: number;
  campaignId: number;
  automationId: number;
  sessionId: number;
  userAgent: number;
  ipAddress: number;
  referrer: number;
  utmSource: number;
  utmMedium: number;
  utmCampaign: number;
  utmTerm: number;
  utmContent: number;
  createdAt: number;
  _all: number;
};

export type AnalyticsEventMinAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  eventType?: true;
  eventName?: true;
  subscriberId?: true;
  campaignId?: true;
  automationId?: true;
  sessionId?: true;
  userAgent?: true;
  ipAddress?: true;
  referrer?: true;
  utmSource?: true;
  utmMedium?: true;
  utmCampaign?: true;
  utmTerm?: true;
  utmContent?: true;
  createdAt?: true;
};

export type AnalyticsEventMaxAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  eventType?: true;
  eventName?: true;
  subscriberId?: true;
  campaignId?: true;
  automationId?: true;
  sessionId?: true;
  userAgent?: true;
  ipAddress?: true;
  referrer?: true;
  utmSource?: true;
  utmMedium?: true;
  utmCampaign?: true;
  utmTerm?: true;
  utmContent?: true;
  createdAt?: true;
};

export type AnalyticsEventCountAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  eventType?: true;
  eventName?: true;
  eventData?: true;
  subscriberId?: true;
  campaignId?: true;
  automationId?: true;
  sessionId?: true;
  userAgent?: true;
  ipAddress?: true;
  referrer?: true;
  utmSource?: true;
  utmMedium?: true;
  utmCampaign?: true;
  utmTerm?: true;
  utmContent?: true;
  createdAt?: true;
  _all?: true;
};

export type AnalyticsEventAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AnalyticsEvent to aggregate.
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AnalyticsEvents to fetch.
   */
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithRelationInput
    | Prisma.AnalyticsEventOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AnalyticsEventWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AnalyticsEvents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AnalyticsEvents.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned AnalyticsEvents
   **/
  _count?: true | AnalyticsEventCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AnalyticsEventMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AnalyticsEventMaxAggregateInputType;
};

export type GetAnalyticsEventAggregateType<
  T extends AnalyticsEventAggregateArgs,
> = {
  [P in keyof T & keyof AggregateAnalyticsEvent]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAnalyticsEvent[P]>
    : Prisma.GetScalarType<T[P], AggregateAnalyticsEvent[P]>;
};

export type AnalyticsEventGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AnalyticsEventWhereInput;
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithAggregationInput
    | Prisma.AnalyticsEventOrderByWithAggregationInput[];
  by:
    | Prisma.AnalyticsEventScalarFieldEnum[]
    | Prisma.AnalyticsEventScalarFieldEnum;
  having?: Prisma.AnalyticsEventScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AnalyticsEventCountAggregateInputType | true;
  _min?: AnalyticsEventMinAggregateInputType;
  _max?: AnalyticsEventMaxAggregateInputType;
};

export type AnalyticsEventGroupByOutputType = {
  id: string;
  projectId: string;
  userId: string | null;
  eventType: string;
  eventName: string;
  eventData: runtime.JsonValue;
  subscriberId: string | null;
  campaignId: string | null;
  automationId: string | null;
  sessionId: string | null;
  userAgent: string | null;
  ipAddress: string | null;
  referrer: string | null;
  utmSource: string | null;
  utmMedium: string | null;
  utmCampaign: string | null;
  utmTerm: string | null;
  utmContent: string | null;
  createdAt: Date;
  _count: AnalyticsEventCountAggregateOutputType | null;
  _min: AnalyticsEventMinAggregateOutputType | null;
  _max: AnalyticsEventMaxAggregateOutputType | null;
};

type GetAnalyticsEventGroupByPayload<T extends AnalyticsEventGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<AnalyticsEventGroupByOutputType, T["by"]> & {
        [P in keyof T &
          keyof AnalyticsEventGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AnalyticsEventGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AnalyticsEventGroupByOutputType[P]>;
      }
    >
  >;

export type AnalyticsEventWhereInput = {
  AND?: Prisma.AnalyticsEventWhereInput | Prisma.AnalyticsEventWhereInput[];
  OR?: Prisma.AnalyticsEventWhereInput[];
  NOT?: Prisma.AnalyticsEventWhereInput | Prisma.AnalyticsEventWhereInput[];
  id?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  projectId?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  userId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  eventType?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  eventName?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  eventData?: Prisma.JsonFilter<"AnalyticsEvent">;
  subscriberId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  campaignId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  automationId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  sessionId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  userAgent?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  ipAddress?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  referrer?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmSource?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmMedium?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmCampaign?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmTerm?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmContent?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"AnalyticsEvent"> | Date | string;
  project?: Prisma.XOR<
    Prisma.ProjectScalarRelationFilter,
    Prisma.ProjectWhereInput
  >;
  user?: Prisma.XOR<
    Prisma.UserNullableScalarRelationFilter,
    Prisma.UserWhereInput
  > | null;
  subscriber?: Prisma.XOR<
    Prisma.SubscriberNullableScalarRelationFilter,
    Prisma.SubscriberWhereInput
  > | null;
  campaign?: Prisma.XOR<
    Prisma.CampaignNullableScalarRelationFilter,
    Prisma.CampaignWhereInput
  > | null;
  automation?: Prisma.XOR<
    Prisma.AutomationFlowNullableScalarRelationFilter,
    Prisma.AutomationFlowWhereInput
  > | null;
};

export type AnalyticsEventOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  eventType?: Prisma.SortOrder;
  eventName?: Prisma.SortOrder;
  eventData?: Prisma.SortOrder;
  subscriberId?: Prisma.SortOrderInput | Prisma.SortOrder;
  campaignId?: Prisma.SortOrderInput | Prisma.SortOrder;
  automationId?: Prisma.SortOrderInput | Prisma.SortOrder;
  sessionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  userAgent?: Prisma.SortOrderInput | Prisma.SortOrder;
  ipAddress?: Prisma.SortOrderInput | Prisma.SortOrder;
  referrer?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmSource?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmMedium?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmCampaign?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmTerm?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmContent?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  project?: Prisma.ProjectOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
  subscriber?: Prisma.SubscriberOrderByWithRelationInput;
  campaign?: Prisma.CampaignOrderByWithRelationInput;
  automation?: Prisma.AutomationFlowOrderByWithRelationInput;
};

export type AnalyticsEventWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.AnalyticsEventWhereInput | Prisma.AnalyticsEventWhereInput[];
    OR?: Prisma.AnalyticsEventWhereInput[];
    NOT?: Prisma.AnalyticsEventWhereInput | Prisma.AnalyticsEventWhereInput[];
    projectId?: Prisma.StringFilter<"AnalyticsEvent"> | string;
    userId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    eventType?: Prisma.StringFilter<"AnalyticsEvent"> | string;
    eventName?: Prisma.StringFilter<"AnalyticsEvent"> | string;
    eventData?: Prisma.JsonFilter<"AnalyticsEvent">;
    subscriberId?:
      | Prisma.StringNullableFilter<"AnalyticsEvent">
      | string
      | null;
    campaignId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    automationId?:
      | Prisma.StringNullableFilter<"AnalyticsEvent">
      | string
      | null;
    sessionId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    userAgent?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    ipAddress?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    referrer?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    utmSource?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    utmMedium?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    utmCampaign?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    utmTerm?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    utmContent?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
    createdAt?: Prisma.DateTimeFilter<"AnalyticsEvent"> | Date | string;
    project?: Prisma.XOR<
      Prisma.ProjectScalarRelationFilter,
      Prisma.ProjectWhereInput
    >;
    user?: Prisma.XOR<
      Prisma.UserNullableScalarRelationFilter,
      Prisma.UserWhereInput
    > | null;
    subscriber?: Prisma.XOR<
      Prisma.SubscriberNullableScalarRelationFilter,
      Prisma.SubscriberWhereInput
    > | null;
    campaign?: Prisma.XOR<
      Prisma.CampaignNullableScalarRelationFilter,
      Prisma.CampaignWhereInput
    > | null;
    automation?: Prisma.XOR<
      Prisma.AutomationFlowNullableScalarRelationFilter,
      Prisma.AutomationFlowWhereInput
    > | null;
  },
  "id"
>;

export type AnalyticsEventOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  eventType?: Prisma.SortOrder;
  eventName?: Prisma.SortOrder;
  eventData?: Prisma.SortOrder;
  subscriberId?: Prisma.SortOrderInput | Prisma.SortOrder;
  campaignId?: Prisma.SortOrderInput | Prisma.SortOrder;
  automationId?: Prisma.SortOrderInput | Prisma.SortOrder;
  sessionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  userAgent?: Prisma.SortOrderInput | Prisma.SortOrder;
  ipAddress?: Prisma.SortOrderInput | Prisma.SortOrder;
  referrer?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmSource?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmMedium?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmCampaign?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmTerm?: Prisma.SortOrderInput | Prisma.SortOrder;
  utmContent?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  _count?: Prisma.AnalyticsEventCountOrderByAggregateInput;
  _max?: Prisma.AnalyticsEventMaxOrderByAggregateInput;
  _min?: Prisma.AnalyticsEventMinOrderByAggregateInput;
};

export type AnalyticsEventScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AnalyticsEventScalarWhereWithAggregatesInput
    | Prisma.AnalyticsEventScalarWhereWithAggregatesInput[];
  OR?: Prisma.AnalyticsEventScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AnalyticsEventScalarWhereWithAggregatesInput
    | Prisma.AnalyticsEventScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"AnalyticsEvent"> | string;
  projectId?: Prisma.StringWithAggregatesFilter<"AnalyticsEvent"> | string;
  userId?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  eventType?: Prisma.StringWithAggregatesFilter<"AnalyticsEvent"> | string;
  eventName?: Prisma.StringWithAggregatesFilter<"AnalyticsEvent"> | string;
  eventData?: Prisma.JsonWithAggregatesFilter<"AnalyticsEvent">;
  subscriberId?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  campaignId?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  automationId?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  sessionId?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  userAgent?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  ipAddress?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  referrer?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  utmSource?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  utmMedium?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  utmCampaign?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  utmTerm?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  utmContent?:
    | Prisma.StringNullableWithAggregatesFilter<"AnalyticsEvent">
    | string
    | null;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"AnalyticsEvent">
    | Date
    | string;
};

export type AnalyticsEventCreateInput = {
  id?: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutAnalyticsEventsInput;
  user?: Prisma.UserCreateNestedOneWithoutAnalyticsEventsInput;
  subscriber?: Prisma.SubscriberCreateNestedOneWithoutAnalyticsEventsInput;
  campaign?: Prisma.CampaignCreateNestedOneWithoutAnalyticsEventsInput;
  automation?: Prisma.AutomationFlowCreateNestedOneWithoutAnalyticsEventsInput;
};

export type AnalyticsEventUncheckedCreateInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAnalyticsEventsNestedInput;
  user?: Prisma.UserUpdateOneWithoutAnalyticsEventsNestedInput;
  subscriber?: Prisma.SubscriberUpdateOneWithoutAnalyticsEventsNestedInput;
  campaign?: Prisma.CampaignUpdateOneWithoutAnalyticsEventsNestedInput;
  automation?: Prisma.AutomationFlowUpdateOneWithoutAnalyticsEventsNestedInput;
};

export type AnalyticsEventUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventCreateManyInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventListRelationFilter = {
  every?: Prisma.AnalyticsEventWhereInput;
  some?: Prisma.AnalyticsEventWhereInput;
  none?: Prisma.AnalyticsEventWhereInput;
};

export type AnalyticsEventOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type AnalyticsEventCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventType?: Prisma.SortOrder;
  eventName?: Prisma.SortOrder;
  eventData?: Prisma.SortOrder;
  subscriberId?: Prisma.SortOrder;
  campaignId?: Prisma.SortOrder;
  automationId?: Prisma.SortOrder;
  sessionId?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  referrer?: Prisma.SortOrder;
  utmSource?: Prisma.SortOrder;
  utmMedium?: Prisma.SortOrder;
  utmCampaign?: Prisma.SortOrder;
  utmTerm?: Prisma.SortOrder;
  utmContent?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type AnalyticsEventMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventType?: Prisma.SortOrder;
  eventName?: Prisma.SortOrder;
  subscriberId?: Prisma.SortOrder;
  campaignId?: Prisma.SortOrder;
  automationId?: Prisma.SortOrder;
  sessionId?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  referrer?: Prisma.SortOrder;
  utmSource?: Prisma.SortOrder;
  utmMedium?: Prisma.SortOrder;
  utmCampaign?: Prisma.SortOrder;
  utmTerm?: Prisma.SortOrder;
  utmContent?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type AnalyticsEventMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventType?: Prisma.SortOrder;
  eventName?: Prisma.SortOrder;
  subscriberId?: Prisma.SortOrder;
  campaignId?: Prisma.SortOrder;
  automationId?: Prisma.SortOrder;
  sessionId?: Prisma.SortOrder;
  userAgent?: Prisma.SortOrder;
  ipAddress?: Prisma.SortOrder;
  referrer?: Prisma.SortOrder;
  utmSource?: Prisma.SortOrder;
  utmMedium?: Prisma.SortOrder;
  utmCampaign?: Prisma.SortOrder;
  utmTerm?: Prisma.SortOrder;
  utmContent?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type AnalyticsEventCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutUserInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutUserInput
      >
    | Prisma.AnalyticsEventCreateWithoutUserInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.AnalyticsEventCreateManyUserInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutUserInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutUserInput
      >
    | Prisma.AnalyticsEventCreateWithoutUserInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.AnalyticsEventCreateManyUserInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutUserInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutUserInput
      >
    | Prisma.AnalyticsEventCreateWithoutUserInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutUserInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.AnalyticsEventCreateManyUserInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutUserInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutUserInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutUserInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutUserInput
      >
    | Prisma.AnalyticsEventCreateWithoutUserInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutUserInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.AnalyticsEventCreateManyUserInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutUserInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutUserInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutProjectInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput
      >
    | Prisma.AnalyticsEventCreateWithoutProjectInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.AnalyticsEventCreateManyProjectInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUncheckedCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutProjectInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput
      >
    | Prisma.AnalyticsEventCreateWithoutProjectInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.AnalyticsEventCreateManyProjectInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutProjectInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput
      >
    | Prisma.AnalyticsEventCreateWithoutProjectInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.AnalyticsEventCreateManyProjectInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutProjectInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventUncheckedUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutProjectInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput
      >
    | Prisma.AnalyticsEventCreateWithoutProjectInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.AnalyticsEventCreateManyProjectInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutProjectInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventCreateNestedManyWithoutCampaignInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutCampaignInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput
      >
    | Prisma.AnalyticsEventCreateWithoutCampaignInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput[];
  createMany?: Prisma.AnalyticsEventCreateManyCampaignInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUncheckedCreateNestedManyWithoutCampaignInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutCampaignInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput
      >
    | Prisma.AnalyticsEventCreateWithoutCampaignInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput[];
  createMany?: Prisma.AnalyticsEventCreateManyCampaignInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUpdateManyWithoutCampaignNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutCampaignInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput
      >
    | Prisma.AnalyticsEventCreateWithoutCampaignInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutCampaignInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutCampaignInput[];
  createMany?: Prisma.AnalyticsEventCreateManyCampaignInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutCampaignInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutCampaignInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutCampaignInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutCampaignInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventUncheckedUpdateManyWithoutCampaignNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutCampaignInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput
      >
    | Prisma.AnalyticsEventCreateWithoutCampaignInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutCampaignInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutCampaignInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutCampaignInput[];
  createMany?: Prisma.AnalyticsEventCreateManyCampaignInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutCampaignInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutCampaignInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutCampaignInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutCampaignInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventCreateNestedManyWithoutSubscriberInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutSubscriberInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput
      >
    | Prisma.AnalyticsEventCreateWithoutSubscriberInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput[];
  createMany?: Prisma.AnalyticsEventCreateManySubscriberInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUncheckedCreateNestedManyWithoutSubscriberInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutSubscriberInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput
      >
    | Prisma.AnalyticsEventCreateWithoutSubscriberInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput[];
  createMany?: Prisma.AnalyticsEventCreateManySubscriberInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUpdateManyWithoutSubscriberNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutSubscriberInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput
      >
    | Prisma.AnalyticsEventCreateWithoutSubscriberInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutSubscriberInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutSubscriberInput[];
  createMany?: Prisma.AnalyticsEventCreateManySubscriberInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutSubscriberInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutSubscriberInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutSubscriberInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutSubscriberInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventUncheckedUpdateManyWithoutSubscriberNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutSubscriberInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput
      >
    | Prisma.AnalyticsEventCreateWithoutSubscriberInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutSubscriberInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutSubscriberInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutSubscriberInput[];
  createMany?: Prisma.AnalyticsEventCreateManySubscriberInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutSubscriberInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutSubscriberInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutSubscriberInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutSubscriberInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventCreateNestedManyWithoutAutomationInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutAutomationInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput
      >
    | Prisma.AnalyticsEventCreateWithoutAutomationInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput[];
  createMany?: Prisma.AnalyticsEventCreateManyAutomationInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUncheckedCreateNestedManyWithoutAutomationInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutAutomationInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput
      >
    | Prisma.AnalyticsEventCreateWithoutAutomationInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput[];
  createMany?: Prisma.AnalyticsEventCreateManyAutomationInputEnvelope;
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
};

export type AnalyticsEventUpdateManyWithoutAutomationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutAutomationInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput
      >
    | Prisma.AnalyticsEventCreateWithoutAutomationInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutAutomationInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutAutomationInput[];
  createMany?: Prisma.AnalyticsEventCreateManyAutomationInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutAutomationInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutAutomationInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutAutomationInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutAutomationInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventUncheckedUpdateManyWithoutAutomationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AnalyticsEventCreateWithoutAutomationInput,
        Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput
      >
    | Prisma.AnalyticsEventCreateWithoutAutomationInput[]
    | Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput[];
  connectOrCreate?:
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput
    | Prisma.AnalyticsEventCreateOrConnectWithoutAutomationInput[];
  upsert?:
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutAutomationInput
    | Prisma.AnalyticsEventUpsertWithWhereUniqueWithoutAutomationInput[];
  createMany?: Prisma.AnalyticsEventCreateManyAutomationInputEnvelope;
  set?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  disconnect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  delete?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  connect?:
    | Prisma.AnalyticsEventWhereUniqueInput
    | Prisma.AnalyticsEventWhereUniqueInput[];
  update?:
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutAutomationInput
    | Prisma.AnalyticsEventUpdateWithWhereUniqueWithoutAutomationInput[];
  updateMany?:
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutAutomationInput
    | Prisma.AnalyticsEventUpdateManyWithWhereWithoutAutomationInput[];
  deleteMany?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
};

export type AnalyticsEventCreateWithoutUserInput = {
  id?: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutAnalyticsEventsInput;
  subscriber?: Prisma.SubscriberCreateNestedOneWithoutAnalyticsEventsInput;
  campaign?: Prisma.CampaignCreateNestedOneWithoutAnalyticsEventsInput;
  automation?: Prisma.AutomationFlowCreateNestedOneWithoutAnalyticsEventsInput;
};

export type AnalyticsEventUncheckedCreateWithoutUserInput = {
  id?: string;
  projectId: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventCreateOrConnectWithoutUserInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutUserInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutUserInput
  >;
};

export type AnalyticsEventCreateManyUserInputEnvelope = {
  data:
    | Prisma.AnalyticsEventCreateManyUserInput
    | Prisma.AnalyticsEventCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type AnalyticsEventUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutUserInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutUserInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutUserInput
  >;
};

export type AnalyticsEventUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutUserInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutUserInput
  >;
};

export type AnalyticsEventUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.AnalyticsEventScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyWithoutUserInput
  >;
};

export type AnalyticsEventScalarWhereInput = {
  AND?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
  OR?: Prisma.AnalyticsEventScalarWhereInput[];
  NOT?:
    | Prisma.AnalyticsEventScalarWhereInput
    | Prisma.AnalyticsEventScalarWhereInput[];
  id?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  projectId?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  userId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  eventType?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  eventName?: Prisma.StringFilter<"AnalyticsEvent"> | string;
  eventData?: Prisma.JsonFilter<"AnalyticsEvent">;
  subscriberId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  campaignId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  automationId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  sessionId?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  userAgent?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  ipAddress?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  referrer?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmSource?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmMedium?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmCampaign?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmTerm?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  utmContent?: Prisma.StringNullableFilter<"AnalyticsEvent"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"AnalyticsEvent"> | Date | string;
};

export type AnalyticsEventCreateWithoutProjectInput = {
  id?: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAnalyticsEventsInput;
  subscriber?: Prisma.SubscriberCreateNestedOneWithoutAnalyticsEventsInput;
  campaign?: Prisma.CampaignCreateNestedOneWithoutAnalyticsEventsInput;
  automation?: Prisma.AutomationFlowCreateNestedOneWithoutAnalyticsEventsInput;
};

export type AnalyticsEventUncheckedCreateWithoutProjectInput = {
  id?: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventCreateOrConnectWithoutProjectInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutProjectInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput
  >;
};

export type AnalyticsEventCreateManyProjectInputEnvelope = {
  data:
    | Prisma.AnalyticsEventCreateManyProjectInput
    | Prisma.AnalyticsEventCreateManyProjectInput[];
  skipDuplicates?: boolean;
};

export type AnalyticsEventUpsertWithWhereUniqueWithoutProjectInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutProjectInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutProjectInput
  >;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutProjectInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutProjectInput
  >;
};

export type AnalyticsEventUpdateWithWhereUniqueWithoutProjectInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutProjectInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutProjectInput
  >;
};

export type AnalyticsEventUpdateManyWithWhereWithoutProjectInput = {
  where: Prisma.AnalyticsEventScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyWithoutProjectInput
  >;
};

export type AnalyticsEventCreateWithoutCampaignInput = {
  id?: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutAnalyticsEventsInput;
  user?: Prisma.UserCreateNestedOneWithoutAnalyticsEventsInput;
  subscriber?: Prisma.SubscriberCreateNestedOneWithoutAnalyticsEventsInput;
  automation?: Prisma.AutomationFlowCreateNestedOneWithoutAnalyticsEventsInput;
};

export type AnalyticsEventUncheckedCreateWithoutCampaignInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventCreateOrConnectWithoutCampaignInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutCampaignInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput
  >;
};

export type AnalyticsEventCreateManyCampaignInputEnvelope = {
  data:
    | Prisma.AnalyticsEventCreateManyCampaignInput
    | Prisma.AnalyticsEventCreateManyCampaignInput[];
  skipDuplicates?: boolean;
};

export type AnalyticsEventUpsertWithWhereUniqueWithoutCampaignInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutCampaignInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutCampaignInput
  >;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutCampaignInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutCampaignInput
  >;
};

export type AnalyticsEventUpdateWithWhereUniqueWithoutCampaignInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutCampaignInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutCampaignInput
  >;
};

export type AnalyticsEventUpdateManyWithWhereWithoutCampaignInput = {
  where: Prisma.AnalyticsEventScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyWithoutCampaignInput
  >;
};

export type AnalyticsEventCreateWithoutSubscriberInput = {
  id?: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutAnalyticsEventsInput;
  user?: Prisma.UserCreateNestedOneWithoutAnalyticsEventsInput;
  campaign?: Prisma.CampaignCreateNestedOneWithoutAnalyticsEventsInput;
  automation?: Prisma.AutomationFlowCreateNestedOneWithoutAnalyticsEventsInput;
};

export type AnalyticsEventUncheckedCreateWithoutSubscriberInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventCreateOrConnectWithoutSubscriberInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutSubscriberInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput
  >;
};

export type AnalyticsEventCreateManySubscriberInputEnvelope = {
  data:
    | Prisma.AnalyticsEventCreateManySubscriberInput
    | Prisma.AnalyticsEventCreateManySubscriberInput[];
  skipDuplicates?: boolean;
};

export type AnalyticsEventUpsertWithWhereUniqueWithoutSubscriberInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutSubscriberInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutSubscriberInput
  >;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutSubscriberInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutSubscriberInput
  >;
};

export type AnalyticsEventUpdateWithWhereUniqueWithoutSubscriberInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutSubscriberInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutSubscriberInput
  >;
};

export type AnalyticsEventUpdateManyWithWhereWithoutSubscriberInput = {
  where: Prisma.AnalyticsEventScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyWithoutSubscriberInput
  >;
};

export type AnalyticsEventCreateWithoutAutomationInput = {
  id?: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutAnalyticsEventsInput;
  user?: Prisma.UserCreateNestedOneWithoutAnalyticsEventsInput;
  subscriber?: Prisma.SubscriberCreateNestedOneWithoutAnalyticsEventsInput;
  campaign?: Prisma.CampaignCreateNestedOneWithoutAnalyticsEventsInput;
};

export type AnalyticsEventUncheckedCreateWithoutAutomationInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventCreateOrConnectWithoutAutomationInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutAutomationInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput
  >;
};

export type AnalyticsEventCreateManyAutomationInputEnvelope = {
  data:
    | Prisma.AnalyticsEventCreateManyAutomationInput
    | Prisma.AnalyticsEventCreateManyAutomationInput[];
  skipDuplicates?: boolean;
};

export type AnalyticsEventUpsertWithWhereUniqueWithoutAutomationInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutAutomationInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutAutomationInput
  >;
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateWithoutAutomationInput,
    Prisma.AnalyticsEventUncheckedCreateWithoutAutomationInput
  >;
};

export type AnalyticsEventUpdateWithWhereUniqueWithoutAutomationInput = {
  where: Prisma.AnalyticsEventWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateWithoutAutomationInput,
    Prisma.AnalyticsEventUncheckedUpdateWithoutAutomationInput
  >;
};

export type AnalyticsEventUpdateManyWithWhereWithoutAutomationInput = {
  where: Prisma.AnalyticsEventScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyWithoutAutomationInput
  >;
};

export type AnalyticsEventCreateManyUserInput = {
  id?: string;
  projectId: string;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAnalyticsEventsNestedInput;
  subscriber?: Prisma.SubscriberUpdateOneWithoutAnalyticsEventsNestedInput;
  campaign?: Prisma.CampaignUpdateOneWithoutAnalyticsEventsNestedInput;
  automation?: Prisma.AutomationFlowUpdateOneWithoutAnalyticsEventsNestedInput;
};

export type AnalyticsEventUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventCreateManyProjectInput = {
  id?: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAnalyticsEventsNestedInput;
  subscriber?: Prisma.SubscriberUpdateOneWithoutAnalyticsEventsNestedInput;
  campaign?: Prisma.CampaignUpdateOneWithoutAnalyticsEventsNestedInput;
  automation?: Prisma.AutomationFlowUpdateOneWithoutAnalyticsEventsNestedInput;
};

export type AnalyticsEventUncheckedUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventUncheckedUpdateManyWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventCreateManyCampaignInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateWithoutCampaignInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAnalyticsEventsNestedInput;
  user?: Prisma.UserUpdateOneWithoutAnalyticsEventsNestedInput;
  subscriber?: Prisma.SubscriberUpdateOneWithoutAnalyticsEventsNestedInput;
  automation?: Prisma.AutomationFlowUpdateOneWithoutAnalyticsEventsNestedInput;
};

export type AnalyticsEventUncheckedUpdateWithoutCampaignInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventUncheckedUpdateManyWithoutCampaignInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventCreateManySubscriberInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  campaignId?: string | null;
  automationId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateWithoutSubscriberInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAnalyticsEventsNestedInput;
  user?: Prisma.UserUpdateOneWithoutAnalyticsEventsNestedInput;
  campaign?: Prisma.CampaignUpdateOneWithoutAnalyticsEventsNestedInput;
  automation?: Prisma.AutomationFlowUpdateOneWithoutAnalyticsEventsNestedInput;
};

export type AnalyticsEventUncheckedUpdateWithoutSubscriberInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventUncheckedUpdateManyWithoutSubscriberInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  automationId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventCreateManyAutomationInput = {
  id?: string;
  projectId: string;
  userId?: string | null;
  eventType: string;
  eventName: string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?: string | null;
  campaignId?: string | null;
  sessionId?: string | null;
  userAgent?: string | null;
  ipAddress?: string | null;
  referrer?: string | null;
  utmSource?: string | null;
  utmMedium?: string | null;
  utmCampaign?: string | null;
  utmTerm?: string | null;
  utmContent?: string | null;
  createdAt?: Date | string;
};

export type AnalyticsEventUpdateWithoutAutomationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutAnalyticsEventsNestedInput;
  user?: Prisma.UserUpdateOneWithoutAnalyticsEventsNestedInput;
  subscriber?: Prisma.SubscriberUpdateOneWithoutAnalyticsEventsNestedInput;
  campaign?: Prisma.CampaignUpdateOneWithoutAnalyticsEventsNestedInput;
};

export type AnalyticsEventUncheckedUpdateWithoutAutomationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventUncheckedUpdateManyWithoutAutomationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.StringFieldUpdateOperationsInput | string;
  eventName?: Prisma.StringFieldUpdateOperationsInput | string;
  eventData?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriberId?:
    | Prisma.NullableStringFieldUpdateOperationsInput
    | string
    | null;
  campaignId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  sessionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userAgent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  ipAddress?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  referrer?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmSource?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmMedium?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmCampaign?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmTerm?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  utmContent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AnalyticsEventSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    eventType?: boolean;
    eventName?: boolean;
    eventData?: boolean;
    subscriberId?: boolean;
    campaignId?: boolean;
    automationId?: boolean;
    sessionId?: boolean;
    userAgent?: boolean;
    ipAddress?: boolean;
    referrer?: boolean;
    utmSource?: boolean;
    utmMedium?: boolean;
    utmCampaign?: boolean;
    utmTerm?: boolean;
    utmContent?: boolean;
    createdAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.AnalyticsEvent$userArgs<ExtArgs>;
    subscriber?: boolean | Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>;
    campaign?: boolean | Prisma.AnalyticsEvent$campaignArgs<ExtArgs>;
    automation?: boolean | Prisma.AnalyticsEvent$automationArgs<ExtArgs>;
  },
  ExtArgs["result"]["analyticsEvent"]
>;

export type AnalyticsEventSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    eventType?: boolean;
    eventName?: boolean;
    eventData?: boolean;
    subscriberId?: boolean;
    campaignId?: boolean;
    automationId?: boolean;
    sessionId?: boolean;
    userAgent?: boolean;
    ipAddress?: boolean;
    referrer?: boolean;
    utmSource?: boolean;
    utmMedium?: boolean;
    utmCampaign?: boolean;
    utmTerm?: boolean;
    utmContent?: boolean;
    createdAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.AnalyticsEvent$userArgs<ExtArgs>;
    subscriber?: boolean | Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>;
    campaign?: boolean | Prisma.AnalyticsEvent$campaignArgs<ExtArgs>;
    automation?: boolean | Prisma.AnalyticsEvent$automationArgs<ExtArgs>;
  },
  ExtArgs["result"]["analyticsEvent"]
>;

export type AnalyticsEventSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    eventType?: boolean;
    eventName?: boolean;
    eventData?: boolean;
    subscriberId?: boolean;
    campaignId?: boolean;
    automationId?: boolean;
    sessionId?: boolean;
    userAgent?: boolean;
    ipAddress?: boolean;
    referrer?: boolean;
    utmSource?: boolean;
    utmMedium?: boolean;
    utmCampaign?: boolean;
    utmTerm?: boolean;
    utmContent?: boolean;
    createdAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.AnalyticsEvent$userArgs<ExtArgs>;
    subscriber?: boolean | Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>;
    campaign?: boolean | Prisma.AnalyticsEvent$campaignArgs<ExtArgs>;
    automation?: boolean | Prisma.AnalyticsEvent$automationArgs<ExtArgs>;
  },
  ExtArgs["result"]["analyticsEvent"]
>;

export type AnalyticsEventSelectScalar = {
  id?: boolean;
  projectId?: boolean;
  userId?: boolean;
  eventType?: boolean;
  eventName?: boolean;
  eventData?: boolean;
  subscriberId?: boolean;
  campaignId?: boolean;
  automationId?: boolean;
  sessionId?: boolean;
  userAgent?: boolean;
  ipAddress?: boolean;
  referrer?: boolean;
  utmSource?: boolean;
  utmMedium?: boolean;
  utmCampaign?: boolean;
  utmTerm?: boolean;
  utmContent?: boolean;
  createdAt?: boolean;
};

export type AnalyticsEventOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "projectId"
  | "userId"
  | "eventType"
  | "eventName"
  | "eventData"
  | "subscriberId"
  | "campaignId"
  | "automationId"
  | "sessionId"
  | "userAgent"
  | "ipAddress"
  | "referrer"
  | "utmSource"
  | "utmMedium"
  | "utmCampaign"
  | "utmTerm"
  | "utmContent"
  | "createdAt",
  ExtArgs["result"]["analyticsEvent"]
>;
export type AnalyticsEventInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.AnalyticsEvent$userArgs<ExtArgs>;
  subscriber?: boolean | Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>;
  campaign?: boolean | Prisma.AnalyticsEvent$campaignArgs<ExtArgs>;
  automation?: boolean | Prisma.AnalyticsEvent$automationArgs<ExtArgs>;
};
export type AnalyticsEventIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.AnalyticsEvent$userArgs<ExtArgs>;
  subscriber?: boolean | Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>;
  campaign?: boolean | Prisma.AnalyticsEvent$campaignArgs<ExtArgs>;
  automation?: boolean | Prisma.AnalyticsEvent$automationArgs<ExtArgs>;
};
export type AnalyticsEventIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.AnalyticsEvent$userArgs<ExtArgs>;
  subscriber?: boolean | Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>;
  campaign?: boolean | Prisma.AnalyticsEvent$campaignArgs<ExtArgs>;
  automation?: boolean | Prisma.AnalyticsEvent$automationArgs<ExtArgs>;
};

export type $AnalyticsEventPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "AnalyticsEvent";
  objects: {
    project: Prisma.$ProjectPayload<ExtArgs>;
    user: Prisma.$UserPayload<ExtArgs> | null;
    subscriber: Prisma.$SubscriberPayload<ExtArgs> | null;
    campaign: Prisma.$CampaignPayload<ExtArgs> | null;
    automation: Prisma.$AutomationFlowPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      projectId: string;
      userId: string | null;
      eventType: string;
      eventName: string;
      eventData: runtime.JsonValue;
      subscriberId: string | null;
      campaignId: string | null;
      automationId: string | null;
      sessionId: string | null;
      userAgent: string | null;
      ipAddress: string | null;
      referrer: string | null;
      utmSource: string | null;
      utmMedium: string | null;
      utmCampaign: string | null;
      utmTerm: string | null;
      utmContent: string | null;
      createdAt: Date;
    },
    ExtArgs["result"]["analyticsEvent"]
  >;
  composites: {};
};

export type AnalyticsEventGetPayload<
  S extends boolean | null | undefined | AnalyticsEventDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$AnalyticsEventPayload, S>;

export type AnalyticsEventCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  AnalyticsEventFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: AnalyticsEventCountAggregateInputType | true;
};

export interface AnalyticsEventDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["AnalyticsEvent"];
    meta: { name: "AnalyticsEvent" };
  };
  /**
   * Find zero or one AnalyticsEvent that matches the filter.
   * @param {AnalyticsEventFindUniqueArgs} args - Arguments to find a AnalyticsEvent
   * @example
   * // Get one AnalyticsEvent
   * const analyticsEvent = await prisma.analyticsEvent.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AnalyticsEventFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one AnalyticsEvent that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AnalyticsEventFindUniqueOrThrowArgs} args - Arguments to find a AnalyticsEvent
   * @example
   * // Get one AnalyticsEvent
   * const analyticsEvent = await prisma.analyticsEvent.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AnalyticsEventFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AnalyticsEvent that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventFindFirstArgs} args - Arguments to find a AnalyticsEvent
   * @example
   * // Get one AnalyticsEvent
   * const analyticsEvent = await prisma.analyticsEvent.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AnalyticsEventFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AnalyticsEventFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AnalyticsEvent that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventFindFirstOrThrowArgs} args - Arguments to find a AnalyticsEvent
   * @example
   * // Get one AnalyticsEvent
   * const analyticsEvent = await prisma.analyticsEvent.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AnalyticsEventFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AnalyticsEventFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more AnalyticsEvents that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AnalyticsEvents
   * const analyticsEvents = await prisma.analyticsEvent.findMany()
   *
   * // Get first 10 AnalyticsEvents
   * const analyticsEvents = await prisma.analyticsEvent.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const analyticsEventWithIdOnly = await prisma.analyticsEvent.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AnalyticsEventFindManyArgs>(
    args?: Prisma.SelectSubset<T, AnalyticsEventFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a AnalyticsEvent.
   * @param {AnalyticsEventCreateArgs} args - Arguments to create a AnalyticsEvent.
   * @example
   * // Create one AnalyticsEvent
   * const AnalyticsEvent = await prisma.analyticsEvent.create({
   *   data: {
   *     // ... data to create a AnalyticsEvent
   *   }
   * })
   *
   */
  create<T extends AnalyticsEventCreateArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventCreateArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many AnalyticsEvents.
   * @param {AnalyticsEventCreateManyArgs} args - Arguments to create many AnalyticsEvents.
   * @example
   * // Create many AnalyticsEvents
   * const analyticsEvent = await prisma.analyticsEvent.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AnalyticsEventCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AnalyticsEventCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many AnalyticsEvents and returns the data saved in the database.
   * @param {AnalyticsEventCreateManyAndReturnArgs} args - Arguments to create many AnalyticsEvents.
   * @example
   * // Create many AnalyticsEvents
   * const analyticsEvent = await prisma.analyticsEvent.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many AnalyticsEvents and only return the `id`
   * const analyticsEventWithIdOnly = await prisma.analyticsEvent.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AnalyticsEventCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<
      T,
      AnalyticsEventCreateManyAndReturnArgs<ExtArgs>
    >
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a AnalyticsEvent.
   * @param {AnalyticsEventDeleteArgs} args - Arguments to delete one AnalyticsEvent.
   * @example
   * // Delete one AnalyticsEvent
   * const AnalyticsEvent = await prisma.analyticsEvent.delete({
   *   where: {
   *     // ... filter to delete one AnalyticsEvent
   *   }
   * })
   *
   */
  delete<T extends AnalyticsEventDeleteArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one AnalyticsEvent.
   * @param {AnalyticsEventUpdateArgs} args - Arguments to update one AnalyticsEvent.
   * @example
   * // Update one AnalyticsEvent
   * const analyticsEvent = await prisma.analyticsEvent.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AnalyticsEventUpdateArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more AnalyticsEvents.
   * @param {AnalyticsEventDeleteManyArgs} args - Arguments to filter AnalyticsEvents to delete.
   * @example
   * // Delete a few AnalyticsEvents
   * const { count } = await prisma.analyticsEvent.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AnalyticsEventDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AnalyticsEventDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AnalyticsEvents.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AnalyticsEvents
   * const analyticsEvent = await prisma.analyticsEvent.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AnalyticsEventUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AnalyticsEvents and returns the data updated in the database.
   * @param {AnalyticsEventUpdateManyAndReturnArgs} args - Arguments to update many AnalyticsEvents.
   * @example
   * // Update many AnalyticsEvents
   * const analyticsEvent = await prisma.analyticsEvent.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more AnalyticsEvents and only return the `id`
   * const analyticsEventWithIdOnly = await prisma.analyticsEvent.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AnalyticsEventUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one AnalyticsEvent.
   * @param {AnalyticsEventUpsertArgs} args - Arguments to update or create a AnalyticsEvent.
   * @example
   * // Update or create a AnalyticsEvent
   * const analyticsEvent = await prisma.analyticsEvent.upsert({
   *   create: {
   *     // ... data to create a AnalyticsEvent
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AnalyticsEvent we want to update
   *   }
   * })
   */
  upsert<T extends AnalyticsEventUpsertArgs>(
    args: Prisma.SelectSubset<T, AnalyticsEventUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__AnalyticsEventClient<
    runtime.Types.Result.GetResult<
      Prisma.$AnalyticsEventPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of AnalyticsEvents.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventCountArgs} args - Arguments to filter AnalyticsEvents to count.
   * @example
   * // Count the number of AnalyticsEvents
   * const count = await prisma.analyticsEvent.count({
   *   where: {
   *     // ... the filter for the AnalyticsEvents we want to count
   *   }
   * })
   **/
  count<T extends AnalyticsEventCountArgs>(
    args?: Prisma.Subset<T, AnalyticsEventCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            AnalyticsEventCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a AnalyticsEvent.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AnalyticsEventAggregateArgs>(
    args: Prisma.Subset<T, AnalyticsEventAggregateArgs>
  ): Prisma.PrismaPromise<GetAnalyticsEventAggregateType<T>>;

  /**
   * Group by AnalyticsEvent.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnalyticsEventGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AnalyticsEventGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AnalyticsEventGroupByArgs["orderBy"] }
      : { orderBy?: AnalyticsEventGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, AnalyticsEventGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetAnalyticsEventGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the AnalyticsEvent model
   */
  readonly fields: AnalyticsEventFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AnalyticsEvent.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AnalyticsEventClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__ProjectClient<
    | runtime.Types.Result.GetResult<
        Prisma.$ProjectPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.AnalyticsEvent$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AnalyticsEvent$userArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  subscriber<T extends Prisma.AnalyticsEvent$subscriberArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AnalyticsEvent$subscriberArgs<ExtArgs>>
  ): Prisma.Prisma__SubscriberClient<
    runtime.Types.Result.GetResult<
      Prisma.$SubscriberPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  campaign<T extends Prisma.AnalyticsEvent$campaignArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AnalyticsEvent$campaignArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  automation<T extends Prisma.AnalyticsEvent$automationArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AnalyticsEvent$automationArgs<ExtArgs>>
  ): Prisma.Prisma__AutomationFlowClient<
    runtime.Types.Result.GetResult<
      Prisma.$AutomationFlowPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the AnalyticsEvent model
 */
export interface AnalyticsEventFieldRefs {
  readonly id: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly projectId: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly userId: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly eventType: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly eventName: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly eventData: Prisma.FieldRef<"AnalyticsEvent", "Json">;
  readonly subscriberId: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly campaignId: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly automationId: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly sessionId: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly userAgent: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly ipAddress: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly referrer: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly utmSource: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly utmMedium: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly utmCampaign: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly utmTerm: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly utmContent: Prisma.FieldRef<"AnalyticsEvent", "String">;
  readonly createdAt: Prisma.FieldRef<"AnalyticsEvent", "DateTime">;
}

// Custom InputTypes
/**
 * AnalyticsEvent findUnique
 */
export type AnalyticsEventFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * Filter, which AnalyticsEvent to fetch.
   */
  where: Prisma.AnalyticsEventWhereUniqueInput;
};

/**
 * AnalyticsEvent findUniqueOrThrow
 */
export type AnalyticsEventFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * Filter, which AnalyticsEvent to fetch.
   */
  where: Prisma.AnalyticsEventWhereUniqueInput;
};

/**
 * AnalyticsEvent findFirst
 */
export type AnalyticsEventFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * Filter, which AnalyticsEvent to fetch.
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AnalyticsEvents to fetch.
   */
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithRelationInput
    | Prisma.AnalyticsEventOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AnalyticsEvents.
   */
  cursor?: Prisma.AnalyticsEventWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AnalyticsEvents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AnalyticsEvents.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AnalyticsEvents.
   */
  distinct?:
    | Prisma.AnalyticsEventScalarFieldEnum
    | Prisma.AnalyticsEventScalarFieldEnum[];
};

/**
 * AnalyticsEvent findFirstOrThrow
 */
export type AnalyticsEventFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * Filter, which AnalyticsEvent to fetch.
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AnalyticsEvents to fetch.
   */
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithRelationInput
    | Prisma.AnalyticsEventOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AnalyticsEvents.
   */
  cursor?: Prisma.AnalyticsEventWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AnalyticsEvents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AnalyticsEvents.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AnalyticsEvents.
   */
  distinct?:
    | Prisma.AnalyticsEventScalarFieldEnum
    | Prisma.AnalyticsEventScalarFieldEnum[];
};

/**
 * AnalyticsEvent findMany
 */
export type AnalyticsEventFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * Filter, which AnalyticsEvents to fetch.
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AnalyticsEvents to fetch.
   */
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithRelationInput
    | Prisma.AnalyticsEventOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing AnalyticsEvents.
   */
  cursor?: Prisma.AnalyticsEventWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AnalyticsEvents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AnalyticsEvents.
   */
  skip?: number;
  distinct?:
    | Prisma.AnalyticsEventScalarFieldEnum
    | Prisma.AnalyticsEventScalarFieldEnum[];
};

/**
 * AnalyticsEvent create
 */
export type AnalyticsEventCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * The data needed to create a AnalyticsEvent.
   */
  data: Prisma.XOR<
    Prisma.AnalyticsEventCreateInput,
    Prisma.AnalyticsEventUncheckedCreateInput
  >;
};

/**
 * AnalyticsEvent createMany
 */
export type AnalyticsEventCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many AnalyticsEvents.
   */
  data:
    | Prisma.AnalyticsEventCreateManyInput
    | Prisma.AnalyticsEventCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AnalyticsEvent createManyAndReturn
 */
export type AnalyticsEventCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * The data used to create many AnalyticsEvents.
   */
  data:
    | Prisma.AnalyticsEventCreateManyInput
    | Prisma.AnalyticsEventCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * AnalyticsEvent update
 */
export type AnalyticsEventUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * The data needed to update a AnalyticsEvent.
   */
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateInput,
    Prisma.AnalyticsEventUncheckedUpdateInput
  >;
  /**
   * Choose, which AnalyticsEvent to update.
   */
  where: Prisma.AnalyticsEventWhereUniqueInput;
};

/**
 * AnalyticsEvent updateMany
 */
export type AnalyticsEventUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update AnalyticsEvents.
   */
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyInput
  >;
  /**
   * Filter which AnalyticsEvents to update
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * Limit how many AnalyticsEvents to update.
   */
  limit?: number;
};

/**
 * AnalyticsEvent updateManyAndReturn
 */
export type AnalyticsEventUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * The data used to update AnalyticsEvents.
   */
  data: Prisma.XOR<
    Prisma.AnalyticsEventUpdateManyMutationInput,
    Prisma.AnalyticsEventUncheckedUpdateManyInput
  >;
  /**
   * Filter which AnalyticsEvents to update
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * Limit how many AnalyticsEvents to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * AnalyticsEvent upsert
 */
export type AnalyticsEventUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * The filter to search for the AnalyticsEvent to update in case it exists.
   */
  where: Prisma.AnalyticsEventWhereUniqueInput;
  /**
   * In case the AnalyticsEvent found by the `where` argument doesn't exist, create a new AnalyticsEvent with this data.
   */
  create: Prisma.XOR<
    Prisma.AnalyticsEventCreateInput,
    Prisma.AnalyticsEventUncheckedCreateInput
  >;
  /**
   * In case the AnalyticsEvent was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.AnalyticsEventUpdateInput,
    Prisma.AnalyticsEventUncheckedUpdateInput
  >;
};

/**
 * AnalyticsEvent delete
 */
export type AnalyticsEventDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  /**
   * Filter which AnalyticsEvent to delete.
   */
  where: Prisma.AnalyticsEventWhereUniqueInput;
};

/**
 * AnalyticsEvent deleteMany
 */
export type AnalyticsEventDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which AnalyticsEvents to delete
   */
  where?: Prisma.AnalyticsEventWhereInput;
  /**
   * Limit how many AnalyticsEvents to delete.
   */
  limit?: number;
};

/**
 * AnalyticsEvent.user
 */
export type AnalyticsEvent$userArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * AnalyticsEvent.subscriber
 */
export type AnalyticsEvent$subscriberArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Subscriber
   */
  select?: Prisma.SubscriberSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Subscriber
   */
  omit?: Prisma.SubscriberOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubscriberInclude<ExtArgs> | null;
  where?: Prisma.SubscriberWhereInput;
};

/**
 * AnalyticsEvent.campaign
 */
export type AnalyticsEvent$campaignArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  where?: Prisma.CampaignWhereInput;
};

/**
 * AnalyticsEvent.automation
 */
export type AnalyticsEvent$automationArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AutomationFlow
   */
  select?: Prisma.AutomationFlowSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AutomationFlow
   */
  omit?: Prisma.AutomationFlowOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutomationFlowInclude<ExtArgs> | null;
  where?: Prisma.AutomationFlowWhereInput;
};

/**
 * AnalyticsEvent without action
 */
export type AnalyticsEventDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
};
