/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `Campaign` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Campaign
 *
 */
export type CampaignModel =
  runtime.Types.Result.DefaultSelection<Prisma.$CampaignPayload>;

export type AggregateCampaign = {
  _count: CampaignCountAggregateOutputType | null;
  _avg: CampaignAvgAggregateOutputType | null;
  _sum: CampaignSumAggregateOutputType | null;
  _min: CampaignMinAggregateOutputType | null;
  _max: CampaignMaxAggregateOutputType | null;
};

export type CampaignAvgAggregateOutputType = {
  totalSubscribers: number | null;
  activeSubscribers: number | null;
  conversionRate: runtime.Decimal | null;
};

export type CampaignSumAggregateOutputType = {
  totalSubscribers: number | null;
  activeSubscribers: number | null;
  conversionRate: runtime.Decimal | null;
};

export type CampaignMinAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  name: string | null;
  description: string | null;
  type: string | null;
  status: string | null;
  totalSubscribers: number | null;
  activeSubscribers: number | null;
  conversionRate: runtime.Decimal | null;
  scheduledAt: Date | null;
  launchedAt: Date | null;
  completedAt: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type CampaignMaxAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  name: string | null;
  description: string | null;
  type: string | null;
  status: string | null;
  totalSubscribers: number | null;
  activeSubscribers: number | null;
  conversionRate: runtime.Decimal | null;
  scheduledAt: Date | null;
  launchedAt: Date | null;
  completedAt: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type CampaignCountAggregateOutputType = {
  id: number;
  projectId: number;
  userId: number;
  name: number;
  description: number;
  type: number;
  status: number;
  settings: number;
  content: number;
  totalSubscribers: number;
  activeSubscribers: number;
  conversionRate: number;
  scheduledAt: number;
  launchedAt: number;
  completedAt: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type CampaignAvgAggregateInputType = {
  totalSubscribers?: true;
  activeSubscribers?: true;
  conversionRate?: true;
};

export type CampaignSumAggregateInputType = {
  totalSubscribers?: true;
  activeSubscribers?: true;
  conversionRate?: true;
};

export type CampaignMinAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  description?: true;
  type?: true;
  status?: true;
  totalSubscribers?: true;
  activeSubscribers?: true;
  conversionRate?: true;
  scheduledAt?: true;
  launchedAt?: true;
  completedAt?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type CampaignMaxAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  description?: true;
  type?: true;
  status?: true;
  totalSubscribers?: true;
  activeSubscribers?: true;
  conversionRate?: true;
  scheduledAt?: true;
  launchedAt?: true;
  completedAt?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type CampaignCountAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  description?: true;
  type?: true;
  status?: true;
  settings?: true;
  content?: true;
  totalSubscribers?: true;
  activeSubscribers?: true;
  conversionRate?: true;
  scheduledAt?: true;
  launchedAt?: true;
  completedAt?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type CampaignAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Campaign to aggregate.
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Campaigns to fetch.
   */
  orderBy?:
    | Prisma.CampaignOrderByWithRelationInput
    | Prisma.CampaignOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.CampaignWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Campaigns from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Campaigns.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Campaigns
   **/
  _count?: true | CampaignCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: CampaignAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: CampaignSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: CampaignMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: CampaignMaxAggregateInputType;
};

export type GetCampaignAggregateType<T extends CampaignAggregateArgs> = {
  [P in keyof T & keyof AggregateCampaign]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCampaign[P]>
    : Prisma.GetScalarType<T[P], AggregateCampaign[P]>;
};

export type CampaignGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CampaignWhereInput;
  orderBy?:
    | Prisma.CampaignOrderByWithAggregationInput
    | Prisma.CampaignOrderByWithAggregationInput[];
  by: Prisma.CampaignScalarFieldEnum[] | Prisma.CampaignScalarFieldEnum;
  having?: Prisma.CampaignScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: CampaignCountAggregateInputType | true;
  _avg?: CampaignAvgAggregateInputType;
  _sum?: CampaignSumAggregateInputType;
  _min?: CampaignMinAggregateInputType;
  _max?: CampaignMaxAggregateInputType;
};

export type CampaignGroupByOutputType = {
  id: string;
  projectId: string;
  userId: string;
  name: string;
  description: string | null;
  type: string;
  status: string;
  settings: runtime.JsonValue;
  content: runtime.JsonValue;
  totalSubscribers: number;
  activeSubscribers: number;
  conversionRate: runtime.Decimal;
  scheduledAt: Date | null;
  launchedAt: Date | null;
  completedAt: Date | null;
  createdAt: Date;
  updatedAt: Date;
  _count: CampaignCountAggregateOutputType | null;
  _avg: CampaignAvgAggregateOutputType | null;
  _sum: CampaignSumAggregateOutputType | null;
  _min: CampaignMinAggregateOutputType | null;
  _max: CampaignMaxAggregateOutputType | null;
};

type GetCampaignGroupByPayload<T extends CampaignGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<CampaignGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof CampaignGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], CampaignGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], CampaignGroupByOutputType[P]>;
      }
    >
  >;

export type CampaignWhereInput = {
  AND?: Prisma.CampaignWhereInput | Prisma.CampaignWhereInput[];
  OR?: Prisma.CampaignWhereInput[];
  NOT?: Prisma.CampaignWhereInput | Prisma.CampaignWhereInput[];
  id?: Prisma.StringFilter<"Campaign"> | string;
  projectId?: Prisma.StringFilter<"Campaign"> | string;
  userId?: Prisma.StringFilter<"Campaign"> | string;
  name?: Prisma.StringFilter<"Campaign"> | string;
  description?: Prisma.StringNullableFilter<"Campaign"> | string | null;
  type?: Prisma.StringFilter<"Campaign"> | string;
  status?: Prisma.StringFilter<"Campaign"> | string;
  settings?: Prisma.JsonFilter<"Campaign">;
  content?: Prisma.JsonFilter<"Campaign">;
  totalSubscribers?: Prisma.IntFilter<"Campaign"> | number;
  activeSubscribers?: Prisma.IntFilter<"Campaign"> | number;
  conversionRate?:
    | Prisma.DecimalFilter<"Campaign">
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.DateTimeNullableFilter<"Campaign">
    | Date
    | string
    | null;
  launchedAt?: Prisma.DateTimeNullableFilter<"Campaign"> | Date | string | null;
  completedAt?:
    | Prisma.DateTimeNullableFilter<"Campaign">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<"Campaign"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Campaign"> | Date | string;
  project?: Prisma.XOR<
    Prisma.ProjectScalarRelationFilter,
    Prisma.ProjectWhereInput
  >;
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  subscribers?: Prisma.SubscriberListRelationFilter;
  analyticsEvents?: Prisma.AnalyticsEventListRelationFilter;
};

export type CampaignOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrderInput | Prisma.SortOrder;
  type?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  settings?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
  scheduledAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  launchedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  completedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  project?: Prisma.ProjectOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
  subscribers?: Prisma.SubscriberOrderByRelationAggregateInput;
  analyticsEvents?: Prisma.AnalyticsEventOrderByRelationAggregateInput;
};

export type CampaignWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.CampaignWhereInput | Prisma.CampaignWhereInput[];
    OR?: Prisma.CampaignWhereInput[];
    NOT?: Prisma.CampaignWhereInput | Prisma.CampaignWhereInput[];
    projectId?: Prisma.StringFilter<"Campaign"> | string;
    userId?: Prisma.StringFilter<"Campaign"> | string;
    name?: Prisma.StringFilter<"Campaign"> | string;
    description?: Prisma.StringNullableFilter<"Campaign"> | string | null;
    type?: Prisma.StringFilter<"Campaign"> | string;
    status?: Prisma.StringFilter<"Campaign"> | string;
    settings?: Prisma.JsonFilter<"Campaign">;
    content?: Prisma.JsonFilter<"Campaign">;
    totalSubscribers?: Prisma.IntFilter<"Campaign"> | number;
    activeSubscribers?: Prisma.IntFilter<"Campaign"> | number;
    conversionRate?:
      | Prisma.DecimalFilter<"Campaign">
      | runtime.Decimal
      | runtime.DecimalJsLike
      | number
      | string;
    scheduledAt?:
      | Prisma.DateTimeNullableFilter<"Campaign">
      | Date
      | string
      | null;
    launchedAt?:
      | Prisma.DateTimeNullableFilter<"Campaign">
      | Date
      | string
      | null;
    completedAt?:
      | Prisma.DateTimeNullableFilter<"Campaign">
      | Date
      | string
      | null;
    createdAt?: Prisma.DateTimeFilter<"Campaign"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"Campaign"> | Date | string;
    project?: Prisma.XOR<
      Prisma.ProjectScalarRelationFilter,
      Prisma.ProjectWhereInput
    >;
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
    subscribers?: Prisma.SubscriberListRelationFilter;
    analyticsEvents?: Prisma.AnalyticsEventListRelationFilter;
  },
  "id"
>;

export type CampaignOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrderInput | Prisma.SortOrder;
  type?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  settings?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
  scheduledAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  launchedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  completedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.CampaignCountOrderByAggregateInput;
  _avg?: Prisma.CampaignAvgOrderByAggregateInput;
  _max?: Prisma.CampaignMaxOrderByAggregateInput;
  _min?: Prisma.CampaignMinOrderByAggregateInput;
  _sum?: Prisma.CampaignSumOrderByAggregateInput;
};

export type CampaignScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.CampaignScalarWhereWithAggregatesInput
    | Prisma.CampaignScalarWhereWithAggregatesInput[];
  OR?: Prisma.CampaignScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.CampaignScalarWhereWithAggregatesInput
    | Prisma.CampaignScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"Campaign"> | string;
  projectId?: Prisma.StringWithAggregatesFilter<"Campaign"> | string;
  userId?: Prisma.StringWithAggregatesFilter<"Campaign"> | string;
  name?: Prisma.StringWithAggregatesFilter<"Campaign"> | string;
  description?:
    | Prisma.StringNullableWithAggregatesFilter<"Campaign">
    | string
    | null;
  type?: Prisma.StringWithAggregatesFilter<"Campaign"> | string;
  status?: Prisma.StringWithAggregatesFilter<"Campaign"> | string;
  settings?: Prisma.JsonWithAggregatesFilter<"Campaign">;
  content?: Prisma.JsonWithAggregatesFilter<"Campaign">;
  totalSubscribers?: Prisma.IntWithAggregatesFilter<"Campaign"> | number;
  activeSubscribers?: Prisma.IntWithAggregatesFilter<"Campaign"> | number;
  conversionRate?:
    | Prisma.DecimalWithAggregatesFilter<"Campaign">
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Campaign">
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Campaign">
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"Campaign">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Campaign"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Campaign"> | Date | string;
};

export type CampaignCreateInput = {
  id?: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutCampaignsInput;
  user: Prisma.UserCreateNestedOneWithoutCampaignsInput;
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutCampaignInput;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutCampaignInput;
};

export type CampaignUncheckedCreateInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutCampaignInput;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutCampaignInput;
};

export type CampaignUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutCampaignsNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutCampaignsNestedInput;
  subscribers?: Prisma.SubscriberUpdateManyWithoutCampaignNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutCampaignNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutCampaignNestedInput;
};

export type CampaignCreateManyInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CampaignUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CampaignUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CampaignListRelationFilter = {
  every?: Prisma.CampaignWhereInput;
  some?: Prisma.CampaignWhereInput;
  none?: Prisma.CampaignWhereInput;
};

export type CampaignOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type CampaignCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  settings?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
  scheduledAt?: Prisma.SortOrder;
  launchedAt?: Prisma.SortOrder;
  completedAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CampaignAvgOrderByAggregateInput = {
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
};

export type CampaignMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
  scheduledAt?: Prisma.SortOrder;
  launchedAt?: Prisma.SortOrder;
  completedAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CampaignMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
  scheduledAt?: Prisma.SortOrder;
  launchedAt?: Prisma.SortOrder;
  completedAt?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CampaignSumOrderByAggregateInput = {
  totalSubscribers?: Prisma.SortOrder;
  activeSubscribers?: Prisma.SortOrder;
  conversionRate?: Prisma.SortOrder;
};

export type CampaignNullableScalarRelationFilter = {
  is?: Prisma.CampaignWhereInput | null;
  isNot?: Prisma.CampaignWhereInput | null;
};

export type CampaignCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutUserInput,
        Prisma.CampaignUncheckedCreateWithoutUserInput
      >
    | Prisma.CampaignCreateWithoutUserInput[]
    | Prisma.CampaignUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutUserInput
    | Prisma.CampaignCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.CampaignCreateManyUserInputEnvelope;
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
};

export type CampaignUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutUserInput,
        Prisma.CampaignUncheckedCreateWithoutUserInput
      >
    | Prisma.CampaignCreateWithoutUserInput[]
    | Prisma.CampaignUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutUserInput
    | Prisma.CampaignCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.CampaignCreateManyUserInputEnvelope;
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
};

export type CampaignUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutUserInput,
        Prisma.CampaignUncheckedCreateWithoutUserInput
      >
    | Prisma.CampaignCreateWithoutUserInput[]
    | Prisma.CampaignUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutUserInput
    | Prisma.CampaignCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.CampaignUpsertWithWhereUniqueWithoutUserInput
    | Prisma.CampaignUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.CampaignCreateManyUserInputEnvelope;
  set?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  disconnect?:
    | Prisma.CampaignWhereUniqueInput
    | Prisma.CampaignWhereUniqueInput[];
  delete?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  update?:
    | Prisma.CampaignUpdateWithWhereUniqueWithoutUserInput
    | Prisma.CampaignUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.CampaignUpdateManyWithWhereWithoutUserInput
    | Prisma.CampaignUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.CampaignScalarWhereInput
    | Prisma.CampaignScalarWhereInput[];
};

export type CampaignUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutUserInput,
        Prisma.CampaignUncheckedCreateWithoutUserInput
      >
    | Prisma.CampaignCreateWithoutUserInput[]
    | Prisma.CampaignUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutUserInput
    | Prisma.CampaignCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.CampaignUpsertWithWhereUniqueWithoutUserInput
    | Prisma.CampaignUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.CampaignCreateManyUserInputEnvelope;
  set?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  disconnect?:
    | Prisma.CampaignWhereUniqueInput
    | Prisma.CampaignWhereUniqueInput[];
  delete?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  update?:
    | Prisma.CampaignUpdateWithWhereUniqueWithoutUserInput
    | Prisma.CampaignUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.CampaignUpdateManyWithWhereWithoutUserInput
    | Prisma.CampaignUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.CampaignScalarWhereInput
    | Prisma.CampaignScalarWhereInput[];
};

export type CampaignCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutProjectInput,
        Prisma.CampaignUncheckedCreateWithoutProjectInput
      >
    | Prisma.CampaignCreateWithoutProjectInput[]
    | Prisma.CampaignUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutProjectInput
    | Prisma.CampaignCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.CampaignCreateManyProjectInputEnvelope;
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
};

export type CampaignUncheckedCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutProjectInput,
        Prisma.CampaignUncheckedCreateWithoutProjectInput
      >
    | Prisma.CampaignCreateWithoutProjectInput[]
    | Prisma.CampaignUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutProjectInput
    | Prisma.CampaignCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.CampaignCreateManyProjectInputEnvelope;
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
};

export type CampaignUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutProjectInput,
        Prisma.CampaignUncheckedCreateWithoutProjectInput
      >
    | Prisma.CampaignCreateWithoutProjectInput[]
    | Prisma.CampaignUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutProjectInput
    | Prisma.CampaignCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.CampaignUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.CampaignUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.CampaignCreateManyProjectInputEnvelope;
  set?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  disconnect?:
    | Prisma.CampaignWhereUniqueInput
    | Prisma.CampaignWhereUniqueInput[];
  delete?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  update?:
    | Prisma.CampaignUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.CampaignUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.CampaignUpdateManyWithWhereWithoutProjectInput
    | Prisma.CampaignUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.CampaignScalarWhereInput
    | Prisma.CampaignScalarWhereInput[];
};

export type CampaignUncheckedUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CampaignCreateWithoutProjectInput,
        Prisma.CampaignUncheckedCreateWithoutProjectInput
      >
    | Prisma.CampaignCreateWithoutProjectInput[]
    | Prisma.CampaignUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.CampaignCreateOrConnectWithoutProjectInput
    | Prisma.CampaignCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.CampaignUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.CampaignUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.CampaignCreateManyProjectInputEnvelope;
  set?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  disconnect?:
    | Prisma.CampaignWhereUniqueInput
    | Prisma.CampaignWhereUniqueInput[];
  delete?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  connect?: Prisma.CampaignWhereUniqueInput | Prisma.CampaignWhereUniqueInput[];
  update?:
    | Prisma.CampaignUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.CampaignUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.CampaignUpdateManyWithWhereWithoutProjectInput
    | Prisma.CampaignUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.CampaignScalarWhereInput
    | Prisma.CampaignScalarWhereInput[];
};

export type CampaignCreateNestedOneWithoutSubscribersInput = {
  create?: Prisma.XOR<
    Prisma.CampaignCreateWithoutSubscribersInput,
    Prisma.CampaignUncheckedCreateWithoutSubscribersInput
  >;
  connectOrCreate?: Prisma.CampaignCreateOrConnectWithoutSubscribersInput;
  connect?: Prisma.CampaignWhereUniqueInput;
};

export type CampaignUpdateOneWithoutSubscribersNestedInput = {
  create?: Prisma.XOR<
    Prisma.CampaignCreateWithoutSubscribersInput,
    Prisma.CampaignUncheckedCreateWithoutSubscribersInput
  >;
  connectOrCreate?: Prisma.CampaignCreateOrConnectWithoutSubscribersInput;
  upsert?: Prisma.CampaignUpsertWithoutSubscribersInput;
  disconnect?: Prisma.CampaignWhereInput | boolean;
  delete?: Prisma.CampaignWhereInput | boolean;
  connect?: Prisma.CampaignWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CampaignUpdateToOneWithWhereWithoutSubscribersInput,
      Prisma.CampaignUpdateWithoutSubscribersInput
    >,
    Prisma.CampaignUncheckedUpdateWithoutSubscribersInput
  >;
};

export type CampaignCreateNestedOneWithoutAnalyticsEventsInput = {
  create?: Prisma.XOR<
    Prisma.CampaignCreateWithoutAnalyticsEventsInput,
    Prisma.CampaignUncheckedCreateWithoutAnalyticsEventsInput
  >;
  connectOrCreate?: Prisma.CampaignCreateOrConnectWithoutAnalyticsEventsInput;
  connect?: Prisma.CampaignWhereUniqueInput;
};

export type CampaignUpdateOneWithoutAnalyticsEventsNestedInput = {
  create?: Prisma.XOR<
    Prisma.CampaignCreateWithoutAnalyticsEventsInput,
    Prisma.CampaignUncheckedCreateWithoutAnalyticsEventsInput
  >;
  connectOrCreate?: Prisma.CampaignCreateOrConnectWithoutAnalyticsEventsInput;
  upsert?: Prisma.CampaignUpsertWithoutAnalyticsEventsInput;
  disconnect?: Prisma.CampaignWhereInput | boolean;
  delete?: Prisma.CampaignWhereInput | boolean;
  connect?: Prisma.CampaignWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CampaignUpdateToOneWithWhereWithoutAnalyticsEventsInput,
      Prisma.CampaignUpdateWithoutAnalyticsEventsInput
    >,
    Prisma.CampaignUncheckedUpdateWithoutAnalyticsEventsInput
  >;
};

export type CampaignCreateWithoutUserInput = {
  id?: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutCampaignsInput;
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutCampaignInput;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutCampaignInput;
};

export type CampaignUncheckedCreateWithoutUserInput = {
  id?: string;
  projectId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutCampaignInput;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutCampaignInput;
};

export type CampaignCreateOrConnectWithoutUserInput = {
  where: Prisma.CampaignWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutUserInput,
    Prisma.CampaignUncheckedCreateWithoutUserInput
  >;
};

export type CampaignCreateManyUserInputEnvelope = {
  data:
    | Prisma.CampaignCreateManyUserInput
    | Prisma.CampaignCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type CampaignUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.CampaignWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.CampaignUpdateWithoutUserInput,
    Prisma.CampaignUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutUserInput,
    Prisma.CampaignUncheckedCreateWithoutUserInput
  >;
};

export type CampaignUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.CampaignWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.CampaignUpdateWithoutUserInput,
    Prisma.CampaignUncheckedUpdateWithoutUserInput
  >;
};

export type CampaignUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.CampaignScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CampaignUpdateManyMutationInput,
    Prisma.CampaignUncheckedUpdateManyWithoutUserInput
  >;
};

export type CampaignScalarWhereInput = {
  AND?: Prisma.CampaignScalarWhereInput | Prisma.CampaignScalarWhereInput[];
  OR?: Prisma.CampaignScalarWhereInput[];
  NOT?: Prisma.CampaignScalarWhereInput | Prisma.CampaignScalarWhereInput[];
  id?: Prisma.StringFilter<"Campaign"> | string;
  projectId?: Prisma.StringFilter<"Campaign"> | string;
  userId?: Prisma.StringFilter<"Campaign"> | string;
  name?: Prisma.StringFilter<"Campaign"> | string;
  description?: Prisma.StringNullableFilter<"Campaign"> | string | null;
  type?: Prisma.StringFilter<"Campaign"> | string;
  status?: Prisma.StringFilter<"Campaign"> | string;
  settings?: Prisma.JsonFilter<"Campaign">;
  content?: Prisma.JsonFilter<"Campaign">;
  totalSubscribers?: Prisma.IntFilter<"Campaign"> | number;
  activeSubscribers?: Prisma.IntFilter<"Campaign"> | number;
  conversionRate?:
    | Prisma.DecimalFilter<"Campaign">
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.DateTimeNullableFilter<"Campaign">
    | Date
    | string
    | null;
  launchedAt?: Prisma.DateTimeNullableFilter<"Campaign"> | Date | string | null;
  completedAt?:
    | Prisma.DateTimeNullableFilter<"Campaign">
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFilter<"Campaign"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Campaign"> | Date | string;
};

export type CampaignCreateWithoutProjectInput = {
  id?: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutCampaignsInput;
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutCampaignInput;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutCampaignInput;
};

export type CampaignUncheckedCreateWithoutProjectInput = {
  id?: string;
  userId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutCampaignInput;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutCampaignInput;
};

export type CampaignCreateOrConnectWithoutProjectInput = {
  where: Prisma.CampaignWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutProjectInput,
    Prisma.CampaignUncheckedCreateWithoutProjectInput
  >;
};

export type CampaignCreateManyProjectInputEnvelope = {
  data:
    | Prisma.CampaignCreateManyProjectInput
    | Prisma.CampaignCreateManyProjectInput[];
  skipDuplicates?: boolean;
};

export type CampaignUpsertWithWhereUniqueWithoutProjectInput = {
  where: Prisma.CampaignWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.CampaignUpdateWithoutProjectInput,
    Prisma.CampaignUncheckedUpdateWithoutProjectInput
  >;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutProjectInput,
    Prisma.CampaignUncheckedCreateWithoutProjectInput
  >;
};

export type CampaignUpdateWithWhereUniqueWithoutProjectInput = {
  where: Prisma.CampaignWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.CampaignUpdateWithoutProjectInput,
    Prisma.CampaignUncheckedUpdateWithoutProjectInput
  >;
};

export type CampaignUpdateManyWithWhereWithoutProjectInput = {
  where: Prisma.CampaignScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CampaignUpdateManyMutationInput,
    Prisma.CampaignUncheckedUpdateManyWithoutProjectInput
  >;
};

export type CampaignCreateWithoutSubscribersInput = {
  id?: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutCampaignsInput;
  user: Prisma.UserCreateNestedOneWithoutCampaignsInput;
  analyticsEvents?: Prisma.AnalyticsEventCreateNestedManyWithoutCampaignInput;
};

export type CampaignUncheckedCreateWithoutSubscribersInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedCreateNestedManyWithoutCampaignInput;
};

export type CampaignCreateOrConnectWithoutSubscribersInput = {
  where: Prisma.CampaignWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutSubscribersInput,
    Prisma.CampaignUncheckedCreateWithoutSubscribersInput
  >;
};

export type CampaignUpsertWithoutSubscribersInput = {
  update: Prisma.XOR<
    Prisma.CampaignUpdateWithoutSubscribersInput,
    Prisma.CampaignUncheckedUpdateWithoutSubscribersInput
  >;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutSubscribersInput,
    Prisma.CampaignUncheckedCreateWithoutSubscribersInput
  >;
  where?: Prisma.CampaignWhereInput;
};

export type CampaignUpdateToOneWithWhereWithoutSubscribersInput = {
  where?: Prisma.CampaignWhereInput;
  data: Prisma.XOR<
    Prisma.CampaignUpdateWithoutSubscribersInput,
    Prisma.CampaignUncheckedUpdateWithoutSubscribersInput
  >;
};

export type CampaignUpdateWithoutSubscribersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutCampaignsNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutCampaignsNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateWithoutSubscribersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutCampaignNestedInput;
};

export type CampaignCreateWithoutAnalyticsEventsInput = {
  id?: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutCampaignsInput;
  user: Prisma.UserCreateNestedOneWithoutCampaignsInput;
  subscribers?: Prisma.SubscriberCreateNestedManyWithoutCampaignInput;
};

export type CampaignUncheckedCreateWithoutAnalyticsEventsInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  subscribers?: Prisma.SubscriberUncheckedCreateNestedManyWithoutCampaignInput;
};

export type CampaignCreateOrConnectWithoutAnalyticsEventsInput = {
  where: Prisma.CampaignWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutAnalyticsEventsInput,
    Prisma.CampaignUncheckedCreateWithoutAnalyticsEventsInput
  >;
};

export type CampaignUpsertWithoutAnalyticsEventsInput = {
  update: Prisma.XOR<
    Prisma.CampaignUpdateWithoutAnalyticsEventsInput,
    Prisma.CampaignUncheckedUpdateWithoutAnalyticsEventsInput
  >;
  create: Prisma.XOR<
    Prisma.CampaignCreateWithoutAnalyticsEventsInput,
    Prisma.CampaignUncheckedCreateWithoutAnalyticsEventsInput
  >;
  where?: Prisma.CampaignWhereInput;
};

export type CampaignUpdateToOneWithWhereWithoutAnalyticsEventsInput = {
  where?: Prisma.CampaignWhereInput;
  data: Prisma.XOR<
    Prisma.CampaignUpdateWithoutAnalyticsEventsInput,
    Prisma.CampaignUncheckedUpdateWithoutAnalyticsEventsInput
  >;
};

export type CampaignUpdateWithoutAnalyticsEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutCampaignsNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutCampaignsNestedInput;
  subscribers?: Prisma.SubscriberUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateWithoutAnalyticsEventsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutCampaignNestedInput;
};

export type CampaignCreateManyUserInput = {
  id?: string;
  projectId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CampaignUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutCampaignsNestedInput;
  subscribers?: Prisma.SubscriberUpdateManyWithoutCampaignNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutCampaignNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CampaignCreateManyProjectInput = {
  id?: string;
  userId: string;
  name: string;
  description?: string | null;
  type?: string;
  status?: string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: number;
  activeSubscribers?: number;
  conversionRate?: runtime.Decimal | runtime.DecimalJsLike | number | string;
  scheduledAt?: Date | string | null;
  launchedAt?: Date | string | null;
  completedAt?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CampaignUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutCampaignsNestedInput;
  subscribers?: Prisma.SubscriberUpdateManyWithoutCampaignNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  subscribers?: Prisma.SubscriberUncheckedUpdateManyWithoutCampaignNestedInput;
  analyticsEvents?: Prisma.AnalyticsEventUncheckedUpdateManyWithoutCampaignNestedInput;
};

export type CampaignUncheckedUpdateManyWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  settings?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  content?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  totalSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  activeSubscribers?: Prisma.IntFieldUpdateOperationsInput | number;
  conversionRate?:
    | Prisma.DecimalFieldUpdateOperationsInput
    | runtime.Decimal
    | runtime.DecimalJsLike
    | number
    | string;
  scheduledAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  launchedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  completedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type CampaignCountOutputType
 */

export type CampaignCountOutputType = {
  subscribers: number;
  analyticsEvents: number;
};

export type CampaignCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  subscribers?: boolean | CampaignCountOutputTypeCountSubscribersArgs;
  analyticsEvents?: boolean | CampaignCountOutputTypeCountAnalyticsEventsArgs;
};

/**
 * CampaignCountOutputType without action
 */
export type CampaignCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CampaignCountOutputType
   */
  select?: Prisma.CampaignCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * CampaignCountOutputType without action
 */
export type CampaignCountOutputTypeCountSubscribersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SubscriberWhereInput;
};

/**
 * CampaignCountOutputType without action
 */
export type CampaignCountOutputTypeCountAnalyticsEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AnalyticsEventWhereInput;
};

export type CampaignSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    description?: boolean;
    type?: boolean;
    status?: boolean;
    settings?: boolean;
    content?: boolean;
    totalSubscribers?: boolean;
    activeSubscribers?: boolean;
    conversionRate?: boolean;
    scheduledAt?: boolean;
    launchedAt?: boolean;
    completedAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    subscribers?: boolean | Prisma.Campaign$subscribersArgs<ExtArgs>;
    analyticsEvents?: boolean | Prisma.Campaign$analyticsEventsArgs<ExtArgs>;
    _count?: boolean | Prisma.CampaignCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["campaign"]
>;

export type CampaignSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    description?: boolean;
    type?: boolean;
    status?: boolean;
    settings?: boolean;
    content?: boolean;
    totalSubscribers?: boolean;
    activeSubscribers?: boolean;
    conversionRate?: boolean;
    scheduledAt?: boolean;
    launchedAt?: boolean;
    completedAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["campaign"]
>;

export type CampaignSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    description?: boolean;
    type?: boolean;
    status?: boolean;
    settings?: boolean;
    content?: boolean;
    totalSubscribers?: boolean;
    activeSubscribers?: boolean;
    conversionRate?: boolean;
    scheduledAt?: boolean;
    launchedAt?: boolean;
    completedAt?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["campaign"]
>;

export type CampaignSelectScalar = {
  id?: boolean;
  projectId?: boolean;
  userId?: boolean;
  name?: boolean;
  description?: boolean;
  type?: boolean;
  status?: boolean;
  settings?: boolean;
  content?: boolean;
  totalSubscribers?: boolean;
  activeSubscribers?: boolean;
  conversionRate?: boolean;
  scheduledAt?: boolean;
  launchedAt?: boolean;
  completedAt?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type CampaignOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "projectId"
  | "userId"
  | "name"
  | "description"
  | "type"
  | "status"
  | "settings"
  | "content"
  | "totalSubscribers"
  | "activeSubscribers"
  | "conversionRate"
  | "scheduledAt"
  | "launchedAt"
  | "completedAt"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["campaign"]
>;
export type CampaignInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  subscribers?: boolean | Prisma.Campaign$subscribersArgs<ExtArgs>;
  analyticsEvents?: boolean | Prisma.Campaign$analyticsEventsArgs<ExtArgs>;
  _count?: boolean | Prisma.CampaignCountOutputTypeDefaultArgs<ExtArgs>;
};
export type CampaignIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type CampaignIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $CampaignPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "Campaign";
  objects: {
    project: Prisma.$ProjectPayload<ExtArgs>;
    user: Prisma.$UserPayload<ExtArgs>;
    subscribers: Prisma.$SubscriberPayload<ExtArgs>[];
    analyticsEvents: Prisma.$AnalyticsEventPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      projectId: string;
      userId: string;
      name: string;
      description: string | null;
      type: string;
      status: string;
      settings: runtime.JsonValue;
      content: runtime.JsonValue;
      totalSubscribers: number;
      activeSubscribers: number;
      conversionRate: runtime.Decimal;
      scheduledAt: Date | null;
      launchedAt: Date | null;
      completedAt: Date | null;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["campaign"]
  >;
  composites: {};
};

export type CampaignGetPayload<
  S extends boolean | null | undefined | CampaignDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$CampaignPayload, S>;

export type CampaignCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<CampaignFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: CampaignCountAggregateInputType | true;
};

export interface CampaignDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["Campaign"];
    meta: { name: "Campaign" };
  };
  /**
   * Find zero or one Campaign that matches the filter.
   * @param {CampaignFindUniqueArgs} args - Arguments to find a Campaign
   * @example
   * // Get one Campaign
   * const campaign = await prisma.campaign.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CampaignFindUniqueArgs>(
    args: Prisma.SelectSubset<T, CampaignFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Campaign that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CampaignFindUniqueOrThrowArgs} args - Arguments to find a Campaign
   * @example
   * // Get one Campaign
   * const campaign = await prisma.campaign.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends CampaignFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, CampaignFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Campaign that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignFindFirstArgs} args - Arguments to find a Campaign
   * @example
   * // Get one Campaign
   * const campaign = await prisma.campaign.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CampaignFindFirstArgs>(
    args?: Prisma.SelectSubset<T, CampaignFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Campaign that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignFindFirstOrThrowArgs} args - Arguments to find a Campaign
   * @example
   * // Get one Campaign
   * const campaign = await prisma.campaign.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends CampaignFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, CampaignFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Campaigns that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Campaigns
   * const campaigns = await prisma.campaign.findMany()
   *
   * // Get first 10 Campaigns
   * const campaigns = await prisma.campaign.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const campaignWithIdOnly = await prisma.campaign.findMany({ select: { id: true } })
   *
   */
  findMany<T extends CampaignFindManyArgs>(
    args?: Prisma.SelectSubset<T, CampaignFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a Campaign.
   * @param {CampaignCreateArgs} args - Arguments to create a Campaign.
   * @example
   * // Create one Campaign
   * const Campaign = await prisma.campaign.create({
   *   data: {
   *     // ... data to create a Campaign
   *   }
   * })
   *
   */
  create<T extends CampaignCreateArgs>(
    args: Prisma.SelectSubset<T, CampaignCreateArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Campaigns.
   * @param {CampaignCreateManyArgs} args - Arguments to create many Campaigns.
   * @example
   * // Create many Campaigns
   * const campaign = await prisma.campaign.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends CampaignCreateManyArgs>(
    args?: Prisma.SelectSubset<T, CampaignCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Campaigns and returns the data saved in the database.
   * @param {CampaignCreateManyAndReturnArgs} args - Arguments to create many Campaigns.
   * @example
   * // Create many Campaigns
   * const campaign = await prisma.campaign.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Campaigns and only return the `id`
   * const campaignWithIdOnly = await prisma.campaign.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends CampaignCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, CampaignCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Campaign.
   * @param {CampaignDeleteArgs} args - Arguments to delete one Campaign.
   * @example
   * // Delete one Campaign
   * const Campaign = await prisma.campaign.delete({
   *   where: {
   *     // ... filter to delete one Campaign
   *   }
   * })
   *
   */
  delete<T extends CampaignDeleteArgs>(
    args: Prisma.SelectSubset<T, CampaignDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Campaign.
   * @param {CampaignUpdateArgs} args - Arguments to update one Campaign.
   * @example
   * // Update one Campaign
   * const campaign = await prisma.campaign.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends CampaignUpdateArgs>(
    args: Prisma.SelectSubset<T, CampaignUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Campaigns.
   * @param {CampaignDeleteManyArgs} args - Arguments to filter Campaigns to delete.
   * @example
   * // Delete a few Campaigns
   * const { count } = await prisma.campaign.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends CampaignDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, CampaignDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Campaigns.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Campaigns
   * const campaign = await prisma.campaign.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends CampaignUpdateManyArgs>(
    args: Prisma.SelectSubset<T, CampaignUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Campaigns and returns the data updated in the database.
   * @param {CampaignUpdateManyAndReturnArgs} args - Arguments to update many Campaigns.
   * @example
   * // Update many Campaigns
   * const campaign = await prisma.campaign.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Campaigns and only return the `id`
   * const campaignWithIdOnly = await prisma.campaign.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends CampaignUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, CampaignUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Campaign.
   * @param {CampaignUpsertArgs} args - Arguments to update or create a Campaign.
   * @example
   * // Update or create a Campaign
   * const campaign = await prisma.campaign.upsert({
   *   create: {
   *     // ... data to create a Campaign
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Campaign we want to update
   *   }
   * })
   */
  upsert<T extends CampaignUpsertArgs>(
    args: Prisma.SelectSubset<T, CampaignUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__CampaignClient<
    runtime.Types.Result.GetResult<
      Prisma.$CampaignPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Campaigns.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignCountArgs} args - Arguments to filter Campaigns to count.
   * @example
   * // Count the number of Campaigns
   * const count = await prisma.campaign.count({
   *   where: {
   *     // ... the filter for the Campaigns we want to count
   *   }
   * })
   **/
  count<T extends CampaignCountArgs>(
    args?: Prisma.Subset<T, CampaignCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], CampaignCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Campaign.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends CampaignAggregateArgs>(
    args: Prisma.Subset<T, CampaignAggregateArgs>
  ): Prisma.PrismaPromise<GetCampaignAggregateType<T>>;

  /**
   * Group by Campaign.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CampaignGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends CampaignGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CampaignGroupByArgs["orderBy"] }
      : { orderBy?: CampaignGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, CampaignGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetCampaignGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Campaign model
   */
  readonly fields: CampaignFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Campaign.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CampaignClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__ProjectClient<
    | runtime.Types.Result.GetResult<
        Prisma.$ProjectPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  subscribers<T extends Prisma.Campaign$subscribersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Campaign$subscribersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SubscriberPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  analyticsEvents<T extends Prisma.Campaign$analyticsEventsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Campaign$analyticsEventsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AnalyticsEventPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Campaign model
 */
export interface CampaignFieldRefs {
  readonly id: Prisma.FieldRef<"Campaign", "String">;
  readonly projectId: Prisma.FieldRef<"Campaign", "String">;
  readonly userId: Prisma.FieldRef<"Campaign", "String">;
  readonly name: Prisma.FieldRef<"Campaign", "String">;
  readonly description: Prisma.FieldRef<"Campaign", "String">;
  readonly type: Prisma.FieldRef<"Campaign", "String">;
  readonly status: Prisma.FieldRef<"Campaign", "String">;
  readonly settings: Prisma.FieldRef<"Campaign", "Json">;
  readonly content: Prisma.FieldRef<"Campaign", "Json">;
  readonly totalSubscribers: Prisma.FieldRef<"Campaign", "Int">;
  readonly activeSubscribers: Prisma.FieldRef<"Campaign", "Int">;
  readonly conversionRate: Prisma.FieldRef<"Campaign", "Decimal">;
  readonly scheduledAt: Prisma.FieldRef<"Campaign", "DateTime">;
  readonly launchedAt: Prisma.FieldRef<"Campaign", "DateTime">;
  readonly completedAt: Prisma.FieldRef<"Campaign", "DateTime">;
  readonly createdAt: Prisma.FieldRef<"Campaign", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"Campaign", "DateTime">;
}

// Custom InputTypes
/**
 * Campaign findUnique
 */
export type CampaignFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * Filter, which Campaign to fetch.
   */
  where: Prisma.CampaignWhereUniqueInput;
};

/**
 * Campaign findUniqueOrThrow
 */
export type CampaignFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * Filter, which Campaign to fetch.
   */
  where: Prisma.CampaignWhereUniqueInput;
};

/**
 * Campaign findFirst
 */
export type CampaignFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * Filter, which Campaign to fetch.
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Campaigns to fetch.
   */
  orderBy?:
    | Prisma.CampaignOrderByWithRelationInput
    | Prisma.CampaignOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Campaigns.
   */
  cursor?: Prisma.CampaignWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Campaigns from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Campaigns.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Campaigns.
   */
  distinct?: Prisma.CampaignScalarFieldEnum | Prisma.CampaignScalarFieldEnum[];
};

/**
 * Campaign findFirstOrThrow
 */
export type CampaignFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * Filter, which Campaign to fetch.
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Campaigns to fetch.
   */
  orderBy?:
    | Prisma.CampaignOrderByWithRelationInput
    | Prisma.CampaignOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Campaigns.
   */
  cursor?: Prisma.CampaignWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Campaigns from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Campaigns.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Campaigns.
   */
  distinct?: Prisma.CampaignScalarFieldEnum | Prisma.CampaignScalarFieldEnum[];
};

/**
 * Campaign findMany
 */
export type CampaignFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * Filter, which Campaigns to fetch.
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Campaigns to fetch.
   */
  orderBy?:
    | Prisma.CampaignOrderByWithRelationInput
    | Prisma.CampaignOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Campaigns.
   */
  cursor?: Prisma.CampaignWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Campaigns from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Campaigns.
   */
  skip?: number;
  distinct?: Prisma.CampaignScalarFieldEnum | Prisma.CampaignScalarFieldEnum[];
};

/**
 * Campaign create
 */
export type CampaignCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * The data needed to create a Campaign.
   */
  data: Prisma.XOR<
    Prisma.CampaignCreateInput,
    Prisma.CampaignUncheckedCreateInput
  >;
};

/**
 * Campaign createMany
 */
export type CampaignCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Campaigns.
   */
  data: Prisma.CampaignCreateManyInput | Prisma.CampaignCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Campaign createManyAndReturn
 */
export type CampaignCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * The data used to create many Campaigns.
   */
  data: Prisma.CampaignCreateManyInput | Prisma.CampaignCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Campaign update
 */
export type CampaignUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * The data needed to update a Campaign.
   */
  data: Prisma.XOR<
    Prisma.CampaignUpdateInput,
    Prisma.CampaignUncheckedUpdateInput
  >;
  /**
   * Choose, which Campaign to update.
   */
  where: Prisma.CampaignWhereUniqueInput;
};

/**
 * Campaign updateMany
 */
export type CampaignUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Campaigns.
   */
  data: Prisma.XOR<
    Prisma.CampaignUpdateManyMutationInput,
    Prisma.CampaignUncheckedUpdateManyInput
  >;
  /**
   * Filter which Campaigns to update
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * Limit how many Campaigns to update.
   */
  limit?: number;
};

/**
 * Campaign updateManyAndReturn
 */
export type CampaignUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * The data used to update Campaigns.
   */
  data: Prisma.XOR<
    Prisma.CampaignUpdateManyMutationInput,
    Prisma.CampaignUncheckedUpdateManyInput
  >;
  /**
   * Filter which Campaigns to update
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * Limit how many Campaigns to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Campaign upsert
 */
export type CampaignUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * The filter to search for the Campaign to update in case it exists.
   */
  where: Prisma.CampaignWhereUniqueInput;
  /**
   * In case the Campaign found by the `where` argument doesn't exist, create a new Campaign with this data.
   */
  create: Prisma.XOR<
    Prisma.CampaignCreateInput,
    Prisma.CampaignUncheckedCreateInput
  >;
  /**
   * In case the Campaign was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.CampaignUpdateInput,
    Prisma.CampaignUncheckedUpdateInput
  >;
};

/**
 * Campaign delete
 */
export type CampaignDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
  /**
   * Filter which Campaign to delete.
   */
  where: Prisma.CampaignWhereUniqueInput;
};

/**
 * Campaign deleteMany
 */
export type CampaignDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Campaigns to delete
   */
  where?: Prisma.CampaignWhereInput;
  /**
   * Limit how many Campaigns to delete.
   */
  limit?: number;
};

/**
 * Campaign.subscribers
 */
export type Campaign$subscribersArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Subscriber
   */
  select?: Prisma.SubscriberSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Subscriber
   */
  omit?: Prisma.SubscriberOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SubscriberInclude<ExtArgs> | null;
  where?: Prisma.SubscriberWhereInput;
  orderBy?:
    | Prisma.SubscriberOrderByWithRelationInput
    | Prisma.SubscriberOrderByWithRelationInput[];
  cursor?: Prisma.SubscriberWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.SubscriberScalarFieldEnum
    | Prisma.SubscriberScalarFieldEnum[];
};

/**
 * Campaign.analyticsEvents
 */
export type Campaign$analyticsEventsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the AnalyticsEvent
   */
  select?: Prisma.AnalyticsEventSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AnalyticsEvent
   */
  omit?: Prisma.AnalyticsEventOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnalyticsEventInclude<ExtArgs> | null;
  where?: Prisma.AnalyticsEventWhereInput;
  orderBy?:
    | Prisma.AnalyticsEventOrderByWithRelationInput
    | Prisma.AnalyticsEventOrderByWithRelationInput[];
  cursor?: Prisma.AnalyticsEventWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.AnalyticsEventScalarFieldEnum
    | Prisma.AnalyticsEventScalarFieldEnum[];
};

/**
 * Campaign without action
 */
export type CampaignDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Campaign
   */
  select?: Prisma.CampaignSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Campaign
   */
  omit?: Prisma.CampaignOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CampaignInclude<ExtArgs> | null;
};
