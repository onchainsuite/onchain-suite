/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `EmailTemplate` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model EmailTemplate
 *
 */
export type EmailTemplateModel =
  runtime.Types.Result.DefaultSelection<Prisma.$EmailTemplatePayload>;

export type AggregateEmailTemplate = {
  _count: EmailTemplateCountAggregateOutputType | null;
  _min: EmailTemplateMinAggregateOutputType | null;
  _max: EmailTemplateMaxAggregateOutputType | null;
};

export type EmailTemplateMinAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  name: string | null;
  subject: string | null;
  content: string | null;
  templateType: string | null;
  isSystemTemplate: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type EmailTemplateMaxAggregateOutputType = {
  id: string | null;
  projectId: string | null;
  userId: string | null;
  name: string | null;
  subject: string | null;
  content: string | null;
  templateType: string | null;
  isSystemTemplate: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type EmailTemplateCountAggregateOutputType = {
  id: number;
  projectId: number;
  userId: number;
  name: number;
  subject: number;
  content: number;
  templateType: number;
  variables: number;
  isSystemTemplate: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type EmailTemplateMinAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  subject?: true;
  content?: true;
  templateType?: true;
  isSystemTemplate?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type EmailTemplateMaxAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  subject?: true;
  content?: true;
  templateType?: true;
  isSystemTemplate?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type EmailTemplateCountAggregateInputType = {
  id?: true;
  projectId?: true;
  userId?: true;
  name?: true;
  subject?: true;
  content?: true;
  templateType?: true;
  variables?: true;
  isSystemTemplate?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type EmailTemplateAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which EmailTemplate to aggregate.
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EmailTemplates to fetch.
   */
  orderBy?:
    | Prisma.EmailTemplateOrderByWithRelationInput
    | Prisma.EmailTemplateOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.EmailTemplateWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EmailTemplates from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EmailTemplates.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned EmailTemplates
   **/
  _count?: true | EmailTemplateCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: EmailTemplateMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: EmailTemplateMaxAggregateInputType;
};

export type GetEmailTemplateAggregateType<
  T extends EmailTemplateAggregateArgs,
> = {
  [P in keyof T & keyof AggregateEmailTemplate]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEmailTemplate[P]>
    : Prisma.GetScalarType<T[P], AggregateEmailTemplate[P]>;
};

export type EmailTemplateGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.EmailTemplateWhereInput;
  orderBy?:
    | Prisma.EmailTemplateOrderByWithAggregationInput
    | Prisma.EmailTemplateOrderByWithAggregationInput[];
  by:
    | Prisma.EmailTemplateScalarFieldEnum[]
    | Prisma.EmailTemplateScalarFieldEnum;
  having?: Prisma.EmailTemplateScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: EmailTemplateCountAggregateInputType | true;
  _min?: EmailTemplateMinAggregateInputType;
  _max?: EmailTemplateMaxAggregateInputType;
};

export type EmailTemplateGroupByOutputType = {
  id: string;
  projectId: string;
  userId: string;
  name: string;
  subject: string;
  content: string;
  templateType: string;
  variables: runtime.JsonValue;
  isSystemTemplate: boolean;
  createdAt: Date;
  updatedAt: Date;
  _count: EmailTemplateCountAggregateOutputType | null;
  _min: EmailTemplateMinAggregateOutputType | null;
  _max: EmailTemplateMaxAggregateOutputType | null;
};

type GetEmailTemplateGroupByPayload<T extends EmailTemplateGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<EmailTemplateGroupByOutputType, T["by"]> & {
        [P in keyof T &
          keyof EmailTemplateGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EmailTemplateGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EmailTemplateGroupByOutputType[P]>;
      }
    >
  >;

export type EmailTemplateWhereInput = {
  AND?: Prisma.EmailTemplateWhereInput | Prisma.EmailTemplateWhereInput[];
  OR?: Prisma.EmailTemplateWhereInput[];
  NOT?: Prisma.EmailTemplateWhereInput | Prisma.EmailTemplateWhereInput[];
  id?: Prisma.StringFilter<"EmailTemplate"> | string;
  projectId?: Prisma.StringFilter<"EmailTemplate"> | string;
  userId?: Prisma.StringFilter<"EmailTemplate"> | string;
  name?: Prisma.StringFilter<"EmailTemplate"> | string;
  subject?: Prisma.StringFilter<"EmailTemplate"> | string;
  content?: Prisma.StringFilter<"EmailTemplate"> | string;
  templateType?: Prisma.StringFilter<"EmailTemplate"> | string;
  variables?: Prisma.JsonFilter<"EmailTemplate">;
  isSystemTemplate?: Prisma.BoolFilter<"EmailTemplate"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"EmailTemplate"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"EmailTemplate"> | Date | string;
  project?: Prisma.XOR<
    Prisma.ProjectScalarRelationFilter,
    Prisma.ProjectWhereInput
  >;
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
};

export type EmailTemplateOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  subject?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  variables?: Prisma.SortOrder;
  isSystemTemplate?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  project?: Prisma.ProjectOrderByWithRelationInput;
  user?: Prisma.UserOrderByWithRelationInput;
};

export type EmailTemplateWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.EmailTemplateWhereInput | Prisma.EmailTemplateWhereInput[];
    OR?: Prisma.EmailTemplateWhereInput[];
    NOT?: Prisma.EmailTemplateWhereInput | Prisma.EmailTemplateWhereInput[];
    projectId?: Prisma.StringFilter<"EmailTemplate"> | string;
    userId?: Prisma.StringFilter<"EmailTemplate"> | string;
    name?: Prisma.StringFilter<"EmailTemplate"> | string;
    subject?: Prisma.StringFilter<"EmailTemplate"> | string;
    content?: Prisma.StringFilter<"EmailTemplate"> | string;
    templateType?: Prisma.StringFilter<"EmailTemplate"> | string;
    variables?: Prisma.JsonFilter<"EmailTemplate">;
    isSystemTemplate?: Prisma.BoolFilter<"EmailTemplate"> | boolean;
    createdAt?: Prisma.DateTimeFilter<"EmailTemplate"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"EmailTemplate"> | Date | string;
    project?: Prisma.XOR<
      Prisma.ProjectScalarRelationFilter,
      Prisma.ProjectWhereInput
    >;
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  },
  "id"
>;

export type EmailTemplateOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  subject?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  variables?: Prisma.SortOrder;
  isSystemTemplate?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.EmailTemplateCountOrderByAggregateInput;
  _max?: Prisma.EmailTemplateMaxOrderByAggregateInput;
  _min?: Prisma.EmailTemplateMinOrderByAggregateInput;
};

export type EmailTemplateScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.EmailTemplateScalarWhereWithAggregatesInput
    | Prisma.EmailTemplateScalarWhereWithAggregatesInput[];
  OR?: Prisma.EmailTemplateScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.EmailTemplateScalarWhereWithAggregatesInput
    | Prisma.EmailTemplateScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  projectId?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  userId?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  name?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  subject?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  content?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  templateType?: Prisma.StringWithAggregatesFilter<"EmailTemplate"> | string;
  variables?: Prisma.JsonWithAggregatesFilter<"EmailTemplate">;
  isSystemTemplate?: Prisma.BoolWithAggregatesFilter<"EmailTemplate"> | boolean;
  createdAt?:
    | Prisma.DateTimeWithAggregatesFilter<"EmailTemplate">
    | Date
    | string;
  updatedAt?:
    | Prisma.DateTimeWithAggregatesFilter<"EmailTemplate">
    | Date
    | string;
};

export type EmailTemplateCreateInput = {
  id?: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutEmailTemplatesInput;
  user: Prisma.UserCreateNestedOneWithoutEmailTemplatesInput;
};

export type EmailTemplateUncheckedCreateInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EmailTemplateUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutEmailTemplatesNestedInput;
  user?: Prisma.UserUpdateOneRequiredWithoutEmailTemplatesNestedInput;
};

export type EmailTemplateUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateCreateManyInput = {
  id?: string;
  projectId: string;
  userId: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EmailTemplateUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateListRelationFilter = {
  every?: Prisma.EmailTemplateWhereInput;
  some?: Prisma.EmailTemplateWhereInput;
  none?: Prisma.EmailTemplateWhereInput;
};

export type EmailTemplateOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type EmailTemplateCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  subject?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  variables?: Prisma.SortOrder;
  isSystemTemplate?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type EmailTemplateMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  subject?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  isSystemTemplate?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type EmailTemplateMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  projectId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  subject?: Prisma.SortOrder;
  content?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  isSystemTemplate?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type EmailTemplateCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutUserInput,
        Prisma.EmailTemplateUncheckedCreateWithoutUserInput
      >
    | Prisma.EmailTemplateCreateWithoutUserInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.EmailTemplateCreateManyUserInputEnvelope;
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
};

export type EmailTemplateUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutUserInput,
        Prisma.EmailTemplateUncheckedCreateWithoutUserInput
      >
    | Prisma.EmailTemplateCreateWithoutUserInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.EmailTemplateCreateManyUserInputEnvelope;
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
};

export type EmailTemplateUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutUserInput,
        Prisma.EmailTemplateUncheckedCreateWithoutUserInput
      >
    | Prisma.EmailTemplateCreateWithoutUserInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutUserInput
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.EmailTemplateCreateManyUserInputEnvelope;
  set?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  disconnect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  delete?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  update?:
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutUserInput
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutUserInput
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.EmailTemplateScalarWhereInput
    | Prisma.EmailTemplateScalarWhereInput[];
};

export type EmailTemplateUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutUserInput,
        Prisma.EmailTemplateUncheckedCreateWithoutUserInput
      >
    | Prisma.EmailTemplateCreateWithoutUserInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput
    | Prisma.EmailTemplateCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutUserInput
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.EmailTemplateCreateManyUserInputEnvelope;
  set?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  disconnect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  delete?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  update?:
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutUserInput
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutUserInput
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutUserInput[];
  deleteMany?:
    | Prisma.EmailTemplateScalarWhereInput
    | Prisma.EmailTemplateScalarWhereInput[];
};

export type EmailTemplateCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutProjectInput,
        Prisma.EmailTemplateUncheckedCreateWithoutProjectInput
      >
    | Prisma.EmailTemplateCreateWithoutProjectInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.EmailTemplateCreateManyProjectInputEnvelope;
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
};

export type EmailTemplateUncheckedCreateNestedManyWithoutProjectInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutProjectInput,
        Prisma.EmailTemplateUncheckedCreateWithoutProjectInput
      >
    | Prisma.EmailTemplateCreateWithoutProjectInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput[];
  createMany?: Prisma.EmailTemplateCreateManyProjectInputEnvelope;
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
};

export type EmailTemplateUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutProjectInput,
        Prisma.EmailTemplateUncheckedCreateWithoutProjectInput
      >
    | Prisma.EmailTemplateCreateWithoutProjectInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.EmailTemplateCreateManyProjectInputEnvelope;
  set?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  disconnect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  delete?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  update?:
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutProjectInput
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.EmailTemplateScalarWhereInput
    | Prisma.EmailTemplateScalarWhereInput[];
};

export type EmailTemplateUncheckedUpdateManyWithoutProjectNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EmailTemplateCreateWithoutProjectInput,
        Prisma.EmailTemplateUncheckedCreateWithoutProjectInput
      >
    | Prisma.EmailTemplateCreateWithoutProjectInput[]
    | Prisma.EmailTemplateUncheckedCreateWithoutProjectInput[];
  connectOrCreate?:
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput
    | Prisma.EmailTemplateCreateOrConnectWithoutProjectInput[];
  upsert?:
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutProjectInput
    | Prisma.EmailTemplateUpsertWithWhereUniqueWithoutProjectInput[];
  createMany?: Prisma.EmailTemplateCreateManyProjectInputEnvelope;
  set?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  disconnect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  delete?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  connect?:
    | Prisma.EmailTemplateWhereUniqueInput
    | Prisma.EmailTemplateWhereUniqueInput[];
  update?:
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutProjectInput
    | Prisma.EmailTemplateUpdateWithWhereUniqueWithoutProjectInput[];
  updateMany?:
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutProjectInput
    | Prisma.EmailTemplateUpdateManyWithWhereWithoutProjectInput[];
  deleteMany?:
    | Prisma.EmailTemplateScalarWhereInput
    | Prisma.EmailTemplateScalarWhereInput[];
};

export type EmailTemplateCreateWithoutUserInput = {
  id?: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  project: Prisma.ProjectCreateNestedOneWithoutEmailTemplatesInput;
};

export type EmailTemplateUncheckedCreateWithoutUserInput = {
  id?: string;
  projectId: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EmailTemplateCreateOrConnectWithoutUserInput = {
  where: Prisma.EmailTemplateWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EmailTemplateCreateWithoutUserInput,
    Prisma.EmailTemplateUncheckedCreateWithoutUserInput
  >;
};

export type EmailTemplateCreateManyUserInputEnvelope = {
  data:
    | Prisma.EmailTemplateCreateManyUserInput
    | Prisma.EmailTemplateCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type EmailTemplateUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.EmailTemplateWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EmailTemplateUpdateWithoutUserInput,
    Prisma.EmailTemplateUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.EmailTemplateCreateWithoutUserInput,
    Prisma.EmailTemplateUncheckedCreateWithoutUserInput
  >;
};

export type EmailTemplateUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.EmailTemplateWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateWithoutUserInput,
    Prisma.EmailTemplateUncheckedUpdateWithoutUserInput
  >;
};

export type EmailTemplateUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.EmailTemplateScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateManyMutationInput,
    Prisma.EmailTemplateUncheckedUpdateManyWithoutUserInput
  >;
};

export type EmailTemplateScalarWhereInput = {
  AND?:
    | Prisma.EmailTemplateScalarWhereInput
    | Prisma.EmailTemplateScalarWhereInput[];
  OR?: Prisma.EmailTemplateScalarWhereInput[];
  NOT?:
    | Prisma.EmailTemplateScalarWhereInput
    | Prisma.EmailTemplateScalarWhereInput[];
  id?: Prisma.StringFilter<"EmailTemplate"> | string;
  projectId?: Prisma.StringFilter<"EmailTemplate"> | string;
  userId?: Prisma.StringFilter<"EmailTemplate"> | string;
  name?: Prisma.StringFilter<"EmailTemplate"> | string;
  subject?: Prisma.StringFilter<"EmailTemplate"> | string;
  content?: Prisma.StringFilter<"EmailTemplate"> | string;
  templateType?: Prisma.StringFilter<"EmailTemplate"> | string;
  variables?: Prisma.JsonFilter<"EmailTemplate">;
  isSystemTemplate?: Prisma.BoolFilter<"EmailTemplate"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"EmailTemplate"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"EmailTemplate"> | Date | string;
};

export type EmailTemplateCreateWithoutProjectInput = {
  id?: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutEmailTemplatesInput;
};

export type EmailTemplateUncheckedCreateWithoutProjectInput = {
  id?: string;
  userId: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EmailTemplateCreateOrConnectWithoutProjectInput = {
  where: Prisma.EmailTemplateWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EmailTemplateCreateWithoutProjectInput,
    Prisma.EmailTemplateUncheckedCreateWithoutProjectInput
  >;
};

export type EmailTemplateCreateManyProjectInputEnvelope = {
  data:
    | Prisma.EmailTemplateCreateManyProjectInput
    | Prisma.EmailTemplateCreateManyProjectInput[];
  skipDuplicates?: boolean;
};

export type EmailTemplateUpsertWithWhereUniqueWithoutProjectInput = {
  where: Prisma.EmailTemplateWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EmailTemplateUpdateWithoutProjectInput,
    Prisma.EmailTemplateUncheckedUpdateWithoutProjectInput
  >;
  create: Prisma.XOR<
    Prisma.EmailTemplateCreateWithoutProjectInput,
    Prisma.EmailTemplateUncheckedCreateWithoutProjectInput
  >;
};

export type EmailTemplateUpdateWithWhereUniqueWithoutProjectInput = {
  where: Prisma.EmailTemplateWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateWithoutProjectInput,
    Prisma.EmailTemplateUncheckedUpdateWithoutProjectInput
  >;
};

export type EmailTemplateUpdateManyWithWhereWithoutProjectInput = {
  where: Prisma.EmailTemplateScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateManyMutationInput,
    Prisma.EmailTemplateUncheckedUpdateManyWithoutProjectInput
  >;
};

export type EmailTemplateCreateManyUserInput = {
  id?: string;
  projectId: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EmailTemplateUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  project?: Prisma.ProjectUpdateOneRequiredWithoutEmailTemplatesNestedInput;
};

export type EmailTemplateUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  projectId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateCreateManyProjectInput = {
  id?: string;
  userId: string;
  name: string;
  subject: string;
  content: string;
  templateType?: string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type EmailTemplateUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutEmailTemplatesNestedInput;
};

export type EmailTemplateUncheckedUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateUncheckedUpdateManyWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  subject?: Prisma.StringFieldUpdateOperationsInput | string;
  content?: Prisma.StringFieldUpdateOperationsInput | string;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  variables?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isSystemTemplate?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EmailTemplateSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    subject?: boolean;
    content?: boolean;
    templateType?: boolean;
    variables?: boolean;
    isSystemTemplate?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["emailTemplate"]
>;

export type EmailTemplateSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    subject?: boolean;
    content?: boolean;
    templateType?: boolean;
    variables?: boolean;
    isSystemTemplate?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["emailTemplate"]
>;

export type EmailTemplateSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    projectId?: boolean;
    userId?: boolean;
    name?: boolean;
    subject?: boolean;
    content?: boolean;
    templateType?: boolean;
    variables?: boolean;
    isSystemTemplate?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["emailTemplate"]
>;

export type EmailTemplateSelectScalar = {
  id?: boolean;
  projectId?: boolean;
  userId?: boolean;
  name?: boolean;
  subject?: boolean;
  content?: boolean;
  templateType?: boolean;
  variables?: boolean;
  isSystemTemplate?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type EmailTemplateOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "projectId"
  | "userId"
  | "name"
  | "subject"
  | "content"
  | "templateType"
  | "variables"
  | "isSystemTemplate"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["emailTemplate"]
>;
export type EmailTemplateInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type EmailTemplateIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type EmailTemplateIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>;
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $EmailTemplatePayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "EmailTemplate";
  objects: {
    project: Prisma.$ProjectPayload<ExtArgs>;
    user: Prisma.$UserPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      projectId: string;
      userId: string;
      name: string;
      subject: string;
      content: string;
      templateType: string;
      variables: runtime.JsonValue;
      isSystemTemplate: boolean;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["emailTemplate"]
  >;
  composites: {};
};

export type EmailTemplateGetPayload<
  S extends boolean | null | undefined | EmailTemplateDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$EmailTemplatePayload, S>;

export type EmailTemplateCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
  EmailTemplateFindManyArgs,
  "select" | "include" | "distinct" | "omit"
> & {
  select?: EmailTemplateCountAggregateInputType | true;
};

export interface EmailTemplateDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["EmailTemplate"];
    meta: { name: "EmailTemplate" };
  };
  /**
   * Find zero or one EmailTemplate that matches the filter.
   * @param {EmailTemplateFindUniqueArgs} args - Arguments to find a EmailTemplate
   * @example
   * // Get one EmailTemplate
   * const emailTemplate = await prisma.emailTemplate.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EmailTemplateFindUniqueArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one EmailTemplate that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EmailTemplateFindUniqueOrThrowArgs} args - Arguments to find a EmailTemplate
   * @example
   * // Get one EmailTemplate
   * const emailTemplate = await prisma.emailTemplate.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EmailTemplateFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EmailTemplate that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateFindFirstArgs} args - Arguments to find a EmailTemplate
   * @example
   * // Get one EmailTemplate
   * const emailTemplate = await prisma.emailTemplate.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EmailTemplateFindFirstArgs>(
    args?: Prisma.SelectSubset<T, EmailTemplateFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EmailTemplate that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateFindFirstOrThrowArgs} args - Arguments to find a EmailTemplate
   * @example
   * // Get one EmailTemplate
   * const emailTemplate = await prisma.emailTemplate.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EmailTemplateFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, EmailTemplateFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more EmailTemplates that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EmailTemplates
   * const emailTemplates = await prisma.emailTemplate.findMany()
   *
   * // Get first 10 EmailTemplates
   * const emailTemplates = await prisma.emailTemplate.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const emailTemplateWithIdOnly = await prisma.emailTemplate.findMany({ select: { id: true } })
   *
   */
  findMany<T extends EmailTemplateFindManyArgs>(
    args?: Prisma.SelectSubset<T, EmailTemplateFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a EmailTemplate.
   * @param {EmailTemplateCreateArgs} args - Arguments to create a EmailTemplate.
   * @example
   * // Create one EmailTemplate
   * const EmailTemplate = await prisma.emailTemplate.create({
   *   data: {
   *     // ... data to create a EmailTemplate
   *   }
   * })
   *
   */
  create<T extends EmailTemplateCreateArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateCreateArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many EmailTemplates.
   * @param {EmailTemplateCreateManyArgs} args - Arguments to create many EmailTemplates.
   * @example
   * // Create many EmailTemplates
   * const emailTemplate = await prisma.emailTemplate.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends EmailTemplateCreateManyArgs>(
    args?: Prisma.SelectSubset<T, EmailTemplateCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many EmailTemplates and returns the data saved in the database.
   * @param {EmailTemplateCreateManyAndReturnArgs} args - Arguments to create many EmailTemplates.
   * @example
   * // Create many EmailTemplates
   * const emailTemplate = await prisma.emailTemplate.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many EmailTemplates and only return the `id`
   * const emailTemplateWithIdOnly = await prisma.emailTemplate.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends EmailTemplateCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, EmailTemplateCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a EmailTemplate.
   * @param {EmailTemplateDeleteArgs} args - Arguments to delete one EmailTemplate.
   * @example
   * // Delete one EmailTemplate
   * const EmailTemplate = await prisma.emailTemplate.delete({
   *   where: {
   *     // ... filter to delete one EmailTemplate
   *   }
   * })
   *
   */
  delete<T extends EmailTemplateDeleteArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one EmailTemplate.
   * @param {EmailTemplateUpdateArgs} args - Arguments to update one EmailTemplate.
   * @example
   * // Update one EmailTemplate
   * const emailTemplate = await prisma.emailTemplate.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends EmailTemplateUpdateArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more EmailTemplates.
   * @param {EmailTemplateDeleteManyArgs} args - Arguments to filter EmailTemplates to delete.
   * @example
   * // Delete a few EmailTemplates
   * const { count } = await prisma.emailTemplate.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends EmailTemplateDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, EmailTemplateDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EmailTemplates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EmailTemplates
   * const emailTemplate = await prisma.emailTemplate.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends EmailTemplateUpdateManyArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EmailTemplates and returns the data updated in the database.
   * @param {EmailTemplateUpdateManyAndReturnArgs} args - Arguments to update many EmailTemplates.
   * @example
   * // Update many EmailTemplates
   * const emailTemplate = await prisma.emailTemplate.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more EmailTemplates and only return the `id`
   * const emailTemplateWithIdOnly = await prisma.emailTemplate.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends EmailTemplateUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one EmailTemplate.
   * @param {EmailTemplateUpsertArgs} args - Arguments to update or create a EmailTemplate.
   * @example
   * // Update or create a EmailTemplate
   * const emailTemplate = await prisma.emailTemplate.upsert({
   *   create: {
   *     // ... data to create a EmailTemplate
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EmailTemplate we want to update
   *   }
   * })
   */
  upsert<T extends EmailTemplateUpsertArgs>(
    args: Prisma.SelectSubset<T, EmailTemplateUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__EmailTemplateClient<
    runtime.Types.Result.GetResult<
      Prisma.$EmailTemplatePayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of EmailTemplates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateCountArgs} args - Arguments to filter EmailTemplates to count.
   * @example
   * // Count the number of EmailTemplates
   * const count = await prisma.emailTemplate.count({
   *   where: {
   *     // ... the filter for the EmailTemplates we want to count
   *   }
   * })
   **/
  count<T extends EmailTemplateCountArgs>(
    args?: Prisma.Subset<T, EmailTemplateCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<
            T["select"],
            EmailTemplateCountAggregateOutputType
          >
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a EmailTemplate.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends EmailTemplateAggregateArgs>(
    args: Prisma.Subset<T, EmailTemplateAggregateArgs>
  ): Prisma.PrismaPromise<GetEmailTemplateAggregateType<T>>;

  /**
   * Group by EmailTemplate.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EmailTemplateGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends EmailTemplateGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EmailTemplateGroupByArgs["orderBy"] }
      : { orderBy?: EmailTemplateGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    "Field ",
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, EmailTemplateGroupByArgs, OrderByArg> &
      InputErrors
  ): {} extends InputErrors
    ? GetEmailTemplateGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the EmailTemplate model
   */
  readonly fields: EmailTemplateFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EmailTemplate.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EmailTemplateClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__ProjectClient<
    | runtime.Types.Result.GetResult<
        Prisma.$ProjectPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<
        Prisma.$UserPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the EmailTemplate model
 */
export interface EmailTemplateFieldRefs {
  readonly id: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly projectId: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly userId: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly name: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly subject: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly content: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly templateType: Prisma.FieldRef<"EmailTemplate", "String">;
  readonly variables: Prisma.FieldRef<"EmailTemplate", "Json">;
  readonly isSystemTemplate: Prisma.FieldRef<"EmailTemplate", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"EmailTemplate", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"EmailTemplate", "DateTime">;
}

// Custom InputTypes
/**
 * EmailTemplate findUnique
 */
export type EmailTemplateFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * Filter, which EmailTemplate to fetch.
   */
  where: Prisma.EmailTemplateWhereUniqueInput;
};

/**
 * EmailTemplate findUniqueOrThrow
 */
export type EmailTemplateFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * Filter, which EmailTemplate to fetch.
   */
  where: Prisma.EmailTemplateWhereUniqueInput;
};

/**
 * EmailTemplate findFirst
 */
export type EmailTemplateFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * Filter, which EmailTemplate to fetch.
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EmailTemplates to fetch.
   */
  orderBy?:
    | Prisma.EmailTemplateOrderByWithRelationInput
    | Prisma.EmailTemplateOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EmailTemplates.
   */
  cursor?: Prisma.EmailTemplateWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EmailTemplates from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EmailTemplates.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EmailTemplates.
   */
  distinct?:
    | Prisma.EmailTemplateScalarFieldEnum
    | Prisma.EmailTemplateScalarFieldEnum[];
};

/**
 * EmailTemplate findFirstOrThrow
 */
export type EmailTemplateFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * Filter, which EmailTemplate to fetch.
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EmailTemplates to fetch.
   */
  orderBy?:
    | Prisma.EmailTemplateOrderByWithRelationInput
    | Prisma.EmailTemplateOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EmailTemplates.
   */
  cursor?: Prisma.EmailTemplateWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EmailTemplates from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EmailTemplates.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EmailTemplates.
   */
  distinct?:
    | Prisma.EmailTemplateScalarFieldEnum
    | Prisma.EmailTemplateScalarFieldEnum[];
};

/**
 * EmailTemplate findMany
 */
export type EmailTemplateFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * Filter, which EmailTemplates to fetch.
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EmailTemplates to fetch.
   */
  orderBy?:
    | Prisma.EmailTemplateOrderByWithRelationInput
    | Prisma.EmailTemplateOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing EmailTemplates.
   */
  cursor?: Prisma.EmailTemplateWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EmailTemplates from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EmailTemplates.
   */
  skip?: number;
  distinct?:
    | Prisma.EmailTemplateScalarFieldEnum
    | Prisma.EmailTemplateScalarFieldEnum[];
};

/**
 * EmailTemplate create
 */
export type EmailTemplateCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * The data needed to create a EmailTemplate.
   */
  data: Prisma.XOR<
    Prisma.EmailTemplateCreateInput,
    Prisma.EmailTemplateUncheckedCreateInput
  >;
};

/**
 * EmailTemplate createMany
 */
export type EmailTemplateCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many EmailTemplates.
   */
  data:
    | Prisma.EmailTemplateCreateManyInput
    | Prisma.EmailTemplateCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * EmailTemplate createManyAndReturn
 */
export type EmailTemplateCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * The data used to create many EmailTemplates.
   */
  data:
    | Prisma.EmailTemplateCreateManyInput
    | Prisma.EmailTemplateCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * EmailTemplate update
 */
export type EmailTemplateUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * The data needed to update a EmailTemplate.
   */
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateInput,
    Prisma.EmailTemplateUncheckedUpdateInput
  >;
  /**
   * Choose, which EmailTemplate to update.
   */
  where: Prisma.EmailTemplateWhereUniqueInput;
};

/**
 * EmailTemplate updateMany
 */
export type EmailTemplateUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update EmailTemplates.
   */
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateManyMutationInput,
    Prisma.EmailTemplateUncheckedUpdateManyInput
  >;
  /**
   * Filter which EmailTemplates to update
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * Limit how many EmailTemplates to update.
   */
  limit?: number;
};

/**
 * EmailTemplate updateManyAndReturn
 */
export type EmailTemplateUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * The data used to update EmailTemplates.
   */
  data: Prisma.XOR<
    Prisma.EmailTemplateUpdateManyMutationInput,
    Prisma.EmailTemplateUncheckedUpdateManyInput
  >;
  /**
   * Filter which EmailTemplates to update
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * Limit how many EmailTemplates to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * EmailTemplate upsert
 */
export type EmailTemplateUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * The filter to search for the EmailTemplate to update in case it exists.
   */
  where: Prisma.EmailTemplateWhereUniqueInput;
  /**
   * In case the EmailTemplate found by the `where` argument doesn't exist, create a new EmailTemplate with this data.
   */
  create: Prisma.XOR<
    Prisma.EmailTemplateCreateInput,
    Prisma.EmailTemplateUncheckedCreateInput
  >;
  /**
   * In case the EmailTemplate was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.EmailTemplateUpdateInput,
    Prisma.EmailTemplateUncheckedUpdateInput
  >;
};

/**
 * EmailTemplate delete
 */
export type EmailTemplateDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
  /**
   * Filter which EmailTemplate to delete.
   */
  where: Prisma.EmailTemplateWhereUniqueInput;
};

/**
 * EmailTemplate deleteMany
 */
export type EmailTemplateDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which EmailTemplates to delete
   */
  where?: Prisma.EmailTemplateWhereInput;
  /**
   * Limit how many EmailTemplates to delete.
   */
  limit?: number;
};

/**
 * EmailTemplate without action
 */
export type EmailTemplateDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the EmailTemplate
   */
  select?: Prisma.EmailTemplateSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EmailTemplate
   */
  omit?: Prisma.EmailTemplateOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EmailTemplateInclude<ExtArgs> | null;
};
