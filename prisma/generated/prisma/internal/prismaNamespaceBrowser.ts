/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser";

export type * from "../models";
export type * from "./prismaNamespace";

export const Decimal = runtime.Decimal;

export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.DbNull,
  JsonNull: runtime.objectEnumValues.classes.JsonNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.JsonNull,
  AnyNull: runtime.objectEnumValues.classes.AnyNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.AnyNull,
};
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull;
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull;
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull;

export const ModelName = {
  User: "User",
  Session: "Session",
  Account: "Account",
  Verification: "Verification",
  Organization: "Organization",
  OrganizationMember: "OrganizationMember",
  Project: "Project",
  ProjectMember: "ProjectMember",
  OnboardingProgress: "OnboardingProgress",
  OnboardingStepLog: "OnboardingStepLog",
  Campaign: "Campaign",
  Subscriber: "Subscriber",
  AutomationFlow: "AutomationFlow",
  EmailTemplate: "EmailTemplate",
  AnalyticsEvent: "AnalyticsEvent",
  Notification: "Notification",
  Integration: "Integration",
} as const;

export type ModelName = (typeof ModelName)[keyof typeof ModelName];

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: "ReadUncommitted",
  ReadCommitted: "ReadCommitted",
  RepeatableRead: "RepeatableRead",
  Serializable: "Serializable",
} as const);

export type TransactionIsolationLevel =
  (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel];

export const UserScalarFieldEnum = {
  id: "id",
  email: "email",
  name: "name",
  firstName: "firstName",
  lastName: "lastName",
  companyName: "companyName",
  image: "image",
  role: "role",
  phone: "phone",
  timezone: "timezone",
  emailVerified: "emailVerified",
  onboardingCompleted: "onboardingCompleted",
  notificationPreferences: "notificationPreferences",
  preferences: "preferences",
  lastActiveAt: "lastActiveAt",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type UserScalarFieldEnum =
  (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum];

export const SessionScalarFieldEnum = {
  id: "id",
  token: "token",
  projectId: "projectId",
  expiresAt: "expiresAt",
  userId: "userId",
  ipAddress: "ipAddress",
  userAgent: "userAgent",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  lastActivityAt: "lastActivityAt",
} as const;

export type SessionScalarFieldEnum =
  (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum];

export const AccountScalarFieldEnum = {
  id: "id",
  accountId: "accountId",
  providerId: "providerId",
  userId: "userId",
  accessToken: "accessToken",
  refreshToken: "refreshToken",
  idToken: "idToken",
  accessTokenExpiresAt: "accessTokenExpiresAt",
  refreshTokenExpiresAt: "refreshTokenExpiresAt",
  scope: "scope",
  password: "password",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type AccountScalarFieldEnum =
  (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum];

export const VerificationScalarFieldEnum = {
  id: "id",
  identifier: "identifier",
  value: "value",
  expiresAt: "expiresAt",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type VerificationScalarFieldEnum =
  (typeof VerificationScalarFieldEnum)[keyof typeof VerificationScalarFieldEnum];

export const OrganizationScalarFieldEnum = {
  id: "id",
  name: "name",
  slug: "slug",
  description: "description",
  logoUrl: "logoUrl",
  settings: "settings",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type OrganizationScalarFieldEnum =
  (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum];

export const OrganizationMemberScalarFieldEnum = {
  id: "id",
  organizationId: "organizationId",
  userId: "userId",
  role: "role",
  permissions: "permissions",
  invitedBy: "invitedBy",
  invitedAt: "invitedAt",
  joinedAt: "joinedAt",
  isActive: "isActive",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type OrganizationMemberScalarFieldEnum =
  (typeof OrganizationMemberScalarFieldEnum)[keyof typeof OrganizationMemberScalarFieldEnum];

export const ProjectScalarFieldEnum = {
  id: "id",
  organizationId: "organizationId",
  name: "name",
  description: "description",
  slug: "slug",
  settings: "settings",
  isActive: "isActive",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type ProjectScalarFieldEnum =
  (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum];

export const ProjectMemberScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  userId: "userId",
  role: "role",
  permissions: "permissions",
  invitedBy: "invitedBy",
  invitedAt: "invitedAt",
  joinedAt: "joinedAt",
  isActive: "isActive",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type ProjectMemberScalarFieldEnum =
  (typeof ProjectMemberScalarFieldEnum)[keyof typeof ProjectMemberScalarFieldEnum];

export const OnboardingProgressScalarFieldEnum = {
  id: "id",
  userId: "userId",
  currentStep: "currentStep",
  completedSteps: "completedSteps",
  totalSteps: "totalSteps",
  completionPercentage: "completionPercentage",
  isCompleted: "isCompleted",
  startedAt: "startedAt",
  completedAt: "completedAt",
  lastActivityAt: "lastActivityAt",
  stepData: "stepData",
  timeSpentSeconds: "timeSpentSeconds",
  sessionCount: "sessionCount",
  abandonedAt: "abandonedAt",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type OnboardingProgressScalarFieldEnum =
  (typeof OnboardingProgressScalarFieldEnum)[keyof typeof OnboardingProgressScalarFieldEnum];

export const OnboardingStepLogScalarFieldEnum = {
  id: "id",
  onboardingId: "onboardingId",
  stepName: "stepName",
  action: "action",
  timeSpentSeconds: "timeSpentSeconds",
  stepData: "stepData",
  userAgent: "userAgent",
  ipAddress: "ipAddress",
  createdAt: "createdAt",
} as const;

export type OnboardingStepLogScalarFieldEnum =
  (typeof OnboardingStepLogScalarFieldEnum)[keyof typeof OnboardingStepLogScalarFieldEnum];

export const CampaignScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  userId: "userId",
  name: "name",
  description: "description",
  type: "type",
  status: "status",
  settings: "settings",
  content: "content",
  totalSubscribers: "totalSubscribers",
  activeSubscribers: "activeSubscribers",
  conversionRate: "conversionRate",
  scheduledAt: "scheduledAt",
  launchedAt: "launchedAt",
  completedAt: "completedAt",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type CampaignScalarFieldEnum =
  (typeof CampaignScalarFieldEnum)[keyof typeof CampaignScalarFieldEnum];

export const SubscriberScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  campaignId: "campaignId",
  email: "email",
  firstName: "firstName",
  lastName: "lastName",
  phone: "phone",
  status: "status",
  tags: "tags",
  customFields: "customFields",
  source: "source",
  optedInAt: "optedInAt",
  unsubscribedAt: "unsubscribedAt",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type SubscriberScalarFieldEnum =
  (typeof SubscriberScalarFieldEnum)[keyof typeof SubscriberScalarFieldEnum];

export const AutomationFlowScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  userId: "userId",
  name: "name",
  description: "description",
  triggerType: "triggerType",
  triggerConfig: "triggerConfig",
  actions: "actions",
  conditions: "conditions",
  status: "status",
  totalTriggered: "totalTriggered",
  totalCompleted: "totalCompleted",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type AutomationFlowScalarFieldEnum =
  (typeof AutomationFlowScalarFieldEnum)[keyof typeof AutomationFlowScalarFieldEnum];

export const EmailTemplateScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  userId: "userId",
  name: "name",
  subject: "subject",
  content: "content",
  templateType: "templateType",
  variables: "variables",
  isSystemTemplate: "isSystemTemplate",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type EmailTemplateScalarFieldEnum =
  (typeof EmailTemplateScalarFieldEnum)[keyof typeof EmailTemplateScalarFieldEnum];

export const AnalyticsEventScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  userId: "userId",
  eventType: "eventType",
  eventName: "eventName",
  eventData: "eventData",
  subscriberId: "subscriberId",
  campaignId: "campaignId",
  automationId: "automationId",
  sessionId: "sessionId",
  userAgent: "userAgent",
  ipAddress: "ipAddress",
  referrer: "referrer",
  utmSource: "utmSource",
  utmMedium: "utmMedium",
  utmCampaign: "utmCampaign",
  utmTerm: "utmTerm",
  utmContent: "utmContent",
  createdAt: "createdAt",
} as const;

export type AnalyticsEventScalarFieldEnum =
  (typeof AnalyticsEventScalarFieldEnum)[keyof typeof AnalyticsEventScalarFieldEnum];

export const NotificationScalarFieldEnum = {
  id: "id",
  userId: "userId",
  projectId: "projectId",
  type: "type",
  title: "title",
  message: "message",
  data: "data",
  isRead: "isRead",
  readAt: "readAt",
  priority: "priority",
  channel: "channel",
  createdAt: "createdAt",
} as const;

export type NotificationScalarFieldEnum =
  (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum];

export const IntegrationScalarFieldEnum = {
  id: "id",
  projectId: "projectId",
  userId: "userId",
  name: "name",
  type: "type",
  config: "config",
  credentials: "credentials",
  isActive: "isActive",
  lastSyncAt: "lastSyncAt",
  syncStatus: "syncStatus",
  errorMessage: "errorMessage",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type IntegrationScalarFieldEnum =
  (typeof IntegrationScalarFieldEnum)[keyof typeof IntegrationScalarFieldEnum];

export const SortOrder = {
  asc: "asc",
  desc: "desc",
} as const;

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];

export const JsonNullValueInput = {
  JsonNull: JsonNull,
} as const;

export type JsonNullValueInput =
  (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput];

export const QueryMode = {
  default: "default",
  insensitive: "insensitive",
} as const;

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode];

export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull,
} as const;

export type JsonNullValueFilter =
  (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter];

export const NullsOrder = {
  first: "first",
  last: "last",
} as const;

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder];
